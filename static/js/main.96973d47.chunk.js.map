{"version":3,"sources":["canvas/arrow.tsx","fields/choice-field.tsx","utils.ts","step/step.tsx","fields/primitive-field.tsx","node/custom-node.tsx","canvas/canvas.tsx","canvas/persistence.ts","canvas/config-view.tsx","node/node-model.tsx","canvas/store.tsx","properties/properties-table.tsx","properties/properties-view.tsx","step/custom_parser.ts","step/gemma-templates.ts","grammar/SimpleBooleanLexer.ts","grammar/SimpleBooleanParser.ts","step/signal.tsx","step/antlr_parser.ts","step/transition.tsx","codegen/file-system.ts","node/node.tsx","step/openxml-templates.ts","step/macro-step.ts","step/gemma.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["triangleFromCenter","x","y","height","width","y0","ArrowView","observer","connection","rootStore","useStore","isHidden","showHidden","firstArrow","from","to","isSelected","connectionStartPosition","data","undefined","b","top","bottom","left","right","getStartPositionConnection","x1","y1","x2","y2","points","connectionPoints","Triangle","dy","dx","changeX","changeY","withNodeDelta","m","Math","abs","deltaX","xa","ya","degrees","atan2","PI","d","transform","onClick","_","selectConnection","innerPoints","map","p","index","push","cx","cy","r","fill","key","lineAndPoint","style","strokeWidth","stroke","opacity","event","shiftKey","floor","length","ceil","xm","ym","RectAndText","texts","connectionText","rectFill","padding","React","useState","textRefs","setTextRefs","curr","reduce","c","text","prev","setPrev","fullbbox","getBBox","max","useEffect","id","setTimeout","clearTimeout","xPrev","cursor","t","bbox","ref","e","nn","ButtonsDiv","styled","div","ChoiceFieldSpec","v","choices","default","onChange","isObservableMap","keys","size","Symbol","toStringTag","mobxProp","types","optional","string","plotField","name","model","Array","Object","value","setValue","this","get","Error","ChoiceField","maxButton","Select","target","autoWidth","minHeight","marginBottom","disabled","k","MenuItem","ButtonGroup","color","aria-label","buttonStyle","background","Button","defaultResizeEnable","topRight","bottomRight","bottomLeft","topLeft","resizableEnable","f","entries","downloadToClient","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","importJson","files","Promise","resolve","window","alert","reader","FileReader","onload","result","onabort","onerror","readAsText","StepType","ProcedureType","StrFieldSpec","maxLength","minLength","multiline","errors","set","delete","className","TextField","fullWidth","margin","inputProps","textAlign","error","BoolFieldSpec","required","boolean","Switch","checked","BaseStep","node","l","nInputs","Number","POSITIVE_INFINITY","observable","CONTAINER","spec","isInitial","SIMPLE","values","filter","toString","View","children","_color","A","D","F","position","border","family","flex","innerStyle","wrapper","nodeHeight","ENCLOSING","display","MACRO","borderTop","borderBottom","borderRight","borderLeft","description","reaction","otherInitial","automationSystem","steps","find","s","n","inputNodes","every","aFamily","dFamily","fFamily","graph","globalData","outputs","sort","priority","_transitions","transitions","concat","delta","parseInt","computed","EnclosingDecoration","customPortFactory","cb","initialConfig","AbstractModelFactory","config","CustomPortModel","PortModelAlignment","LEFT","alignment","DefaultLinkModel","PortModel","CustomNodeFactory","CustomNode","engine","CustomNodeModel","AbstractReactFactory","step","addPort","TOP","BOTTOM","RIGHT","NodeModel","Ports","port","getPort","Port","S","DefaultPortModel","DBStores","MainCanvas","ops","nodes","useMemo","createEngine","registerDefaultZoomCanvasAction","registerDefaultDeleteItemsAction","getLinkFactories","registerFactory","RightAngleLinkFactory","getPortFactories","getNodeFactories","DiagramModel","node1","setPosition","node2","DefaultNodeModel","port2","node3","port3","node4","port4","pathfinding","getFactory","PathFindingLinkFactory","NAME","link1","link","addLabel","DefaultLabelModel","label","link2","addAll","setModel","console","log","overflow","outline","tabIndex","onMouseMove","selectedPointIndex","getElementById","focus","onKeyUp","selectedConnection","splice","CanvasView","flatMap","op","inputs","ConfigView","isWarningsDialogOpen","setIsWarningsDialogOpen","isDownloadMenuOpen","setIsDownloadMenuOpen","isCodesysVersionOpen","setIsCodesysVersionOpen","anchorElem","setAnchorElem","connections","forEach","Map","orderedOps","counts","withDependencies","numProcessed","slice","outs","dep","toggleDownloadMenu","toggleCodesysVersion","tryDownload","format","codesysVersion","warnings","some","downloadSourceCode","minWidth","defaultSize","boxShadow","enable","Menu","anchorEl","keepMounted","open","onClose","paddingTop","paddingBottom","fontSize","paddingLeft","justifyContent","stopPropagation","toggleDialog","accept","version","setCodesysVersion","generateMainFile","CodesysVesionDialog","setVersion","versionInput","setVersionInput","setError","prevOpen","setPrevOpen","updateError","hasError","match","send","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","replace","helperText","inputRef","onKeyDown","DialogActions","openDB","upgrade","db","createObjectStore","keyPath","autoIncrement","createIndex","IndexedDB","getKeyFromConnection","conn","connectionWithKey","graphKey","assign","getAll","put","tx","transaction","objectStore","dbKey","openCursor","continue","done","all","getAllFromIndex","_g","store","add","path","updateMany","close","clear","items","val","item","ConnModel","dataBuilder","json","array","toJson","resizeObserver","element","setElement","setSize","getBoundingClientRect","disconnect","ResizeObserver","observe","action","rect","RootStoreModel","builders","hideOnDelete","saveModel","clearDB","updateGraph","addNodes","addConnections","downloadModel","JSON","stringify","_addToZip","root","dir","newRoot","folder","when","zip","JSZip","sourceCode","generateSourceCode","generateAsync","generateProjectInFormat","graphBuilder","v4","nodeBuilder","addConnection","selectedNode","next","_n","initState","addEventListener","mouseMoveEvent","getElementsByClassName","clientX","clientY","localStorage","getItem","setItem","nodeType","pos","canAddNode","_in","remove","_out","selectingInputFor","_selectingInputKeyListener","connectionBuilder","addOutput","removeEventListener","ev","PropertiesTable","PropertiesTableStyled","PropertiesTableNode","self","alignItems","variant","table","PropertiesView","inner","maxHeight","maxWidth","backgroundColor","IconButton","activateNode","removeNode","icon","activateConnection","removeConnection","ConnectionView","VarId","H","textOrEmpty","cond","memoryTransitionSuffix","templateCondition","expressionTokens","tok","savedSignalsWithMemory","withMemory","isNaN","parseFloat","generatingXML","join","templateGemmaGrafcetSimpleStep","isNested","templateTransitions","templateGemmaGrafcetNestedStep","signalsWithMemory","sm","behaviour","templateFBEntry","condition","_isInner","innerTransitionsLength","isNegated","_evaluateComplete","templateGemmaGrafcet","initialStep","gemmaVariables","gemmaBehaviour","prefix","SimpleBooleanLexer","input","_interp","LexerATNSimulator","_ATN","VOCABULARY","ruleNames","_serializedATN","channelNames","modeNames","__ATN","ATNDeserializer","deserialize","Utils","Lexer","AND","OR","NOT","TRUE","FALSE","GT","GE","LT","DIF","LE","EQ","LPAREN","RPAREN","DECIMAL","IDENTIFIER","WS","_LITERAL_NAMES","_SYMBOLIC_NAMES","VocabularyImpl","SimpleBooleanParser","ParserATNSimulator","_localctx","ParseContext","_ctx","state","enterRule","RULE_parse","enterOuterAlt","expression","EOF","re","RecognitionException","exception","_errHandler","reportError","recover","exitRule","ExpressionContext","RULE_expression","sync","interpreter","adaptivePredict","_input","OrExpressionContext","_left","expressionAnd","_right","AndParentExpressionContext","ExpressionAndContext","RULE_expressionAnd","AndExpressionContext","expressionSimple","SimpleExpressionContext","ExpressionSimpleContext","RULE_expressionSimple","NotExpressionContext","ComparatorExpressionContext","numExpression","_op","comparator","IdentifierExpressionContext","ParenExpressionContext","NumExpressionContext","RULE_numExpression","LA","IdentifierNumExpressionContext","DecimalExpressionContext","NoViableAltException","_la","ComparatorContext","RULE_comparator","recoverInline","Token","matchedEOF","reportMatch","consume","Parser","SignalTypeBase","SignalType","SignalTypeSize","parent","invokingState","getRuleContext","getToken","listener","enterParse","exitParse","visitor","visitParse","visitChildren","ParserRuleContext","ctx","copyFrom","enterOrExpression","exitOrExpression","visitOrExpression","enterAndParentExpression","exitAndParentExpression","visitAndParentExpression","enterAndExpression","exitAndExpression","visitAndExpression","enterSimpleExpression","exitSimpleExpression","visitSimpleExpression","enterNotExpression","exitNotExpression","visitNotExpression","i","getRuleContexts","enterComparatorExpression","exitComparatorExpression","visitComparatorExpression","enterIdentifierExpression","exitIdentifierExpression","visitIdentifierExpression","enterParenExpression","exitParenExpression","visitParenExpression","enterIdentifierNumExpression","exitIdentifierNumExpression","visitIdentifierNumExpression","enterDecimalExpression","exitDecimalExpression","visitDecimalExpression","tryGetToken","enterComparator","exitComparator","visitComparator","ErrorVisitor","signals","isInvalid","boolSignals","aggregate","nextResult","valid","includes","numSignals","AbstractParseTreeVisitor","signalSizeMap","bool","int","uint","real","SignalRow","signal","showDelete","removeSignal","TableRow","TableCell","Tooltip","title","setTypeBase","typeBase","typeSize","defaultValue","align","regexSignalDefaultValid","regex","message","Signal","bound","typePrim","base","lreal","startsWith","charAt","signalTypeToPrimitives","sizeStr","substring","findIndex","s2","validator","Name","test","Transition","conditionExpression","priorityChoices","priorityUi","setPriority","ConditionInput","parsedExpression","marginTop","err","signalsInCondition","token","MemCheckbox","ObservableMap","hasNegation","textDecoration","_jsonSignals","omit","addSignal","prevToken","strPrev","getCustomTokens","gemma","inputStream","CharStreams","fromString","lexer","tokenStream","CommonTokenStream","tree","parse","countFunctionsVisitor","visit","toProcess","pop","childCount","getChild","parseBoolExpression","_signals","Set","hiddenTransitions","ind","_update","Checkbox","paddingRight","prevIndex","_spanStyleRef","useRef","font","whiteSpace","textIndex","repeat","onScroll","current","scrollTo","currentTarget","scrollTop","caretColor","spellCheck","SourceItem","SourceFile","SourceDirectory","StyledNode","NodeView","params","selectingInput","isValidInput","useCallback","assignInput","selectNode","bounds","variableDefinition","toUpperCase","objectIdData","objectId","projectTemplate","projectHeader","tasks","gemmaImplementation","libraries","device","projectStructure","now","Date","toISOString","GemmaGrafcet","setShowDelete","flexDirection","Table","stickyHeader","TableHead","TableBody","alignSelf","w","h","_d","isArray","fromJson","_selected","_selectedTrans","addNode","setName","main","globals","trim","variables","signalsErrors","unnamedSignals","isUnnamed","hasInitialStep","stepsWithNoInputTransitions","stepsWithNoOutputTransitions","stepsErrors","Steps","Transitions","Signals","gemmaBuilders","g","makeBaseGemmaTemplate","mm","storeContext","createContext","useContext","App","globalDB","setDB","setStore","_isReset","resetStore","createIndexedDB","then","fetchGraphs","graphs","loadGraph","graphExt","_store","Provider","TopMenu","ToggleShowHidden","isResetDialogOpen","setIsResetDialogOpen","htmlFor","WarningsDialog","sectionTitle","Boolean","location","hostname","library","faChevronDown","faChevronUp","faTrashAlt","faEye","faEyeSlash","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.96973d47.chunk.js","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { NodeModel, ConnModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\n\nexport type ArrowModel = {\n  from: NodeModel<any, any, any>;\n  to: NodeModel<any, any, any>;\n};\n\ntype ArrowViewProps = { connection: ConnModel<any, any, any> };\n\nconst triangleFromCenter = (\n  x: number,\n  y: number,\n  height: number = 14,\n  width: number = 14\n) => {\n  const y0 = y + height;\n  return `M${x} ${y} L${x - width / 2} ${y0} L${x + width / 2} ${y0} Z`;\n};\n\nconst getStartPositionConnection = (\n  from: NodeModel<any, any, any>\n): { x: number; y: number } => {\n  const connectionStartPosition = (from.data as NodeData<any, any, any>)\n    .connectionStartPosition;\n\n  if (connectionStartPosition !== undefined) {\n    const b = connectionStartPosition();\n    if (b !== undefined) {\n      let x = from.x;\n      let y = from.y;\n      if (\"top\" in b) {\n        y += b.top;\n      } else {\n        y += from.height - b.bottom;\n      }\n\n      if (\"left\" in b) {\n        x += b.left;\n      } else {\n        y += from.width - b.right;\n      }\n      return { x, y };\n    }\n  }\n  return { x: from.x + from.width / 2, y: from.y + from.height / 2 };\n};\n\ntype TwoPoints = {\n  y1: number;\n  x1: number;\n  x2: number;\n  y2: number;\n};\n\nexport const ArrowView: React.FC<ArrowViewProps> = observer(\n  ({ connection }: ArrowViewProps) => {\n    const rootStore = useStore();\n\n    if (connection.isHidden && !rootStore.showHidden) {\n      return <></>;\n    }\n    const { from, to, isSelected } = connection;\n    let { x: x1, y: y1 } = getStartPositionConnection(from);\n\n    const [x2, y2] = [to.x + to.width / 2, to.y + to.height / 2];\n\n    // const getRelative = (event: {\n    //   clientX: number;\n    //   clientY: number;\n    // }): { x: number; y: number } => {\n    //   const canvasScrollBbox = document\n    //     .getElementsByClassName(\"canvas-wrapper\")[0]!\n    //     .getBoundingClientRect();\n    //   return {\n    //     x: event.clientX - canvasScrollBbox.left,\n    //     y: event.clientY - canvasScrollBbox.top,\n    //   };\n    // };\n\n    const addInnerPoint = (\n      event: { clientX: number; clientY: number },\n      index: number\n    ) => {\n      // connection.innerPoints.splice(index, 0, getRelative(event));\n    };\n\n    const points: JSX.Element[] = [];\n    const connectionPoints = { y1, x1, x2, y2 };\n    const Triangle = ({\n      y1,\n      x1,\n      x2,\n      y2,\n      withNodeDelta,\n    }: TwoPoints & { withNodeDelta: boolean }) => {\n      const dy = y2 - y1;\n      const dx = x2 - x1;\n\n      let changeX = 0;\n      let changeY = 0;\n      if (withNodeDelta) {\n        if (dx === 0) {\n          changeX = 0;\n          changeY = ((y2 > y1 ? 1 : -1) * to.height) / 2;\n        } else if (dy === 0) {\n          changeY = 0;\n          changeX = ((x2 > x1 ? 1 : -1) * to.width) / 2;\n        } else {\n          const m = Math.abs(dy / dx);\n          const [deltaX, deltaY] =\n            m > to.height / to.width\n              ? [to.height / 2 / m, to.height / 2]\n              : [to.width / 2, (to.width / 2) * m];\n          changeY = (y2 > y1 ? 1 : -1) * deltaY;\n          changeX = (x2 > x1 ? 1 : -1) * deltaX;\n        }\n      }\n      const xa = x2 - changeX;\n      const ya = y2 - changeY;\n      const degrees = 90 + (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n\n      return (\n        <path\n          d={triangleFromCenter(xa, ya)}\n          transform={`rotate(${degrees} ${xa} ${ya})`}\n          onClick={(_) => rootStore.selectConnection(connection)}\n        />\n      );\n    };\n    const connectionText = ({ y1, x1, x2, y2 }: TwoPoints) => {\n      const [xm, ym] = [(x1 + x2) / 2, (y1 + y2) / 2];\n      return (\n        <RectAndText\n          connection={connection}\n          texts={connection.data.connectionText}\n          x={xm}\n          rectFill={isSelected ? \"#eeedff\" : \"#eee\"}\n          y={ym}\n          onClick={(_) => rootStore.selectConnection(connection)}\n        />\n      );\n    };\n    let firstArrow;\n\n    return (\n      <>\n        <>\n          {connection.innerPoints.map((p, index) => {\n            points.push(\n              <circle\n                cx={p.x}\n                cy={p.y}\n                r=\"1.1\"\n                fill=\"black\"\n                key={`${connection.from.key}${connection.to.key}${index}`}\n                onClick={(_) => {\n                  // connection.graph.selectedConnection = connection;\n                  // if (connection.graph.selectedPointIndex !== undefined) {\n                  //   connection.graph.selectedPointIndex = undefined;\n                  // } else {\n                  //   connection.graph.selectedPointIndex = index;\n                  // }\n                }}\n              />\n            );\n            const key = `${connection.from.key}${connection.to.key}${\n              index - 1\n            }${index}`;\n\n            const lineAndPoint = (\n              <path\n                key={key}\n                style={{\n                  strokeWidth: 3,\n                  stroke: \"black\",\n                  opacity: connection.isHidden ? 0.07 : 1,\n                }}\n                d={`M${x1} ${y1} L${p.x} ${p.y}`}\n                onClick={(event) => {\n                  if (event.shiftKey) {\n                    addInnerPoint(event, index);\n                  } else {\n                    rootStore.selectConnection(connection);\n                  }\n                }}\n              />\n            );\n            if (index === 0) {\n              firstArrow = (\n                <Triangle\n                  key={key + \"t\"}\n                  x1={x1}\n                  y1={y1}\n                  x2={p.x}\n                  y2={p.y}\n                  withNodeDelta={false}\n                />\n              );\n            }\n\n            x1 = p.x;\n            y1 = p.y;\n            if (index === Math.floor(connection.innerPoints.length / 2 - 0.1)) {\n              connectionPoints.x1 = x1;\n              connectionPoints.y1 = y1;\n            } else if (\n              index === Math.ceil(connection.innerPoints.length / 2 - 0.1)\n            ) {\n              connectionPoints.x2 = x1;\n              connectionPoints.y2 = y1;\n            }\n            return lineAndPoint;\n          })}\n        </>\n        {!connection.isHidden && firstArrow}\n        <path\n          style={{\n            strokeWidth: 3,\n            stroke: \"black\",\n            opacity: connection.isHidden ? 0.07 : 1,\n          }}\n          d={`M${x1} ${y1} L${x2} ${y2}`}\n          onClick={(event) => {\n            if (event.shiftKey) {\n              addInnerPoint(event, connection.innerPoints.length);\n            } else {\n              rootStore.selectConnection(connection);\n            }\n          }}\n        />\n        {!connection.isHidden &&\n          Triangle({ x1, y1, x2, y2, withNodeDelta: true })}\n        {!connection.isHidden && points}\n        {!connection.isHidden && connectionText(connectionPoints)}\n      </>\n    );\n  }\n);\n\nconst RectAndText: React.FC<{\n  texts: { text: string; style?: React.CSSProperties }[];\n  connection: ConnModel<any, any, any>;\n  x: number;\n  y: number;\n  rectFill?: string;\n  padding?: number;\n  onClick: (event: React.MouseEvent<any, MouseEvent>) => void;\n}> = observer(\n  ({\n    texts,\n    x: xm,\n    y: ym,\n    rectFill = \"#eee\",\n    padding = 3,\n    onClick,\n    connection,\n  }) => {\n    const [textRefs, setTextRefs] = React.useState<SVGTextElement[]>([]);\n    const curr = texts.reduce((p, c) => p + c.text, \"\");\n    const [prev, setPrev] = React.useState(curr);\n    const fullbbox = textRefs.reduce(\n      (p, c) => {\n        if (c === undefined) {\n          return p;\n        }\n        const b = c.getBBox();\n\n        return {\n          width: p.width + b.width,\n          height: Math.max(p.height, b.height),\n        };\n      },\n      { width: 0, height: 0 }\n    );\n    React.useEffect(() => {\n      if (prev !== curr) {\n        const id = setTimeout(() => setPrev(curr), 0);\n        return () => clearTimeout(id);\n      }\n    });\n    let xPrev = 0;\n    return (\n      <>\n        <rect\n          width={fullbbox.width + padding * 2}\n          height={fullbbox.height + padding * 2}\n          x={xm - fullbbox.width / 2 - padding}\n          y={ym - fullbbox.height + padding}\n          fill={rectFill}\n          onClick={onClick}\n          style={{ cursor: \"pointer\" }}\n        ></rect>\n        {texts.map((t, index) => {\n          const bbox = textRefs[index]?.getBBox();\n          const x =\n            (fullbbox !== undefined ? xm - fullbbox.width / 2 : xm) + xPrev;\n          xPrev += bbox !== undefined ? bbox.width : 0;\n          return (\n            <text\n              key={`${connection.from.key}${connection.to.key}${index}`}\n              x={x}\n              y={ym + 2}\n              fill=\"black\"\n              ref={(e) => {\n                if (e === null || e === undefined || !!textRefs[index]) return;\n                const nn = [...textRefs];\n                nn[index] = e;\n                setTextRefs(nn);\n              }}\n              onClick={onClick}\n              style={{ cursor: \"pointer\", ...(t.style ?? {}) }}\n            >\n              {t.text}\n            </text>\n          );\n        })}\n      </>\n    );\n  }\n);\n\n// const getBoxIntersection = (from: OperationModelT, to: OperationModelT) => {\n//   const fwidth = from.width || 60;\n//   const fheight = from.width || 60;\n//   const twidth = to.width || 60;\n//   const theight = to.width || 60;\n\n//   const [x1, y1, x2, y2] = [\n//     from.x + fwidth / 2,\n//     from.y + fheight / 2,\n//     to.x + twidth / 2,\n//     to.y + theight / 2\n//   ];\n//   const dy = y2 - y1;\n//   const dx = x2 - x1;\n//   if (dx === 0 || dy === 0) {\n//   }\n//   const m = dy / dx;\n\n//   const degrees = 90 + (Math.atan2(dy, dx) * 180) / Math.PI;\n//   let xpos = x2 > x1 ? 1 : -1;\n//   const interY = (y2 - y1) / m;\n//   const interX = x2 * m + y1;\n// };\n","import Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { observer } from \"mobx-react-lite\";\nimport { IAnyType, IMSTMap, types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FieldSpec, PP2 } from \"./\";\n\nconst ButtonsDiv = styled.div`\n  min-height: 38px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport class ChoiceFieldSpec<\n  V,\n  K extends C extends IMSTMap<M> ? string : string & keyof C,\n  C extends { [key: string]: V } | IMSTMap<M>,\n  M extends IAnyType,\n  MM extends { [key: string]: FieldSpec }\n> {\n  choices: C;\n  default: K;\n  onChange?: (n: V) => void;\n\n  constructor(v: { choices: C; default: K; onChange?: (n: V) => void }) {\n    this.choices = v.choices;\n    this.default = v.default;\n    this.onChange = v.onChange;\n    if (this.isObservableMap()) {\n      if ((this.choices as any).get(this.default) === null) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  isObservableMap = () => {\n    return (\n      typeof this.choices.keys === \"function\" &&\n      typeof this.choices.size === \"number\" &&\n      Symbol.toStringTag in this.choices\n    );\n  };\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.string, this.default)\n      : types.string;\n\n  plotField: React.FC<PP2<MM, string>> = observer(({ name, model }) => {\n    let keys;\n    if (this.isObservableMap()) {\n      keys = Array.from(\n        (this.choices as any).keys() as IterableIterator<string>\n      );\n    } else {\n      keys = Object.keys(this.choices);\n    }\n    return (\n      <ChoiceField\n        value={model[name]}\n        setValue={(v) => {\n          model[name] = v as any;\n          if (this.onChange !== undefined) this.onChange(v as any);\n        }}\n        keys={keys}\n      />\n    );\n  });\n}\n\nexport const ChoiceField = <V extends string>({\n  keys,\n  value,\n  setValue,\n  maxButton,\n}: {\n  keys: V[];\n  value: V;\n  setValue: (v: V) => void;\n  maxButton?: number;\n}) => {\n  if (keys.length > (maxButton ?? 3)) {\n    return (\n      <Select\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value as any);\n        }}\n        autoWidth={true}\n        style={{ minHeight: \"35px\", marginBottom: \"3px\" }}\n        disabled={keys.length <= 1}\n      >\n        {keys.map((k) => {\n          return (\n            <MenuItem key={k} value={k}>\n              {k}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  } else {\n    return (\n      <ButtonsDiv>\n        <ButtonGroup\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n        >\n          {keys.map((k) => {\n            const buttonStyle =\n              k === value ? { background: \"#3f51b5\", color: \"white\" } : {};\n\n            return (\n              <Button\n                key={k}\n                onClick={() => {\n                  setValue(k);\n                }}\n                style={buttonStyle}\n              >\n                {k}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n      </ButtonsDiv>\n    );\n  }\n};\n","export function listToMap<T extends number | string>(l: Array<T>) {\n  return l.reduce((p, c) => {\n    p[c.toString()] = c;\n    return p;\n  }, {} as { [key: string]: T });\n}\n\nconst defaultResizeEnable = {\n  top: false,\n  right: false,\n  bottom: false,\n  left: false,\n  topRight: false,\n  bottomRight: false,\n  bottomLeft: false,\n  topLeft: false,\n};\n\nexport function resizableEnable(f: {\n  top?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n  left?: boolean;\n  topRight?: boolean;\n  bottomRight?: boolean;\n  bottomLeft?: boolean;\n  topLeft?: boolean;\n}) {\n  return Object.entries(f).reduce(\n    (p, [k, v]) => {\n      if (v !== undefined) {\n        p[k as keyof typeof defaultResizeEnable] = v;\n      }\n      return p;\n    },\n    { ...defaultResizeEnable }\n  );\n}\n\nexport function downloadToClient(\n  content: BlobPart,\n  fileName: string,\n  contentType: string\n) {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}\n\nexport function importJson(\n  event: React.ChangeEvent<HTMLInputElement>\n): Promise<string | ArrayBuffer | null | undefined> {\n  const files = event.target.files;\n  return new Promise((resolve, _) => {\n    if (files !== null) {\n      const file = files[0];\n      if (file.type !== \"application/json\") {\n        window.alert(\n          \"Debes seleccionar un archivo válido, la extensión debe ser '.json'.\"\n        );\n        return resolve(undefined);\n      }\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          resolve(e.target?.result);\n        };\n        reader.onabort = (e) => {\n          resolve(undefined);\n        };\n        reader.onerror = (e) => {\n          resolve(undefined);\n        };\n        reader.readAsText(file);\n    } else {\n      resolve(undefined);\n    }\n  });\n}\n","import React from \"react\";\nimport { computed, observable, reaction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { ChoiceFieldSpec } from \"../fields/choice-field\";\nimport { ConnectionPosition, NodeData, NodeModel } from \"../node/node-model\";\nimport { listToMap } from \"../utils\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { Transition } from \"./transition\";\nimport { JsonType } from \"../canvas/store\";\nimport { BoolFieldSpec } from \"../fields/primitive-field\";\n\nexport enum StepType {\n  ENCLOSING = \"ENCLOSING\",\n  MACRO = \"MACRO\",\n  SIMPLE = \"SIMPLE\",\n  CONTAINER = \"CONTAINER\",\n}\n\ntype GemmaNode = NodeModel<Step, GemmaGrafcet, Transition>;\n\nexport enum ProcedureType {\n  F = \"F\", // Operational\n  D = \"D\", // Failure\n  A = \"A\", // Stop\n}\n\nexport type Step = SimpleStep | EnclosingStep | MacroStep | ContainerStep;\n\nexport class BaseStep implements NodeData<Step, GemmaGrafcet, Transition> {\n  @observable\n  type: StepType;\n\n  nInputs = Number.POSITIVE_INFINITY;\n  errors = observable.map<string, string>();\n\n  constructor(\n    public node: GemmaNode,\n    d?: {\n      description?: string;\n      family?: ProcedureType;\n      isInitial?: boolean;\n      type?: StepType;\n    }\n  ) {\n    this.description = d?.description ?? \"\";\n    this.family = d?.family ?? ProcedureType.F;\n    this.isInitial = d?.isInitial ?? false;\n    this.type = d?.type ?? StepType.SIMPLE;\n    reaction(\n      (_) => this.isInitial,\n      (isInitial, _) => {\n        if (isInitial) {\n          const otherInitial = this.automationSystem.steps.find(\n            (s) => s.isInitial && s !== this\n          );\n          if (otherInitial !== undefined) {\n            otherInitial.isInitial = false;\n          }\n        }\n      }\n    );\n  }\n\n  @computed\n  get name(): string {\n    return this.node.name;\n  }\n  @observable\n  description: string;\n  @observable\n  isInitial: boolean;\n  @observable\n  family: ProcedureType;\n  @computed\n  get parent(): GemmaNode | undefined {\n    if (this.type === StepType.CONTAINER) {\n      return undefined;\n    }\n    switch (this.family) {\n      case ProcedureType.A:\n        return this.automationSystem.aFamily;\n      case ProcedureType.D:\n        return this.automationSystem.dFamily;\n      case ProcedureType.F:\n        return this.automationSystem.fFamily;\n    }\n    throw new Error(\"\");\n  }\n  get key(): string {\n    return this.node.key;\n  }\n  get automationSystem(): GemmaGrafcet {\n    return this.node.graph.globalData;\n  }\n\n  connectionStartPosition = (): undefined | ConnectionPosition => {\n    if (this.type === StepType.CONTAINER) {\n      return { bottom: 40, left: 50 };\n    }\n    return undefined;\n  };\n\n  @computed\n  get _transitions(): Transition[] {\n    return this.node.outputs\n      .filter((t) => !t.isHidden)\n      .map((t) => t.data)\n      .sort((a, b) => a.priority - b.priority);\n  }\n  @computed\n  get innerTransitionsLength(): number {\n    return this._transitions.length;\n  }\n  @computed\n  get transitions(): Transition[] {\n    if (this === this.automationSystem.fFamily!.data) {\n      return this._transitions;\n    }\n    return this.family === ProcedureType.F\n      ? this.automationSystem.fFamily!.data.transitions.concat(\n          this._transitions\n        )\n      : this._transitions;\n  }\n  @computed\n  get id(): number {\n    if (this.name.length === 2) {\n      let delta: number;\n      switch (this.family) {\n        case ProcedureType.A:\n          delta = 0;\n          break;\n        case ProcedureType.F:\n          delta = 7;\n          break;\n        case ProcedureType.D:\n          delta = 7 + 6;\n          break;\n      }\n      return delta + Number.parseInt(this.name[1]);\n    }\n    return 0;\n  }\n\n  spec = {\n    isInitial: new BoolFieldSpec({ default: false, required: true }),\n    type: new ChoiceFieldSpec({\n      default: StepType.SIMPLE,\n      choices: listToMap(\n        Object.values(StepType).filter((t) => t !== StepType.CONTAINER)\n      ),\n    }),\n  };\n\n  isValidInput(n: GemmaNode): boolean {\n    return this.node.inputNodes.every((t) => t.data !== n.data);\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      family: this.family,\n      description: this.description,\n      type: this.type,\n      isInitial: this.isInitial,\n    };\n  }\n\n  View = observer(({ children }) => {\n    const _color = {\n      [ProcedureType.A]: \"#ecf5ff\",\n      [ProcedureType.D]: \"#ffd6d6\",\n      [ProcedureType.F]: \"#ebffec\",\n    };\n\n    if (this.type === StepType.CONTAINER) {\n      return (\n        <div\n          style={{\n            position: \"relative\",\n            border: \"1px solid #eee\",\n            background: _color[this.family],\n            flex: 1,\n            width: 400,\n            height: 400,\n          }}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    let style: React.CSSProperties = {};\n    let innerStyle: React.CSSProperties = { padding: \"12px\" };\n    let wrapper: (p: React.ReactElement) => React.ReactElement = (p) => p;\n\n    if (this.isInitial) {\n      wrapper = (p) => (\n        <div style={{ padding: \"5px\" }}>\n          <div\n            style={{\n              border: \"1.5px solid\",\n            }}\n          >\n            {p}\n          </div>\n        </div>\n      );\n    }\n\n    const nodeHeight = this.node.height - 2 - (this.isInitial ? 12 : 0);\n    switch (this.type) {\n      case StepType.ENCLOSING:\n        style = { padding: \"0 0\", display: \"flex\" };\n        return wrapper(\n          <div style={{ ...style, position: \"relative\" }}>\n            <EnclosingDecoration left={true} nodeHeight={nodeHeight} />\n            <div style={{ ...innerStyle, padding: \"12px 18px\" }}>\n              {this.node.name}\n            </div>\n            <EnclosingDecoration left={false} nodeHeight={nodeHeight} />\n          </div>\n        );\n      case StepType.MACRO:\n        style = { padding: \"5px 0\" };\n        innerStyle = {\n          borderTop: \"1.5px solid\",\n          borderBottom: \"1.5px solid\",\n          borderRight: \"0\",\n          borderLeft: \"0\",\n          padding: \"5px 12px\",\n        };\n        break;\n    }\n\n    return wrapper(\n      <div style={style}>\n        <div style={innerStyle}>{this.node.name}</div>\n      </div>\n    );\n  });\n}\n\nexport type SimpleStep = BaseStep & {\n  type: StepType.SIMPLE;\n};\n\nexport type ContainerStep = BaseStep & {\n  type: StepType.CONTAINER;\n};\n\nexport type EnclosingStep = BaseStep & {\n  type: StepType.ENCLOSING;\n};\n\nexport type MacroStep = BaseStep & {\n  type: StepType.MACRO;\n};\n\nexport const EnclosingDecoration = ({\n  nodeHeight,\n  left,\n}: {\n  nodeHeight: number;\n  left: boolean;\n}) => {\n  return (\n    <svg\n      style={{\n        width: \"10px\",\n        height: \"\" + nodeHeight + \"px\",\n        position: \"absolute\",\n        right: left ? undefined : 0,\n      }}\n    >\n      <path\n        d={\n          left\n            ? `M 10 0 L 0 ${nodeHeight / 2} L 10 ${nodeHeight}`\n            : `M 0 0 L 10 ${nodeHeight / 2} L 0 ${nodeHeight}`\n        }\n        stroke=\"black\"\n        fill=\"transparent\"\n      ></path>\n    </svg>\n  );\n};\n","import Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { observer } from \"mobx-react-lite\";\nimport { types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport { FieldSpec, FieldSpecI, PP2 } from \"./\";\n\nexport class StrFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, string> {\n  default: string;\n  maxLength?: number;\n  minLength?: number;\n  multiline: boolean;\n\n  constructor(v: {\n    default: string;\n    maxLength?: number;\n    minLength?: number;\n    multiline?: boolean;\n  }) {\n    this.default = v.default;\n    this.maxLength = v.maxLength;\n    this.minLength = v.minLength;\n    this.multiline = v.multiline ?? false;\n\n    if (typeof this.default === \"string\") {\n      if (\n        this.minLength !== undefined &&\n        this.default.length < this.minLength\n      ) {\n        throw Error(\"\");\n      } else if (\n        this.maxLength !== undefined &&\n        this.default.length > this.maxLength\n      ) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  mobxProp = () => {\n    if (this.default !== undefined) {\n      return types.optional(types.string, this.default);\n    } else {\n      return types.string;\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, string>) => {\n    const [value, setValue] = React.useState(model[name]);\n    const errors = model.errors;\n    const onChange = (\n      e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n      let value = e.target.value;\n      setValue(value as any);\n\n      if (this.maxLength !== undefined && value.length > this.maxLength) {\n        errors.set(name, \"Max length exceded.\");\n      } else if (\n        this.minLength !== undefined &&\n        value.length < this.minLength\n      ) {\n        errors.set(name, \"Min length exceded.\");\n      } else {\n        errors.delete(name);\n        model[name] = value as any;\n      }\n    };\n\n    if (this.multiline) {\n      return (\n        <textarea\n          key={name}\n          className=\"multiline-input\"\n          value={value}\n          onChange={onChange}\n        ></textarea>\n      );\n    } else {\n      return (\n        <TextField\n          key={name}\n          value={value}\n          fullWidth={true}\n          margin=\"dense\"\n          inputProps={{ style: { textAlign: \"center\" } }}\n          error={errors.get(name) !== undefined}\n          style={{ width: \"140px\" }}\n          onChange={onChange}\n        />\n      );\n    }\n  });\n}\n\nexport class BoolFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, boolean> {\n  default: boolean;\n  required?: boolean;\n\n  constructor(v: { default: boolean; required?: boolean }) {\n    this.default = v.default;\n    this.required = v.required !== undefined ? v.required : true;\n  }\n\n  mobxProp = () => {\n    if (this[\"default\"] === undefined) {\n      return types.boolean;\n    } else {\n      return types.optional(types.boolean, this.default);\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, boolean>) => {\n    return (\n      <Switch\n        checked={model[name]}\n        onChange={() => {\n          model[name] = !model[name] as any;\n        }}\n        color=\"primary\"\n      />\n    );\n  });\n}\n\nexport class NumFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, number> {\n  default: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  isInt: boolean;\n\n  constructor(v: {\n    default: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    isInt?: boolean;\n  }) {\n    this.default = v.default;\n    this.min = v.min;\n    this.max = v.max;\n    this.step = v.step;\n    this.isInt = v.isInt !== undefined ? v.isInt : false;\n    if (this.min !== undefined && this.default < this.min) {\n      throw Error(\"\");\n    } else if (this.max !== undefined && this.default > this.max) {\n      throw Error(\"\");\n    }\n    if (this.isInt) {\n      this.default = Math.round(this.default);\n      if (this.step === undefined) {\n        this.step = 1;\n      } else {\n        this.step = Math.round(this.step);\n      }\n    }\n  }\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.number, this.default)\n      : types.number;\n\n  plotField = observer(({ name, model }: PP2<M, number>) => {\n    const [value, setValue] = React.useState(\n      ((model[name] as any) as number).toString()\n    );\n    const errors = model.errors;\n    const error = errors.get(name);\n\n    return (\n      <TextField\n        key={name}\n        value={value}\n        inputProps={{\n          min: this.min,\n          max: this.max,\n          step: this.step,\n          style: { textAlign: \"center\" },\n        }}\n        type=\"number\"\n        error={error !== undefined}\n        fullWidth={true}\n        style={{ width: \"80px\" }}\n        onChange={(e) => {\n          let value = e.target.value;\n          if (this.min !== undefined && this.min >= 0) {\n            value = value.replace(/-/g, \"\");\n          }\n          if (this.isInt) {\n            value = value.replace(/\\./g, \"\");\n          }\n          setValue(value);\n\n          let num: number;\n          if (this.isInt) {\n            num = parseInt(value, 10);\n          } else {\n            num = parseFloat(value);\n          }\n\n          if (Number.isNaN(num)) {\n            errors.set(name, \"Invalid\");\n          } else if (this.min !== undefined && this.min > num) {\n            errors.set(name, `Smaller than minimum ${this.min}`);\n          } else if (this.max !== undefined && this.max < num) {\n            errors.set(name, `Greater than maximum ${this.max}`);\n          } else {\n            errors.delete(name);\n            model[name] = num as any;\n          }\n        }}\n      />\n    );\n  });\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { StepType, Step, EnclosingDecoration } from \"../step/step\";\nimport {\n  AbstractReactFactory,\n  AbstractModelFactory,\n} from \"@projectstorm/react-canvas-core\";\nimport { DiagramEngine } from \"@projectstorm/react-diagrams-core\";\nimport {\n  LinkModel,\n  PortModel,\n  DefaultLinkModel,\n  PortModelAlignment,\n  NodeModel,\n  NodeModelGenerics,\n  PortWidget,\n} from \"@projectstorm/react-diagrams\";\nimport styled from \"styled-components\";\n\nexport const CUSTOM_NODE_TYPE = \"CUSTOM_NODE_TYPE\";\n\nclass SimplePortFactory extends AbstractModelFactory<PortModel, DiagramEngine> {\n  cb: (initialConfig?: any) => PortModel;\n\n  constructor(type: string, cb: (initialConfig?: any) => PortModel) {\n    super(type);\n    this.cb = cb;\n  }\n\n  generateModel(event: any): PortModel {\n    return this.cb(event.initialConfig);\n  }\n}\n\nexport const customPortFactory = new SimplePortFactory(\n  CUSTOM_NODE_TYPE,\n  (config: any) => new CustomPortModel(PortModelAlignment.LEFT)\n);\n\nexport class CustomPortModel extends PortModel {\n  constructor(alignment: PortModelAlignment) {\n    super({\n      type: CUSTOM_NODE_TYPE,\n      name: alignment,\n      alignment: alignment,\n    });\n  }\n\n  createLinkModel(): LinkModel {\n    return new DefaultLinkModel();\n  }\n}\n\nexport class CustomNodeFactory extends AbstractReactFactory<\n  CustomNodeModel,\n  DiagramEngine\n> {\n  constructor() {\n    super(CUSTOM_NODE_TYPE);\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    return <CustomNode engine={this.engine} node={event.model} />;\n  }\n\n  generateModel(event: any) {\n    return new CustomNodeModel(null as any);\n  }\n}\n\nexport interface CustomNodeModelGenerics {\n  PORT: CustomPortModel;\n}\n\nexport class CustomNodeModel extends NodeModel<\n  NodeModelGenerics & CustomNodeModelGenerics\n> {\n  constructor(public readonly step: Step) {\n    super({\n      type: CUSTOM_NODE_TYPE,\n    });\n    this.addPort(new CustomPortModel(PortModelAlignment.TOP));\n    this.addPort(new CustomPortModel(PortModelAlignment.LEFT));\n    this.addPort(new CustomPortModel(PortModelAlignment.BOTTOM));\n    this.addPort(new CustomPortModel(PortModelAlignment.RIGHT));\n  }\n}\n\nexport const CustomNode = observer(\n  ({ node, engine }: { node: CustomNodeModel; engine: DiagramEngine }) => {\n    let style: React.CSSProperties = {};\n    let innerStyle: React.CSSProperties = { padding: \"12px\" };\n    let wrapper: (p: React.ReactElement) => React.ReactElement = (p) => p;\n    const step = node.step;\n\n    if (step.isInitial) {\n      wrapper = (p) => (\n        <div style={{ padding: \"5px\", border: \"1.5px solid\" }}>\n          <div\n            style={{\n              border: \"1.5px solid\",\n            }}\n          >\n            {p}\n          </div>\n        </div>\n      );\n    }\n\n    const nodeHeight = step.node.height - 2 - (step.isInitial ? 12 : 0);\n    switch (step.type) {\n      case StepType.ENCLOSING:\n        style = { padding: \"0 0\", display: \"flex\" };\n        return wrapper(\n          <div\n            style={{ ...style, border: \"1.5px solid\", position: \"relative\" }}\n          >\n            <Ports node={node} engine={engine} size={step.node.height} />\n            <EnclosingDecoration left={true} nodeHeight={nodeHeight} />\n            <div style={{ ...innerStyle, padding: \"12px 18px\" }}>\n              {step.node.name}\n            </div>\n            <EnclosingDecoration left={false} nodeHeight={nodeHeight} />\n          </div>\n        );\n      case StepType.MACRO:\n        style = { padding: \"5px 0\" };\n        innerStyle = {\n          borderTop: \"1.5px solid\",\n          borderBottom: \"1.5px solid\",\n          borderRight: \"0\",\n          borderLeft: \"0\",\n          padding: \"5px 12px\",\n        };\n        break;\n    }\n\n    return wrapper(\n      <div style={{ ...style, border: \"1.5px solid\", position: \"relative\" }}>\n        <Ports node={node} engine={engine} size={step.node.height} />\n        <div style={innerStyle}>{step.node.name}</div>\n      </div>\n    );\n  }\n);\n\nconst Ports = ({\n  engine,\n  node,\n  size,\n}: {\n  engine: DiagramEngine;\n  node: CustomNodeModel;\n  size: number;\n}) => {\n  return (\n    <>\n      <PortWidget\n        style={{\n          top: size / 2 - 8,\n          left: -8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.LEFT)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size / 2 - 8,\n          top: -8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.TOP)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size - 8,\n          top: size / 2 - 8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.RIGHT)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size / 2 - 8,\n          top: size - 8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.BOTTOM)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n    </>\n  );\n};\n\nclass S {\n  static Port = styled.div`\n    width: 16px;\n    height: 16px;\n    z-index: 10;\n    background: rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n    cursor: pointer;\n    &:hover {\n      background: rgba(0, 0, 0, 1);\n    }\n  `;\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useStore } from \"../App\";\nimport { ArrowView } from \"./arrow\";\nimport \"./canvas.css\";\nimport createEngine, {\n  DiagramModel,\n  DefaultNodeModel,\n  DefaultPortModel,\n  RightAngleLinkFactory,\n  LinkModel,\n  RightAngleLinkModel,\n  DefaultLabelModel,\n  PathFindingLinkFactory,\n  PortModelAlignment,\n} from \"@projectstorm/react-diagrams\";\nimport { AbstractModelFactory } from \"@projectstorm/react-canvas-core\";\nimport {\n  CustomNodeFactory,\n  CustomNodeModel,\n  customPortFactory,\n} from \"../node/custom-node\";\nimport { Step } from \"../step/step\";\n\ntype Props = {};\n\n// When new link is created by clicking on port the RightAngleLinkModel needs to be returned.\nexport class RightAnglePortModel extends DefaultPortModel {\n  createLinkModel(factory?: AbstractModelFactory<LinkModel>) {\n    return new RightAngleLinkModel();\n  }\n}\n\nexport const MainCanvas: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n  const ops = [...rootStore.nodes.values()];\n\n  const engine = React.useMemo(() => {\n    const engine = createEngine({\n      registerDefaultZoomCanvasAction: false,\n      registerDefaultDeleteItemsAction: false,\n    });\n    engine.getLinkFactories().registerFactory(new RightAngleLinkFactory());\n    engine.getPortFactories().registerFactory(customPortFactory);\n    engine.getNodeFactories().registerFactory(new CustomNodeFactory());\n    // setup the diagram model\n\n    const model = new DiagramModel();\n    // create four nodes in a way that straight links wouldn't work\n    const node1 = new CustomNodeModel(ops[10].data as Step);\n    node1.setPosition(340, 350);\n\n    const node2 = new DefaultNodeModel(\"Node B\", \"rgb(255,255,0)\");\n    const port2 = node2.addPort(new DefaultPortModel(false, \"out-1\", \"Out\"));\n    node2.setPosition(240, 80);\n    const node3 = new DefaultNodeModel(\"Node C\", \"rgb(192,255,255)\");\n    const port3 = node3.addPort(new DefaultPortModel(true, \"in-1\", \"In\"));\n    node3.setPosition(540, 180);\n    const node4 = new DefaultNodeModel(\"Node D\", \"rgb(192,0,255)\");\n    const port4 = node4.addPort(new DefaultPortModel(true, \"in-1\", \"In\"));\n    node4.setPosition(95, 185);\n    const pathfinding = engine\n      .getLinkFactories()\n      .getFactory<PathFindingLinkFactory>(PathFindingLinkFactory.NAME);\n\n    // linking things together\n    const link1 = port4.link(\n      node1.getPort(PortModelAlignment.LEFT)!,\n      pathfinding\n    );\n    link1.addLabel(new DefaultLabelModel({ label: \"dwdw\" }));\n\n    const link2 = port2.link(port3, pathfinding);\n\n    // add all to the main model\n    model.addAll(node1, node2, node3, node4, link1, link2);\n\n    // load model into engine and render\n    engine.setModel(model);\n    return engine;\n  }, [ops]);\n  console.log(engine);\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        flex: \"1\",\n        outline: \"none\",\n        background: \"white\",\n      }}\n      id=\"canvas-scroll\"\n      tabIndex={0}\n      onMouseMove={(_) => {\n        if (rootStore.selectedPointIndex !== undefined) {\n          const target = document.getElementById(\n            \"canvas-scroll\"\n          )! as HTMLElement;\n          target.focus();\n        }\n      }}\n      onKeyUp={(event) => {\n        if (\n          event.key === \"Escape\" &&\n          rootStore.selectedPointIndex !== undefined &&\n          rootStore.selectedConnection !== undefined\n        ) {\n          rootStore.selectedConnection.innerPoints.splice(\n            rootStore.selectedPointIndex,\n            1\n          );\n          rootStore.selectedPointIndex = undefined;\n        }\n      }}\n    >\n      <div className=\"canvas-wrapper\" style={{ background: \"white\" }}>\n        {/* <CanvasWidget engine={engine} className=\"canvas-widget\" /> */}\n        <rootStore.globalData.CanvasView />\n        <svg\n          style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}\n          id=\"canvas-svg\"\n        >\n          {ops\n            .flatMap((op) => op.inputs)\n            .map((connection) => (\n              <ArrowView\n                connection={connection}\n                key={connection.from.key + connection.to.key}\n              />\n            ))}\n        </svg>\n      </div>\n    </div>\n  );\n});\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { JsonType } from \"./store\";\n\nconst DB_NAME = \"GemmaGrafcet\";\nenum DBStores {\n  graph = \"graph\",\n  node = \"node\",\n  connection = \"connection\",\n}\n\nexport type GraphJson = {\n  key: string;\n  data: JsonType;\n};\n\nexport type NodeJson = {\n  key: string;\n  name: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isHidden: boolean;\n  data: JsonType;\n};\n\ntype _NodeJson = NodeJson & {\n  graphKey: string;\n};\n\nexport type ConnectionJson = {\n  from: string;\n  to: string;\n  isHidden: boolean;\n  innerPoints: Array<{x: number, y: number}>;\n  data: JsonType;\n};\n\ntype _ConnectionJson = ConnectionJson & {\n  key: string;\n  graphKey: string;\n};\n\ninterface MyDB extends DBSchema {\n  [DBStores.graph]: {\n    key: string;\n    value: GraphJson;\n  };\n  [DBStores.node]: {\n    key: string;\n    value: _NodeJson;\n    indexes: { \"by-graph\": string };\n  };\n  [DBStores.connection]: {\n    key: string;\n    value: _ConnectionJson;\n    indexes: { \"by-graph\": string };\n  };\n}\n\nexport async function createIndexedDB() {\n  const db = await openDB<MyDB>(DB_NAME, 1, {\n    upgrade(db) {\n      db.createObjectStore(DBStores.graph, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n\n      const nodeStore = db.createObjectStore(DBStores.node, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      nodeStore.createIndex(\"by-graph\", \"graphKey\");\n\n      const connStore = db.createObjectStore(DBStores.connection, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      connStore.createIndex(\"by-graph\", \"graphKey\");\n    },\n  });\n  return new IndexedDB(db);\n}\n\nexport function sameKeys(conn: ConnectionJson, conn2: ConnectionJson) {\n  return getKeyFromConnection(conn) === getKeyFromConnection(conn2);\n}\n\nexport function getKeyFromConnection(conn: ConnectionJson) {\n  return `${conn.from}_${conn.to}`;\n}\n\nexport function connectionWithKey(\n  graphKey: string,\n  conn: ConnectionJson\n): _ConnectionJson {\n  return Object.assign(conn, { key: getKeyFromConnection(conn), graphKey });\n}\n\nexport class IndexedDB {\n  constructor(private db: IDBPDatabase<MyDB>) {}\n\n  //\n  // GRAPHS\n  //\n\n  fetchGraphs() {\n    return this.db.getAll(DBStores.graph);\n  }\n\n  updateGraph(value: GraphJson) {\n    return this.db.put(DBStores.graph, value);\n  }\n\n  async deleteGraph(graphKey: string) {\n    const tx = this.db.transaction(\n      [DBStores.graph, DBStores.node, DBStores.connection],\n      \"readwrite\"\n    );\n    tx.objectStore(DBStores.graph).delete(graphKey);\n    for (const dbKey of [DBStores.node, DBStores.connection] as Array<\n      DBStores.node | DBStores.connection\n    >) {\n      let cursor = await tx\n        .objectStore(dbKey)\n        .index(\"by-graph\")\n        .openCursor(graphKey);\n      while (cursor) {\n        cursor.delete();\n        cursor = await cursor.continue();\n      }\n    }\n    await tx.done;\n  }\n\n  async loadGraph(graphKey: string) {\n    const [nodes, connections] = await Promise.all([\n      this.db.getAllFromIndex(DBStores.node, \"by-graph\", graphKey),\n      this.db.getAllFromIndex(DBStores.connection, \"by-graph\", graphKey),\n    ]);\n\n    return { nodes, connections };\n  }\n\n  //\n  // NODES\n  //\n\n  async addNodes(graphKey: string, nodes: NodeJson[]) {\n    const tx = this.db.transaction(DBStores.node, \"readwrite\");\n\n    const _g = { graphKey };\n    for (const n of nodes) {\n      tx.store.add(Object.assign(n, _g));\n    }\n    return await tx.done;\n  }\n\n  deleteNode(path: NodeJson) {\n    return this.db.delete(DBStores.node, path.key);\n  }\n\n  async updateNode(graphKey: string, path: NodeJson) {\n    return this.db.put(DBStores.node, Object.assign(path, { graphKey }));\n  }\n\n  async updateNodes(graphKey: string, nodes: Array<NodeJson>) {\n    const _g = { graphKey };\n    return this.updateMany(\n      DBStores.node,\n      nodes.map((n) => n.key),\n      nodes.map((p) => Object.assign(p, _g))\n    );\n  }\n\n  //\n  // CONNECTIONS\n  //\n\n  async addConnections(graphKey: string, connections: ConnectionJson[]) {\n    const tx = this.db.transaction(DBStores.connection, \"readwrite\");\n\n    for (const p of connections) {\n      tx.store.add(connectionWithKey(graphKey, p));\n    }\n    return await tx.done;\n  }\n\n  deleteConnection(path: ConnectionJson) {\n    return this.db.delete(DBStores.connection, getKeyFromConnection(path));\n  }\n\n  async updateConnection(graphKey: string, connection: ConnectionJson) {\n    return this.db.put(\n      DBStores.connection,\n      connectionWithKey(graphKey, connection)\n    );\n  }\n\n  async updateConnections(\n    graphKey: string,\n    connections: Array<ConnectionJson>\n  ) {\n    return this.updateMany(\n      DBStores.connection,\n      connections.map(getKeyFromConnection),\n      connections.map((p) => connectionWithKey(graphKey, p))\n    );\n  }\n\n  //\n  // OTHER\n  //\n\n  async closeDB() {\n    this.db.close();\n  }\n\n  async clearDB() {\n    await Promise.all([\n      this.db.clear(DBStores.graph),\n      this.db.clear(DBStores.connection),\n      this.db.clear(DBStores.node),\n    ]);\n  }\n\n  private async updateMany<T>(dbKey: DBStores, keys: string[], items: T[]) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    await Promise.all(\n      items.map(async (path, index) => {\n        const key = keys[index];\n        const val = await tx.store.get(key);\n\n        if (!val) {\n          throw new Error();\n        }\n        return tx.store.put({ ...val, ...path });\n      })\n    );\n    return await tx.done;\n  }\n\n  private async updateIncrementalSingle<T>(\n    dbKey: DBStores,\n    key: string,\n    item: T\n  ) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    const val = await tx.store.get(key);\n\n    if (!val) {\n      throw new Error();\n    }\n    tx.store.put({ ...val, ...item });\n    await tx.done;\n  }\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React, { useEffect, useState } from \"react\";\nimport { useStore, WarningsDialog } from \"../App\";\nimport { NodeModel } from \"../node/node-model\";\nimport { resizableEnable } from \"../utils\";\nimport { GlobalData } from \"./store\";\n\ntype Props = {};\n\nexport const ConfigView: React.FC<Props> = observer(<\n  G extends GlobalData<any>\n>() => {\n  const rootStore = useStore<any, G, any>();\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState<\n    \"XML\" | \"TXT\" | undefined\n  >(undefined);\n  const [isDownloadMenuOpen, setIsDownloadMenuOpen] = useState(false);\n  const [isCodesysVersionOpen, setIsCodesysVersionOpen] = useState(false);\n  const [anchorElem, setAnchorElem] = useState<HTMLButtonElement | null>(null);\n\n  const ops = [...rootStore.nodes.values()];\n  const connections = ops.reduce((p, c) => {\n    c.inputs.forEach((v) => {\n      let m = p.get(v.to);\n      if (m === undefined) {\n        m = [];\n        p.set(v.to, m);\n      }\n      m.push(c);\n    });\n    return p;\n  }, new Map<NodeModel<any, any, any>, NodeModel<any, any, any>[]>());\n\n  const orderedOps: NodeModel<any, any, any>[] = [];\n  const counts = new Map(\n    ops\n      .filter((op) => {\n        const withDependencies = op.data.length !== 0;\n        if (!withDependencies) {\n          orderedOps.push(op);\n        }\n        return withDependencies;\n      })\n      .map((op) => [op, op.data.length])\n  );\n  let numProcessed = 0;\n  while (counts.size !== 0 && orderedOps.length !== numProcessed) {\n    for (let k of orderedOps.slice(numProcessed)) {\n      numProcessed += 1;\n      const outs = connections.get(k);\n      if (outs === undefined) continue;\n\n      for (let dep of outs) {\n        const m = counts.get(dep)!;\n        if (m === 1) {\n          counts.delete(dep);\n          orderedOps.push(dep);\n        } else {\n          counts.set(dep, m - 1);\n        }\n      }\n    }\n  }\n\n  if (counts.size !== 0) {\n    // CICLE ?\n  }\n\n  const toggleDownloadMenu = () => {\n    setIsDownloadMenuOpen(!isDownloadMenuOpen);\n  };\n\n  const toggleCodesysVersion = () => {\n    setIsCodesysVersionOpen(!isCodesysVersionOpen);\n  };\n\n  const tryDownload = (format: \"XML\" | \"TXT\") => () => {\n    if (format === \"XML\" && rootStore.codesysVersion === null) {\n      toggleCodesysVersion();\n      return;\n    }\n    const hasWarnings = Object.values(rootStore.globalData.warnings).some(\n      (v) => v.length > 0\n    );\n    if (hasWarnings) {\n      setIsWarningsDialogOpen(format);\n    } else {\n      rootStore.downloadSourceCode(format);\n    }\n    toggleDownloadMenu();\n  };\n\n  return (\n    <Resizable\n      minWidth={200}\n      defaultSize={{ height: \"auto\", width: 350 }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ left: true })}\n    >\n      <div className=\"col\" style={{ height: \"100%\" }}>\n        <div style={{ borderBottom: \"rgb(221 220 220) solid 1.5px\" }}>\n          <Button\n            onClick={toggleDownloadMenu}\n            ref={(ref) => {\n              if (ref !== null) {\n                setAnchorElem(ref);\n              }\n            }}\n          >\n            Download Code\n          </Button>\n          <Menu\n            anchorEl={anchorElem}\n            keepMounted\n            open={isDownloadMenuOpen}\n            onClose={toggleDownloadMenu}\n          >\n            <MenuItem\n              onClick={tryDownload(\"XML\")}\n              style={{ paddingTop: \"1px\", paddingBottom: \"1px\" }}\n            >\n              PLCopen XML\n              {rootStore.codesysVersion !== null && (\n                <div\n                  className=\"col\"\n                  style={{ fontSize: \"0.7em\", paddingLeft: \"10px\" }}\n                >\n                  <div>CodeSys version</div>\n                  <div\n                    className=\"row\"\n                    style={{ justifyContent: \"space-between\" }}\n                  >\n                    {rootStore.codesysVersion}\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        toggleCodesysVersion();\n                      }}\n                      style={{ fontSize: \"0.8em\" }}\n                    >\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              )}\n            </MenuItem>\n            <MenuItem onClick={tryDownload(\"TXT\")}>Text Files</MenuItem>\n          </Menu>\n          <CodesysVesionDialog\n            open={isCodesysVersionOpen}\n            toggleDialog={toggleCodesysVersion}\n            accept={(version: string) => {\n              rootStore.setCodesysVersion(version);\n              toggleCodesysVersion();\n              tryDownload(\"XML\")();\n            }}\n          />\n          <WarningsDialog\n            open={isWarningsDialogOpen !== undefined}\n            toggleDialog={() => setIsWarningsDialogOpen(undefined)}\n            warnings={rootStore.globalData.warnings}\n            accept={() => rootStore.downloadSourceCode(isWarningsDialogOpen!)}\n          />\n        </div>\n        <div\n          style={{\n            overflow: \"auto\",\n            height: \"100%\",\n            padding: \"0 10px\",\n            flex: 1,\n          }}\n        >\n          <pre>{rootStore.globalData.generateMainFile}</pre>\n        </div>\n      </div>\n    </Resizable>\n  );\n});\n\nexport const CodesysVesionDialog = ({\n  open,\n  toggleDialog,\n  accept,\n}: {\n  open: boolean;\n  toggleDialog: () => void;\n  accept: (version: string) => void;\n}) => {\n  const [version, setVersion] = useState(\"\");\n  const [versionInput, setVersionInput] = useState<HTMLElement | null>(null);\n  const [error, setError] = useState(\"\");\n  const [prevOpen, setPrevOpen] = useState(open);\n\n  useEffect(() => {\n    if (open && !prevOpen) {\n      setError(\"\");\n    }\n    if (open !== prevOpen) {\n      setPrevOpen(open);\n    }\n  }, [open, prevOpen]);\n\n  const updateError = (version: string) => {\n    const hasError = version.match(\"^[0-9]+.[0-9]+.[0-9]+.[0-9]+$\") === null;\n    if (hasError) {\n      setError(\"Should be 4 numbers separated by points, e.g. 3.5.9.40\");\n    } else {\n      setError(\"\");\n    }\n    return hasError;\n  };\n  const send = () => {\n    if (updateError(version)) {\n      versionInput?.focus();\n    } else {\n      accept(version);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">CoDeSys Version</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          We require your CoDeSys version to export the project as a PLCopen\n          XML. It can be found in the 'Help' - 'Information' toolbar menu in\n          CoDeSys.\n          <br />\n          <br />\n          Example:\n          <br />\n          3.5.11.30 = CODESYS V3.5 SP11 Patch 3\n        </DialogContentText>\n        <div className=\"col\">\n          <TextField\n            type=\"text\"\n            value={version}\n            onChange={(e) => {\n              const value = e.target.value.replace(/(\\s|[a-zA-Z])/g, \"\");\n              if (error.length !== 0) {\n                updateError(value);\n              }\n              setVersion(value);\n            }}\n            style={{ width: \"180px\" }}\n            label=\"CoDeSys version\"\n            helperText={\n              error.length !== 0 ? error : \"4 integers separeted by points\"\n            }\n            error={error.length !== 0}\n            inputRef={(ref) => {\n              if (ref !== null) {\n                ref.focus();\n                setVersionInput(ref);\n              }\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                send();\n              }\n            }}\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleDialog} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={send} color=\"primary\">\n          Continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { action, computed, IObservableArray, observable, ObservableMap } from \"mobx\";\nimport { SnapshotIn } from \"mobx-state-tree\";\nimport { FieldSpec } from \"../fields\";\nimport { GlobalData, RootStoreModel, JsonType } from \"../canvas/store\";\nimport { ConnectionJson, NodeJson } from \"../canvas/persistence\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nexport type OperationI<\n  V extends { [key: string]: FieldSpec },\n  D extends NodeData<D, G, any>,\n  G extends GlobalData<D>\n> = {\n  [key in keyof V]: SnapshotIn<ReturnType<V[key][\"mobxProp\"]>>;\n} & {\n  NAME: string;\n  spec: V;\n  nInputs: number;\n  errors: ObservableMap<keyof V, string>;\n};\n\nexport const mobxDecorators = <V extends { [key: string]: FieldSpec }>(\n  spec: V\n) => {\n  return {\n    ...Object.keys(spec).reduce((p, c) => {\n      p[c as keyof V] = observable;\n      return p;\n    }, {} as { [key in keyof V]: PropertyDecorator }),\n    errors: observable,\n  };\n};\n\nexport type ConnectionPosition =\n  | { top: number; left: number }\n  | { top: number; right: number }\n  | { bottom: number; left: number }\n  | { bottom: number; right: number };\n\nexport interface NodeData<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  isValidInput(input: NodeModel<D, G, C>): boolean;\n  nInputs: number;\n  spec: { [key: string]: FieldSpec };\n  // TODO: ObservableMap<keyof V, string>\n  errors: ObservableMap<string, string>;\n  View: React.FC;\n  toJson: JsonType;\n  parent?: NodeModel<D, G, C>;\n  connectionStartPosition?: () => undefined | ConnectionPosition;\n}\n\nexport type ConnectionData<D> = {\n  ConnectionView: React.FunctionComponent;\n  connectionText: { text: string; style?: React.CSSProperties }[];\n  toJson: JsonType;\n};\n\nexport class ConnModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public from: NodeModel<D, G, C>,\n    public to: NodeModel<D, G, C>,\n    dataBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C,\n    json?: Partial<ConnectionJson>\n  ) {\n    this.data = dataBuilder(this, json?.data);\n    this.isHidden = json?.isHidden ?? false;\n    this.innerPoints = observable.array<{ x: number; y: number }>(\n      json?.innerPoints ?? []\n    );\n    // this.lines.push(\n    //   { axis: \"hori\", length: to.x - from.x },\n    //   { axis: \"vert\", length: to.y - from.y }\n    // );\n    // const disposer = autorun((r) => {\n    //   const { dx, dy } = this.lines.reduce(\n    //     (p, c) =>\n    //       c.axis === \"vert\"\n    //         ? { dx: p.dx, dy: p.dy + c.length }\n    //         : { dx: p.dx + c.length, dy: p.dy },\n    //     { dx: 0, dy: 0 }\n    //   );\n    //   if (Math.abs(dx - (this.to.x - this.from.x)) > 1){\n\n    //   }\n    //   if (Math.abs(dy - (this.to.y - this.from.y)) > 1){\n\n    //   }\n    // });\n  }\n\n  data: C;\n  @observable\n  isHidden: boolean;\n  get graph(): RootStoreModel<D, G, any> {\n    return this.from.graph;\n  }\n\n  @computed\n  get isSelected(): boolean {\n    return this.from.graph.selectedConnection === this;\n  }\n\n  @computed\n  get toJson(): ConnectionJson {\n    return {\n      from: this.from.key,\n      to: this.to.key,\n      data: this.data.toJson,\n      isHidden: this.isHidden,\n      innerPoints: [...this.innerPoints.map((p) => ({ ...p }))],\n    };\n  }\n\n  @observable\n  innerPoints: IObservableArray<{\n    x: number;\n    y: number;\n  }>;\n}\n\nexport type LineData = {\n  length: number;\n  axis: \"vert\" | \"hori\";\n};\n\nexport class NodeModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public graph: RootStoreModel<D, G, any>,\n    d: {\n      key: string;\n      name: string;\n      x: number;\n      y: number;\n      isHidden?: boolean;\n      dataBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n      data?: JsonType;\n    }\n  ) {\n    this.key = d.key;\n    this.name = d.name;\n    this.x = d.x;\n    this.y = d.y;\n    this.isHidden = d.isHidden ?? false;\n    this.data = d.dataBuilder(this, d.data);\n  }\n\n  resizeObserver?: ResizeObserver;\n  element?: HTMLElement;\n  @observable\n  key: string;\n  @observable\n  name: string;\n  @observable\n  x: number;\n  @observable\n  y: number;\n  @observable\n  width: number = 60;\n  @observable\n  height: number = 60;\n  @observable\n  data: D;\n  @observable\n  isHidden: boolean;\n  @observable\n  inputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get inputNodes(): NodeModel<D, G, C>[] {\n    return this.inputs.map((c) => c.from);\n  }\n  @observable\n  outputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get outputNodes(): NodeModel<D, G, C>[] {\n    return this.outputs.map((c) => c.to);\n  }\n\n  @action\n  addInput(conn: ConnModel<D, G, C>) {\n    this.inputs.push(conn);\n    conn.from.outputs.push(conn);\n  }\n\n  @action\n  addOutput(conn: ConnModel<D, G, C>) {\n    this.outputs.push(conn);\n    conn.to.inputs.push(conn);\n  }\n\n  @action\n  move = (dx: number, dy: number) => {\n    this.x += dx;\n    this.y += dy;\n  };\n  @action\n  setSize = (rect: DOMRect) => {\n    this.width = rect.width;\n    this.height = rect.height;\n  };\n  @action\n  setName = (name: string) => {\n    this.name = name;\n  };\n  setElement = (element: HTMLElement) => {\n    this.setSize(element.getBoundingClientRect());\n\n    if (this.element !== element) {\n      if (this.resizeObserver !== undefined) {\n        this.resizeObserver.disconnect();\n      }\n      this.element = element;\n      this.resizeObserver = new ResizeObserver((entries, observer) => {\n        this.setSize(element.getBoundingClientRect());\n      });\n      this.resizeObserver.observe(element);\n    }\n  };\n\n  @computed\n  get toJson(): NodeJson {\n    return {\n      key: this.key,\n      name: this.name,\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      isHidden: this.isHidden,\n      data: this.data.toJson,\n    };\n  }\n}\n","import {\n  action,\n  computed,\n  IKeyValueMap,\n  IMapEntries,\n  observable,\n  ObservableMap,\n  reaction,\n} from \"mobx\";\nimport { v4 } from \"uuid\";\nimport { SourceDirectory } from \"../codegen/file-system\";\nimport {\n  NodeModel,\n  NodeData,\n  ConnModel,\n  ConnectionData,\n} from \"../node/node-model\";\nimport { downloadToClient } from \"../utils\";\nimport JSZip from \"jszip\";\nimport { ConnectionJson, GraphJson, IndexedDB, NodeJson } from \"./persistence\";\n\nexport type DataBuilder<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  connectionBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C;\n  nodeBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n  graphBuilder: (graph: RootStoreModel<D, G, C>, json?: JsonType) => G;\n};\n\ntype JsonTypeItem = number | string | boolean | JsonType;\nexport type JsonType = { [key: string]: JsonTypeItem | JsonTypeItem[] };\n\nexport type GraphWarnings = {\n  [key: string]: string[] | Array<[string, Array<string>]>;\n};\n\nexport interface GlobalData<D extends NodeData<D, any, any>> {\n  generateMainFile: string;\n  generateSourceCode: SourceDirectory;\n  generateProjectInFormat(format: string): string;\n  canAddNode(nodeType: string): boolean;\n  View: React.FunctionComponent;\n  CanvasView: React.FunctionComponent;\n  toJson: JsonType;\n  warnings: GraphWarnings;\n  initState?: () => void;\n}\n\ntype FullGraphJson = {\n  graph: GraphJson;\n  nodes: NodeJson[];\n  connections: ConnectionJson[];\n};\n\ntype ConstructParams<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  builders: DataBuilder<D, G, C>;\n  data?: G;\n  key?: string;\n  nodes?:\n    | IMapEntries<string, NodeModel<D, G, C>>\n    | IKeyValueMap<NodeModel<D, G, C>>;\n};\n\nexport class RootStoreModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> {\n  constructor(d: {\n    db: IndexedDB;\n    builders: DataBuilder<D, G, C>;\n    hideOnDelete?: boolean;\n    json?: FullGraphJson;\n  }) {\n    this.db = d.db;\n    this.builders = d.builders;\n    this.hideOnDelete = d.hideOnDelete ?? false;\n    this.globalData = d.builders.graphBuilder(this, d.json?.graph.data);\n    this.key = d.json?.graph.key ?? v4();\n\n    const nodes = d.json?.nodes.reduce((m, n) => {\n      const node = new NodeModel(this, {\n        ...n,\n        dataBuilder: d.builders.nodeBuilder,\n      });\n\n      m[n.key] = node;\n      return m;\n    }, {} as { [key: string]: NodeModel<D, G, C> });\n\n    this.nodes = observable.map(nodes ?? {});\n\n    d.json?.connections.forEach((c) => {\n      const from = this.nodes.get(c.from);\n      const to = this.nodes.get(c.to);\n      if (from !== undefined && to !== undefined) {\n        this.addConnection(from, to, c);\n      }\n    });\n    if (this.nodes.size !== 0) {\n      this.selectedNode = this.nodes.values().next().value;\n      if (this.selectedNode!.outputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.outputs[0];\n      } else if (this.selectedNode!.inputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.inputs[0];\n      } else {\n        for (const _n of this.nodes.values()) {\n          if (_n.outputs.length !== 0) {\n            this.selectedConnection = _n.outputs[0];\n            break;\n          }\n        }\n      }\n    }\n    if (this.globalData.initState !== undefined) {\n      this.globalData.initState();\n    }\n\n    document.addEventListener(\"mousemove\", (e) => {\n      this.mouseMoveEvent = e;\n    });\n\n    reaction(\n      (_) => ({\n        selectedPointIndex: this.selectedPointIndex,\n        mouseMoveEvent: this.mouseMoveEvent,\n      }),\n      (d) => {\n        if (\n          d.mouseMoveEvent !== undefined &&\n          d.selectedPointIndex !== undefined &&\n          this.selectedConnection !== undefined\n        ) {\n          const target = document\n            .getElementsByClassName(\"canvas-wrapper\")[0]!\n            .getBoundingClientRect();\n          const x = d.mouseMoveEvent.clientX - target.left;\n          const y = d.mouseMoveEvent.clientY - target.top;\n          this.selectedConnection.innerPoints[d.selectedPointIndex] = { x, y };\n        }\n      }\n    );\n  }\n\n  key: string;\n  // Builders to create graph, node and transition instances\n  builders: DataBuilder<D, G, C>;\n  hideOnDelete: boolean;\n  // Global generic data\n  globalData: G;\n  db: IndexedDB;\n\n  @observable\n  resetStore: boolean = false;\n  // All nodes\n  @observable\n  nodes: ObservableMap<string, NodeModel<D, G, C>>;\n  // Selected node\n  @observable\n  selectedNode?: NodeModel<D, G, C>;\n  // Selected connection\n  @observable\n  selectedConnection?: ConnModel<D, G, C>;\n\n  @observable\n  selectedPointIndex?: number;\n  @observable\n  mouseMoveEvent?: MouseEvent;\n\n  // Selected input for connection\n  @observable\n  selectingInputFor?: NodeModel<D, G, C>;\n\n  @observable\n  showHidden = true;\n  @observable\n  codesysVersion = localStorage.getItem(\"codesysVersion\");\n\n  @action\n  setCodesysVersion = (version: string) => {\n    localStorage.setItem(\"codesysVersion\", version);\n    this.codesysVersion = version;\n  };\n\n  // Select a node\n  @action\n  selectNode = (node: NodeModel<D, G, C>) => {\n    this.selectedNode = node;\n  };\n\n  // Select a connection\n  @action\n  selectConnection = (connection: ConnModel<D, G, C>) => {\n    this.selectedConnection = connection;\n  };\n\n  // Add a node\n  @action\n  addNode = (\n    nodeType: string,\n    pos?: { x: number; y: number }\n  ): NodeModel<D, G, C> | undefined => {\n    if (this.globalData.canAddNode(nodeType)) {\n      const op = new NodeModel(this, {\n        dataBuilder: this.builders.nodeBuilder,\n        key: v4(),\n        name: nodeType,\n        x: pos?.x ?? 100,\n        y: pos?.y ?? 100,\n        data: { type: nodeType },\n      });\n      this.nodes.set(op.key, op);\n      return op;\n    }\n  };\n\n  // Remove a node\n  @action\n  removeNode = (node: NodeModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      node.isHidden = true;\n      for (const _in of node.inputs) {\n        _in.isHidden = true;\n      }\n      for (const _out of node.outputs) {\n        _out.isHidden = true;\n      }\n    } else {\n      if (node === this.selectedNode) {\n        this.selectedNode = undefined;\n      }\n      if (this.nodes.delete(node.key)) {\n        for (const _in of node.inputs) {\n          _in.from.outputs.remove(_in);\n        }\n        for (const _out of node.outputs) {\n          _out.to.inputs.remove(_out);\n        }\n      }\n    }\n  };\n\n  @action\n  activateNode = (node: NodeModel<D, G, C>) => {\n    node.isHidden = false;\n    for (const _in of node.inputs) {\n      if (!_in.from.isHidden) _in.isHidden = false;\n    }\n    for (const _out of node.outputs) {\n      if (!_out.to.isHidden) _out.isHidden = false;\n    }\n  };\n\n  @action\n  removeConnection = (connection: ConnModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      connection.isHidden = true;\n    } else {\n      if (connection === this.selectedConnection) {\n        this.selectedConnection = undefined;\n      }\n      connection.from.outputs.remove(connection);\n      connection.to.inputs.remove(connection);\n    }\n  };\n\n  @action\n  activateConnection = (connection: ConnModel<D, G, C>): void => {\n    if (!connection.from.isHidden && !connection.to.isHidden) {\n      connection.isHidden = false;\n    }\n  };\n\n  // Select input-output / add connection\n\n  @action\n  selectingInput = (from: NodeModel<D, G, C>) => {\n    this.selectingInputFor = from;\n    window.addEventListener(\"keyup\", this._selectingInputKeyListener);\n  };\n\n  @action\n  assignInput = (to: NodeModel<D, G, C>): ConnModel<D, G, C> => {\n    const conn = new ConnModel(\n      this.selectingInputFor!,\n      to,\n      this.builders.connectionBuilder\n    );\n    conn.from.addOutput(conn);\n    this.selectingInputFor = undefined;\n    this.selectedConnection = conn;\n    window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    return conn;\n  };\n\n  @action\n  private _selectingInputKeyListener = (ev: KeyboardEvent) => {\n    if (ev.key === \"Escape\") {\n      this.selectingInputFor = undefined;\n      window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    }\n  };\n\n  @action\n  addConnection = (\n    from: NodeModel<D, G, C>,\n    to: NodeModel<D, G, C>,\n    json?: Partial<ConnectionJson>\n  ): ConnModel<D, G, C> => {\n    const conn = new ConnModel(from, to, this.builders.connectionBuilder, json);\n    conn.from.addOutput(conn);\n    return conn;\n  };\n\n  // Serialization\n\n  @computed\n  get toJson(): GraphJson {\n    return { data: this.globalData.toJson, key: this.key };\n  }\n\n  saveModel = async () => {\n    const nodes = [...this.nodes.entries()];\n    await this.db.clearDB();\n    await Promise.all([\n      this.db.updateGraph(this.toJson),\n      this.db.addNodes(\n        this.key,\n        nodes.map(([_, value]) => value.toJson)\n      ),\n      this.db.addConnections(\n        this.key,\n        nodes.flatMap(([_, value]) => value.outputs).map((t) => t.toJson)\n      ),\n    ]);\n  };\n\n  downloadModel = (): FullGraphJson => {\n    const nodes = [...this.nodes.entries()];\n    const json = {\n      graph: this.toJson,\n      nodes: nodes.map(([_, value]) => value.toJson),\n      connections: nodes\n        .flatMap(([_, value]) => value.outputs)\n        .map((t) => t.toJson),\n    };\n\n    downloadToClient(\n      JSON.stringify(json),\n      \"gemma-model.json\",\n      \"application/json\"\n    );\n    return json;\n  };\n\n  downloadSourceCode = async (format: \"XML\" | \"TXT\") => {\n    if (format === \"TXT\") {\n      const _addToZip = (root: JSZip, dir: SourceDirectory) => {\n        const newRoot = root.folder(dir.name)!;\n\n        for (const item of dir.items) {\n          item.when({\n            file: (f) => newRoot.file(f.name, f.content),\n            dir: (d) => _addToZip(newRoot, d),\n          });\n        }\n      };\n\n      const zip = new JSZip();\n      const sourceCode = this.globalData.generateSourceCode;\n      _addToZip(zip, sourceCode);\n\n      const content = await zip.generateAsync({ type: \"blob\" });\n\n      downloadToClient(\n        content,\n        \"gemma-grafcet-source-code.zip\",\n        \"application/zip\"\n      );\n    } else if (format === \"XML\") {\n      const projectFile = this.globalData.generateProjectInFormat(format);\n      downloadToClient(\n        projectFile,\n        \"gemma-grafcet-source-code.xml\",\n        \"application/xml\"\n      );\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props2 = {\n  children: React.ReactNode;\n};\n\nexport const PropertiesTable = observer(({ children }: Props2) => {\n  return (\n    <PropertiesTableStyled>\n      <thead>\n        <tr>\n          <td>Property</td>\n          <td>Value</td>\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </PropertiesTableStyled>\n  );\n});\n\ntype Props<D extends NodeData<D, any, any>> = {\n  self: NodeModel<D, any, any>;\n};\n\nexport const PropertiesTableNode = observer(\n  <D extends NodeData<D, any, any>>({ self }: Props<D>) => {\n    const rootStore = useStore();\n    return (\n      <div className=\"col\">\n        <PropertiesTable>\n          {Object.entries(self.data.spec).map(([k, v]) => (\n            <tr key={k}>\n              <td>{k}</td>\n              <td>\n                <v.plotField name={k} model={self.data as any} />\n              </td>\n            </tr>\n          ))}\n        </PropertiesTable>\n        <div style={{ margin: \"0 3px\" }}>\n          {self.data.nInputs !== 0 && (\n            <div className=\"row\" key=\"inputs\" style={{ alignItems: \"center\" }}>\n              <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Inputs:</h4>\n              <div style={{ flex: 1 }}>\n                {self.inputs.map((v) => (\n                  <Button\n                    onClick={() => rootStore.selectConnection(v as any)}\n                    key={v.from.key}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    style={{ minWidth: \"39px\" }}\n                  >\n                    {v.from.name}\n                  </Button>\n                ))}\n                {self.inputs.length === 0 && \"No inputs\"}\n              </div>\n            </div>\n          )}\n          <div className=\"row\" key=\"outputs\" style={{ alignItems: \"center\" }}>\n            <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Outputs:</h4>\n            <div style={{ flex: 1 }}>\n              {self.outputs.map((v) => (\n                <Button\n                  onClick={() => rootStore.selectConnection(v as any)}\n                  key={v.to.key}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  style={{ minWidth: \"39px\" }}\n                >\n                  {v.to.name}\n                </Button>\n              ))}\n              {self.outputs.length === 0 && \"No outputs\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nconst PropertiesTableStyled = styled.table`\n  padding-bottom: 10px;\n  thead {\n    font-size: 1.1em;\n    font-weight: bolder;\n    tr td:last-child {\n      padding: 4px 0px 4px 10px;\n    }\n  }\n  tr td {\n    padding: 0;\n  }\n  tr td:first-child {\n    padding-right: 15px;\n    height: 32px;\n  }\n  tr td:last-child {\n    margin: auto auto;\n    padding-left: 10px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React from \"react\";\nimport { resizableEnable } from \"../utils\";\nimport { PropertiesTableNode } from \"./properties-table\";\nimport { useStore } from \"../App\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./properties-view.css\";\n\ntype Props = {};\n\nexport const PropertiesView: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n\n  let inner;\n  if (rootStore.selectedNode != null) {\n    const selectedNode = rootStore.selectedNode;\n    const selectedConnection = rootStore.selectedConnection;\n    inner = (\n      <div\n        style={{\n          overflow: \"auto\",\n          maxHeight: \"100%\",\n          maxWidth: \"100%\",\n          justifyContent: \"space-around\",\n          backgroundColor: \"#fafafa\",\n          display: \"flex\",\n        }}\n        className=\"row\"\n      >\n        <div\n          className=\"properties-view\"\n          key=\"node-properties\"\n          id=\"node-properties\"\n        >\n          <div\n            className=\"row\"\n            style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n          >\n            <h3 style={{ margin: \"5px 0px 10px 5px\" }}>\n              {`Step: ${selectedNode.name}`}\n            </h3>\n            <IconButton\n              onClick={(_) => {\n                if (selectedNode.isHidden) {\n                  rootStore.activateNode(selectedNode);\n                } else {\n                  rootStore.removeNode(selectedNode);\n                }\n              }}\n            >\n              <FontAwesomeIcon\n                icon={selectedNode.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                color={\"#000\"}\n              />\n            </IconButton>\n          </div>\n          <PropertiesTableNode self={rootStore.selectedNode} />\n        </div>\n        <div\n          className=\"properties-view\"\n          key=\"connection-properties\"\n          id=\"connection-properties\"\n        >\n          {selectedConnection !== undefined && (\n            <div className=\"col\">\n              <div\n                className=\"row\"\n                style={{\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3 style={{ margin: \"5px 0 10px 5px\" }}>\n                  {`Transition: ${selectedConnection.from.name} -> ${selectedConnection.to.name}`}\n                </h3>\n                <IconButton\n                  onClick={(_) => {\n                    if (selectedConnection.isHidden) {\n                      rootStore.activateConnection(selectedConnection);\n                    } else {\n                      rootStore.removeConnection(selectedConnection);\n                    }\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={selectedConnection.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                    color={\"#000\"}\n                  />\n                </IconButton>\n              </div>\n              <selectedConnection.data.ConnectionView />\n            </div>\n          )}\n        </div>\n        <div\n          style={{ minWidth: \"270px\" }}\n          className=\"properties-view\"\n          key=\"graph-properties\"\n          id=\"graph-properties\"\n        >\n          <rootStore.globalData.View />\n        </div>\n      </div>\n    );\n  } else {\n    inner = (\n      <div style={{ width: \"150px\" }} className=\"row\">\n        <div style={{ width: \"150px\" }} className=\"center\">\n          Not selected\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Resizable\n      minHeight={200}\n      defaultSize={{ height: 295, width: \"auto\" }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ top: true })}\n    >\n      {inner}\n    </Resizable>\n  );\n});\n","export class VarId {\n  constructor(public text: string) {}\n\n  toString(): string {\n    return this.text;\n  }\n}\n\nexport type CustomToken =\n  | \"(\"\n  | \")\"\n  | \"AND\"\n  | \"OR\"\n  | \"NOT\"\n  | \"<\"\n  | \"<>\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"\\n\"\n  | VarId;\n\nexport const getCustomTokens = (t: string): [CustomToken, number][] => {\n  const l: [CustomToken, number][] = [];\n  let i = -1;\n  let omit = 0;\n  let signal = \"\";\n  const addSignal = () => {\n    if (signal.length !== 0) {\n      l.push([new VarId(signal), i - signal.length]);\n      signal = \"\";\n    }\n  };\n  const add = (v: CustomToken) => {\n    addSignal();\n    l.push([v, i]);\n  };\n\n  for (const c of t) {\n    i++;\n    if (omit !== 0) {\n      omit--;\n      continue;\n    }\n    switch (c) {\n      case \" \":\n        addSignal();\n        break;\n      case \"\\n\":\n      case \")\":\n      case \"(\":\n      case \"<\":\n        if (t.substring(i, i + 2) === \"<>\") {\n          omit = 1;\n          add(\"<>\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \">\":\n        add(c);\n        break;\n      case \"=\":\n        const prevToken = l[l.length - 1];\n        const prev = prevToken[0];\n        const strPrev = prev instanceof VarId ? prev.text : prev;\n        if ([\"<\", \">\"].includes(strPrev) && prevToken[1] === i - 1) {\n          l[l.length - 1][0] = (prev + \"=\") as any;\n        } else {\n          add(c);\n        }\n        break;\n      case \"A\":\n        if (t.substring(i, i + 3) === \"AND\") {\n          omit = 2;\n          add(\"AND\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"O\":\n        if (t.substring(i, i + 2) === \"OR\") {\n          omit = 1;\n          add(\"OR\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"N\":\n        if (t.substring(i, i + 3) === \"NOT\") {\n          omit = 2;\n          add(\"NOT\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      default:\n        signal += c;\n        break;\n    }\n  }\n  if (signal.length !== 0) {\n    l.push([new VarId(signal), i - signal.length + 1]);\n  }\n  return l;\n};\n\ntype ParseR = { ok: boolean };\n\n// type Conv = (tokens: Token[]) => ParseR;\n\n// const _union = (fs: Array<Conv>) => {};\n\n// const _find = (token: Token): Conv => {\n//   return (ts) => {\n//     return { ok: ts[0] == token };\n//   };\n// };\n\ntype Item = (CustomToken | Union)[];\n\ntype ExpType = \"VarId\" | \"comp\" | \"and\" | \"simpleExp\" | \"numOP\";\n\nclass Union {\n  constructor(\n    items: Partial<{ [key in ExpType]: (CustomToken | \"SELF\" | Union)[] }>\n  ) {\n    this.variants = Object.values(items).map((l) => {\n      return l!.map((v) => (v === \"SELF\" ? this : v));\n    });\n  }\n  variants: Item[];\n}\n\n// type Val = Item | Union;\n\n// type Expression<V extends { [key: string]: Token }> = {\n//   name: ExpType;\n//   tokens: Item;\n//   p: (t: Token[]) => V;\n// };\n\n// export const getCustomParse = (tokens: Token[]) => {\n//   const varId: Expression<{ varId: VarId }> = {\n//     name: \"VarId\",\n//     p: (t) => ({ varId: t[0] as VarId }),\n//     tokens: [new VarId(\"\")],\n//   };\n\n//   const numSimple = new Union({\n//     VarId: [new VarId(\"\")], //TODO: decimal\n//   });\n\n//   const comparator = new Union([[\"<\"], [\">\"], [\"=\"], [\"<=\"], [\">=\"]]);\n\n//   const expSimple = new Union([\n//     [numSimple, comparator, numSimple],\n//     [new VarId(\"\")],\n//   ]);\n\n//   const expAnd = new Union([[expSimple, \"AND\", \"SELF\"], [expSimple]]);\n\n//   const exp = new Union([\n//     [\"(\", \"SELF\", \")\"],\n//     [\"NOT\", \"SELF\"],\n//     [expAnd, \"OR\", \"SELF\"],\n//     [expAnd],\n//   ]);\n\n//   for (const t of tokens) {\n//     matchPossibilities(t, exp);\n//   }\n// };\n\n// const matchPossibilities = (t: Token, possibilities: Union): void => {\n//   let i = -1;\n//   for (const variant of possibilities.variants) {\n//     i++;\n\n//     const curr = variant.pop();\n//     if (curr === undefined) {\n//     } else if (typeof curr == \"string\") {\n//       if (t == curr) {\n//       }\n//     } else if (curr instanceof Union) {\n//       matchPossibilities(t, curr);\n//     } else {\n//       if (t instanceof VarId) {\n//       } else {\n//       }\n//     }\n//   }\n// };\n","import { VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { EnclosingStep, MacroStep, SimpleStep, StepType } from \"./step\";\nimport { Transition } from \"./transition\";\nimport { Signal } from \"./signal\";\n\nexport class H {\n  static textOrEmpty = (cond: boolean, text: string) => (cond ? text : \"\");\n}\n\nexport const memoryTransitionSuffix = (t: Transition): string => {\n  return `_${t.from.name}_${t.priority}_MEM`;\n};\n\nconst templateCondition = (t: Transition): string => {\n  return t.expressionTokens\n    .map(([tok, _]) => {\n      // Is signal\n      if (tok instanceof VarId) {\n        const withMemory =\n          t.savedSignalsWithMemory.get(tok.text)?.withMemory ?? false;\n\n        return withMemory\n          ? tok.text + memoryTransitionSuffix(t)\n          : isNaN(Number.parseFloat(tok.text))\n          ? \"GVL.\" + tok.text\n          : tok.text;\n      } else if (t.connection.graph.globalData.generatingXML) {\n        switch (tok) {\n          case \"<\":\n            return \"&lt;\";\n          case \">\":\n            return \"&gt;\";\n          case \"<=\":\n            return \"&lt;=\";\n          case \">=\":\n            return \"&gt;=\";\n          case \"<>\":\n            return \"&lt;&gt;\";\n          default:\n            return tok;\n        }\n      } else {\n        return tok;\n      }\n    })\n    .join(\" \");\n};\n\nconst templateTransitions = (\n  transitions: Transition[],\n  { isNested }: { isNested: boolean }\n) => {\n  return `\\\n${transitions\n  .map((t, index) => {\n    return `\n${index === 0 ? \"IF\" : \"ELSIF\"} ${templateCondition(t)} THEN\n  State:=${t.to.id};\\\n  ${isNested ? \"\\n  Entry:=TRUE;\" : \"\"}`;\n  })\n  .join(\"\\n\")}\\\n${transitions.length === 0 ? \"\" : \"\\nEND_IF\"}`;\n};\n\nconst templateGemmaGrafcetSimpleStep = (model: SimpleStep): string => {\n  return templateTransitions(model.transitions, { isNested: false });\n};\n\nconst templateFBEntry = (model: MacroStep | EnclosingStep): string => `\\\nIF Entry THEN\n  ${model.name}(Initialization:=ENTRY);\n  Entry:=FALSE;\n${model.transitions\n  .flatMap((t) =>\n    t.signalsWithMemory.map(\n      (sm) =>\n        `  ${sm.value}${memoryTransitionSuffix(t)} := ${\n          sm.behaviour === \"NO\" ? \"FALSE\" : \"TRUE\"\n        };`\n    )\n  )\n  .join(\"\\n\")}\nEND_IF\n${model.name}(Initialization:=ENTRY);`;\n\nconst templateGemmaGrafcetNestedStep = (\n  model: MacroStep | EnclosingStep\n): string => {\n  const transitions = model.transitions;\n  const _evaluateComplete = (t: Transition, index: number): boolean => {\n    const _isInner = transitions.length - model.innerTransitionsLength <= index;\n    switch (model.type) {\n      case StepType.MACRO:\n        return _isInner && !t.isNegated;\n      case StepType.ENCLOSING:\n        return _isInner && t.isNegated;\n    }\n    throw new Error(\"\");\n  };\n\n  return `\n${templateFBEntry(model)}\n\n${transitions\n  .map((t, index) => {\n    const condition = `${templateCondition(t)}${\n      _evaluateComplete(t, index) ? ` AND ${model.name}.Complete` : \"\"\n    }`;\n    return `\\\n${index === 0 ? \"IF\" : \"ELSIF\"} ${condition} THEN\n  State:=${t.to.id};\n  Entry:=TRUE;\n`;\n  })\n  .join(\"\\n\")}\\\n${H.textOrEmpty(transitions.length !== 0, \"\\nEND_IF\")}`;\n};\n\nexport const templateGlobals = (signals: Array<Signal>): string => {\n  return `\\\nVAR_GLOBAL\n    ${signals\n      .map((s) => {\n        const defaultValue =\n          s.defaultValue.trim().length === 0 ? \"\" : \" :=\" + s.defaultValue;\n        return `${s.name} : ${s.type.toUpperCase()}${defaultValue};`;\n      })\n      .join(\"\\n    \")}\nEND_VAR\n`;\n};\n\nconst gemmaVariables = (model: GemmaGrafcet): string => {\n  return `\\\n// Variable declaration\nVAR\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .map((s) => `  ${s.name}:${s.name}_FB;`)\n  .join(\"\\n\")}\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map((sm) => {\n      const assign = sm.behaviour === \"NO\" ? \"FALSE\" : \"TRUE\";\n      return `  ${sm.value}${memoryTransitionSuffix(t)}:BOOL:=${assign};`;\n    })\n  )\n  .join(\"    \\n\")}\n\n  State:UINT:=${model.initialStep?.id};\n  Entry:BOOL:=TRUE;\nEND_VAR    \n`;\n};\n\nexport const templateGemmaGrafcet = (model: GemmaGrafcet): string => {\n  return `\n${gemmaVariables(model)}\n${gemmaBehaviour(model)}\n`;\n};\n\nexport const gemmaBehaviour = (model: GemmaGrafcet): string => {\n  return `\n// Program behavior\nCASE State OF\n  ${model.steps\n    .map((step) => {\n      return `\n  ${step.id}: //State ${step.name}\n    ${(() => {\n      switch (step.type) {\n        case StepType.SIMPLE:\n          return templateGemmaGrafcetSimpleStep(step);\n        case StepType.ENCLOSING:\n        case StepType.MACRO:\n          return templateGemmaGrafcetNestedStep(step);\n        default:\n          throw new Error(\"\");\n      }\n    })().replace(/\\n/g, \"\\n    \")}\n  `;\n    })\n    .join(\"\\n\")}\nEND_CASE\n\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map((sm) => {\n      const prefix = sm.behaviour === \"NC\" ? \"NOT \" : \"\";\n      const assign = sm.behaviour === \"NO\" ? \"TRUE\" : \"FALSE\";\n      return `\\\nIF State = ${t.from.id} AND ${prefix}GVL.${sm.value} THEN\n  ${sm.value}${memoryTransitionSuffix(t)} := ${assign};\nEND_IF\n`;\n    })\n  )\n  .join(\"\\n\")}\n`;\n};\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { CharStream } from \"antlr4ts/CharStream\";\nimport { Lexer } from \"antlr4ts/Lexer\";\nimport { LexerATNSimulator } from \"antlr4ts/atn/LexerATNSimulator\";\nimport { NotNull } from \"antlr4ts/Decorators\";\nimport { Override } from \"antlr4ts/Decorators\";\nimport { RuleContext } from \"antlr4ts/RuleContext\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\n\nexport class SimpleBooleanLexer extends Lexer {\n\tpublic static readonly AND = 1;\n\tpublic static readonly OR = 2;\n\tpublic static readonly NOT = 3;\n\tpublic static readonly TRUE = 4;\n\tpublic static readonly FALSE = 5;\n\tpublic static readonly GT = 6;\n\tpublic static readonly GE = 7;\n\tpublic static readonly LT = 8;\n\tpublic static readonly DIF = 9;\n\tpublic static readonly LE = 10;\n\tpublic static readonly EQ = 11;\n\tpublic static readonly LPAREN = 12;\n\tpublic static readonly RPAREN = 13;\n\tpublic static readonly DECIMAL = 14;\n\tpublic static readonly IDENTIFIER = 15;\n\tpublic static readonly WS = 16;\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly channelNames: string[] = [\n\t\t\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\n\t];\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly modeNames: string[] = [\n\t\t\"DEFAULT_MODE\",\n\t];\n\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"DIF\", \"LE\", \"EQ\", \n\t\t\"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, \"'AND'\", \"'OR'\", \"'NOT'\", \"'TRUE'\", \"'FALSE'\", \"'>'\", \"'>='\", \n\t\t\"'<'\", \"'<>'\", \"'<='\", \"'='\", \"'('\", \"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"DIF\", \n\t\t\"LE\", \"EQ\", \"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleBooleanLexer._LITERAL_NAMES, SimpleBooleanLexer._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn SimpleBooleanLexer.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\n\tconstructor(input: CharStream) {\n\t\tsuper(input);\n\t\tthis._interp = new LexerATNSimulator(SimpleBooleanLexer._ATN, this);\n\t}\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"SimpleBoolean.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return SimpleBooleanLexer.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return SimpleBooleanLexer._serializedATN; }\n\n\t// @Override\n\tpublic get channelNames(): string[] { return SimpleBooleanLexer.channelNames; }\n\n\t// @Override\n\tpublic get modeNames(): string[] { return SimpleBooleanLexer.modeNames; }\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02\\x12j\\b\\x01\\x04\" +\n\t\t\"\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\" +\n\t\t\"\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\" +\n\t\t\"\\x04\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x03\\x02\\x03\\x02\" +\n\t\t\"\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\" +\n\t\t\"\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\" +\n\t\t\"\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\n\\x03\" +\n\t\t\"\\n\\x03\\n\\x03\\v\\x03\\v\\x03\\v\\x03\\f\\x03\\f\\x03\\r\\x03\\r\\x03\\x0E\\x03\\x0E\\x03\" +\n\t\t\"\\x0F\\x05\\x0FN\\n\\x0F\\x03\\x0F\\x06\\x0FQ\\n\\x0F\\r\\x0F\\x0E\\x0FR\\x03\\x0F\\x03\" +\n\t\t\"\\x0F\\x06\\x0FW\\n\\x0F\\r\\x0F\\x0E\\x0FX\\x05\\x0F[\\n\\x0F\\x03\\x10\\x03\\x10\\x07\" +\n\t\t\"\\x10_\\n\\x10\\f\\x10\\x0E\\x10b\\v\\x10\\x03\\x11\\x06\\x11e\\n\\x11\\r\\x11\\x0E\\x11\" +\n\t\t\"f\\x03\\x11\\x03\\x11\\x02\\x02\\x02\\x12\\x03\\x02\\x03\\x05\\x02\\x04\\x07\\x02\\x05\" +\n\t\t\"\\t\\x02\\x06\\v\\x02\\x07\\r\\x02\\b\\x0F\\x02\\t\\x11\\x02\\n\\x13\\x02\\v\\x15\\x02\\f\\x17\" +\n\t\t\"\\x02\\r\\x19\\x02\\x0E\\x1B\\x02\\x0F\\x1D\\x02\\x10\\x1F\\x02\\x11!\\x02\\x12\\x03\\x02\" +\n\t\t\"\\x06\\x03\\x022;\\x05\\x02C\\\\aac|\\x06\\x022;C\\\\aac|\\x05\\x02\\v\\f\\x0E\\x0F\\\"\\\"\" +\n\t\t\"\\x02o\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\\x02\\x02\\x07\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\\x02\\r\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02\\x0F\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02\\x02\\x02\\x02\\x13\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02\\x15\\x03\\x02\\x02\\x02\\x02\\x17\\x03\\x02\\x02\\x02\\x02\\x19\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02\\x1B\\x03\\x02\\x02\\x02\\x02\\x1D\\x03\\x02\\x02\\x02\\x02\\x1F\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02!\\x03\\x02\\x02\\x02\\x03#\\x03\\x02\\x02\\x02\\x05\\'\\x03\\x02\\x02\\x02\\x07\" +\n\t\t\"*\\x03\\x02\\x02\\x02\\t.\\x03\\x02\\x02\\x02\\v3\\x03\\x02\\x02\\x02\\r9\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x0F;\\x03\\x02\\x02\\x02\\x11>\\x03\\x02\\x02\\x02\\x13@\\x03\\x02\\x02\\x02\\x15\" +\n\t\t\"C\\x03\\x02\\x02\\x02\\x17F\\x03\\x02\\x02\\x02\\x19H\\x03\\x02\\x02\\x02\\x1BJ\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x1DM\\x03\\x02\\x02\\x02\\x1F\\\\\\x03\\x02\\x02\\x02!d\\x03\\x02\\x02\\x02\" +\n\t\t\"#$\\x07C\\x02\\x02$%\\x07P\\x02\\x02%&\\x07F\\x02\\x02&\\x04\\x03\\x02\\x02\\x02\\'(\" +\n\t\t\"\\x07Q\\x02\\x02()\\x07T\\x02\\x02)\\x06\\x03\\x02\\x02\\x02*+\\x07P\\x02\\x02+,\\x07\" +\n\t\t\"Q\\x02\\x02,-\\x07V\\x02\\x02-\\b\\x03\\x02\\x02\\x02./\\x07V\\x02\\x02/0\\x07T\\x02\" +\n\t\t\"\\x0201\\x07W\\x02\\x0212\\x07G\\x02\\x022\\n\\x03\\x02\\x02\\x0234\\x07H\\x02\\x024\" +\n\t\t\"5\\x07C\\x02\\x0256\\x07N\\x02\\x0267\\x07U\\x02\\x0278\\x07G\\x02\\x028\\f\\x03\\x02\" +\n\t\t\"\\x02\\x029:\\x07@\\x02\\x02:\\x0E\\x03\\x02\\x02\\x02;<\\x07@\\x02\\x02<=\\x07?\\x02\" +\n\t\t\"\\x02=\\x10\\x03\\x02\\x02\\x02>?\\x07>\\x02\\x02?\\x12\\x03\\x02\\x02\\x02@A\\x07>\\x02\" +\n\t\t\"\\x02AB\\x07@\\x02\\x02B\\x14\\x03\\x02\\x02\\x02CD\\x07>\\x02\\x02DE\\x07?\\x02\\x02\" +\n\t\t\"E\\x16\\x03\\x02\\x02\\x02FG\\x07?\\x02\\x02G\\x18\\x03\\x02\\x02\\x02HI\\x07*\\x02\\x02\" +\n\t\t\"I\\x1A\\x03\\x02\\x02\\x02JK\\x07+\\x02\\x02K\\x1C\\x03\\x02\\x02\\x02LN\\x07/\\x02\\x02\" +\n\t\t\"ML\\x03\\x02\\x02\\x02MN\\x03\\x02\\x02\\x02NP\\x03\\x02\\x02\\x02OQ\\t\\x02\\x02\\x02\" +\n\t\t\"PO\\x03\\x02\\x02\\x02QR\\x03\\x02\\x02\\x02RP\\x03\\x02\\x02\\x02RS\\x03\\x02\\x02\\x02\" +\n\t\t\"SZ\\x03\\x02\\x02\\x02TV\\x070\\x02\\x02UW\\t\\x02\\x02\\x02VU\\x03\\x02\\x02\\x02WX\" +\n\t\t\"\\x03\\x02\\x02\\x02XV\\x03\\x02\\x02\\x02XY\\x03\\x02\\x02\\x02Y[\\x03\\x02\\x02\\x02\" +\n\t\t\"ZT\\x03\\x02\\x02\\x02Z[\\x03\\x02\\x02\\x02[\\x1E\\x03\\x02\\x02\\x02\\\\`\\t\\x03\\x02\" +\n\t\t\"\\x02]_\\t\\x04\\x02\\x02^]\\x03\\x02\\x02\\x02_b\\x03\\x02\\x02\\x02`^\\x03\\x02\\x02\" +\n\t\t\"\\x02`a\\x03\\x02\\x02\\x02a \\x03\\x02\\x02\\x02b`\\x03\\x02\\x02\\x02ce\\t\\x05\\x02\" +\n\t\t\"\\x02dc\\x03\\x02\\x02\\x02ef\\x03\\x02\\x02\\x02fd\\x03\\x02\\x02\\x02fg\\x03\\x02\\x02\" +\n\t\t\"\\x02gh\\x03\\x02\\x02\\x02hi\\b\\x11\\x02\\x02i\\\"\\x03\\x02\\x02\\x02\\t\\x02MRXZ`f\" +\n\t\t\"\\x03\\b\\x02\\x02\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!SimpleBooleanLexer.__ATN) {\n\t\t\tSimpleBooleanLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleBooleanLexer._serializedATN));\n\t\t}\n\n\t\treturn SimpleBooleanLexer.__ATN;\n\t}\n\n}\n\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { FailedPredicateException } from \"antlr4ts/FailedPredicateException\";\nimport { NotNull } from \"antlr4ts/Decorators\";\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\nimport { Override } from \"antlr4ts/Decorators\";\nimport { Parser } from \"antlr4ts/Parser\";\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\nimport { ParseTreeListener } from \"antlr4ts/tree/ParseTreeListener\";\nimport { ParseTreeVisitor } from \"antlr4ts/tree/ParseTreeVisitor\";\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\nimport { RuleContext } from \"antlr4ts/RuleContext\";\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\nimport { Token } from \"antlr4ts/Token\";\nimport { TokenStream } from \"antlr4ts/TokenStream\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\nimport { SimpleBooleanListener } from \"./SimpleBooleanListener\";\nimport { SimpleBooleanVisitor } from \"./SimpleBooleanVisitor\";\n\nexport class SimpleBooleanParser extends Parser {\n  public static readonly AND = 1;\n  public static readonly OR = 2;\n  public static readonly NOT = 3;\n  public static readonly TRUE = 4;\n  public static readonly FALSE = 5;\n  public static readonly GT = 6;\n  public static readonly GE = 7;\n  public static readonly LT = 8;\n  public static readonly DIF = 9;\n  public static readonly LE = 10;\n  public static readonly EQ = 11;\n  public static readonly LPAREN = 12;\n  public static readonly RPAREN = 13;\n  public static readonly DECIMAL = 14;\n  public static readonly IDENTIFIER = 15;\n  public static readonly WS = 16;\n  public static readonly RULE_parse = 0;\n  public static readonly RULE_expression = 1;\n  public static readonly RULE_expressionAnd = 2;\n  public static readonly RULE_expressionSimple = 3;\n  public static readonly RULE_numExpression = 4;\n  public static readonly RULE_comparator = 5;\n  // tslint:disable:no-trailing-whitespace\n  public static readonly ruleNames: string[] = [\n    \"parse\",\n    \"expression\",\n    \"expressionAnd\",\n    \"expressionSimple\",\n    \"numExpression\",\n    \"comparator\",\n  ];\n\n  private static readonly _LITERAL_NAMES: Array<string | undefined> = [\n    undefined,\n    \"'AND'\",\n    \"'OR'\",\n    \"'NOT'\",\n    \"'TRUE'\",\n    \"'FALSE'\",\n    \"'>'\",\n    \"'>='\",\n    \"'<'\",\n    \"'<>'\",\n    \"'<='\",\n    \"'='\",\n    \"'('\",\n    \"')'\",\n  ];\n  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n    undefined,\n    \"AND\",\n    \"OR\",\n    \"NOT\",\n    \"TRUE\",\n    \"FALSE\",\n    \"GT\",\n    \"GE\",\n    \"LT\",\n    \"DIF\",\n    \"LE\",\n    \"EQ\",\n    \"LPAREN\",\n    \"RPAREN\",\n    \"DECIMAL\",\n    \"IDENTIFIER\",\n    \"WS\",\n  ];\n  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(\n    SimpleBooleanParser._LITERAL_NAMES,\n    SimpleBooleanParser._SYMBOLIC_NAMES,\n    []\n  );\n\n  // @Override\n  // @NotNull\n  public get vocabulary(): Vocabulary {\n    return SimpleBooleanParser.VOCABULARY;\n  }\n  // tslint:enable:no-trailing-whitespace\n\n  // @Override\n  public get grammarFileName(): string {\n    return \"SimpleBoolean.g4\";\n  }\n\n  // @Override\n  public get ruleNames(): string[] {\n    return SimpleBooleanParser.ruleNames;\n  }\n\n  // @Override\n  public get serializedATN(): string {\n    return SimpleBooleanParser._serializedATN;\n  }\n\n  constructor(input: TokenStream) {\n    super(input);\n    this._interp = new ParserATNSimulator(SimpleBooleanParser._ATN, this);\n  }\n  // @RuleVersion(0)\n  public parse(): ParseContext {\n    let _localctx: ParseContext = new ParseContext(this._ctx, this.state);\n    this.enterRule(_localctx, 0, SimpleBooleanParser.RULE_parse);\n    try {\n      this.enterOuterAlt(_localctx, 1);\n      {\n        this.state = 12;\n        this.expression();\n        this.state = 13;\n        this.match(SimpleBooleanParser.EOF);\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n  // @RuleVersion(0)\n  public expression(): ExpressionContext {\n    let _localctx: ExpressionContext = new ExpressionContext(\n      this._ctx,\n      this.state\n    );\n    this.enterRule(_localctx, 2, SimpleBooleanParser.RULE_expression);\n    try {\n      this.state = 20;\n      this._errHandler.sync(this);\n      switch (this.interpreter.adaptivePredict(this._input, 0, this._ctx)) {\n        case 1:\n          _localctx = new OrExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 1);\n          {\n            this.state = 15;\n            (_localctx as OrExpressionContext)._left = this.expressionAnd();\n            this.state = 16;\n            this.match(SimpleBooleanParser.OR);\n            this.state = 17;\n            (_localctx as OrExpressionContext)._right = this.expression();\n          }\n          break;\n\n        case 2:\n          _localctx = new AndParentExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 2);\n          {\n            this.state = 19;\n            this.expressionAnd();\n          }\n          break;\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n  // @RuleVersion(0)\n  public expressionAnd(): ExpressionAndContext {\n    let _localctx: ExpressionAndContext = new ExpressionAndContext(\n      this._ctx,\n      this.state\n    );\n    this.enterRule(_localctx, 4, SimpleBooleanParser.RULE_expressionAnd);\n    try {\n      this.state = 27;\n      this._errHandler.sync(this);\n      switch (this.interpreter.adaptivePredict(this._input, 1, this._ctx)) {\n        case 1:\n          _localctx = new AndExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 1);\n          {\n            this.state = 22;\n            (_localctx as AndExpressionContext)._left = this.expressionSimple();\n            this.state = 23;\n            this.match(SimpleBooleanParser.AND);\n            this.state = 24;\n            (_localctx as AndExpressionContext)._right = this.expressionAnd();\n          }\n          break;\n\n        case 2:\n          _localctx = new SimpleExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 2);\n          {\n            this.state = 26;\n            this.expressionSimple();\n          }\n          break;\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n  // @RuleVersion(0)\n  public expressionSimple(): ExpressionSimpleContext {\n    let _localctx: ExpressionSimpleContext = new ExpressionSimpleContext(\n      this._ctx,\n      this.state\n    );\n    this.enterRule(_localctx, 6, SimpleBooleanParser.RULE_expressionSimple);\n    try {\n      this.state = 40;\n      this._errHandler.sync(this);\n      switch (this.interpreter.adaptivePredict(this._input, 2, this._ctx)) {\n        case 1:\n          _localctx = new NotExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 1);\n          {\n            this.state = 29;\n            this.match(SimpleBooleanParser.NOT);\n            this.state = 30;\n            this.expression();\n          }\n          break;\n\n        case 2:\n          _localctx = new ComparatorExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 2);\n          {\n            this.state = 31;\n            (_localctx as ComparatorExpressionContext)._left = this.numExpression();\n            this.state = 32;\n            (_localctx as ComparatorExpressionContext)._op = this.comparator();\n            this.state = 33;\n            (_localctx as ComparatorExpressionContext)._right = this.numExpression();\n          }\n          break;\n\n        case 3:\n          _localctx = new IdentifierExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 3);\n          {\n            this.state = 35;\n            this.match(SimpleBooleanParser.IDENTIFIER);\n          }\n          break;\n\n        case 4:\n          _localctx = new ParenExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 4);\n          {\n            this.state = 36;\n            this.match(SimpleBooleanParser.LPAREN);\n            this.state = 37;\n            this.expression();\n            this.state = 38;\n            this.match(SimpleBooleanParser.RPAREN);\n          }\n          break;\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n  // @RuleVersion(0)\n  public numExpression(): NumExpressionContext {\n    let _localctx: NumExpressionContext = new NumExpressionContext(\n      this._ctx,\n      this.state\n    );\n    this.enterRule(_localctx, 8, SimpleBooleanParser.RULE_numExpression);\n    try {\n      this.state = 44;\n      this._errHandler.sync(this);\n      switch (this._input.LA(1)) {\n        case SimpleBooleanParser.IDENTIFIER:\n          _localctx = new IdentifierNumExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 1);\n          {\n            this.state = 42;\n            this.match(SimpleBooleanParser.IDENTIFIER);\n          }\n          break;\n        case SimpleBooleanParser.DECIMAL:\n          _localctx = new DecimalExpressionContext(_localctx);\n          this.enterOuterAlt(_localctx, 2);\n          {\n            this.state = 43;\n            this.match(SimpleBooleanParser.DECIMAL);\n          }\n          break;\n        default:\n          throw new NoViableAltException(this);\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n  // @RuleVersion(0)\n  public comparator(): ComparatorContext {\n    let _localctx: ComparatorContext = new ComparatorContext(\n      this._ctx,\n      this.state\n    );\n    this.enterRule(_localctx, 10, SimpleBooleanParser.RULE_comparator);\n    let _la: number;\n    try {\n      this.enterOuterAlt(_localctx, 1);\n      {\n        this.state = 46;\n        _la = this._input.LA(1);\n        if (\n          !(\n            (_la & ~0x1f) === 0 &&\n            ((1 << _la) &\n              ((1 << SimpleBooleanParser.GT) |\n                (1 << SimpleBooleanParser.GE) |\n                (1 << SimpleBooleanParser.LT) |\n                (1 << SimpleBooleanParser.DIF) |\n                (1 << SimpleBooleanParser.LE) |\n                (1 << SimpleBooleanParser.EQ))) !==\n              0\n          )\n        ) {\n          this._errHandler.recoverInline(this);\n        } else {\n          if (this._input.LA(1) === Token.EOF) {\n            this.matchedEOF = true;\n          }\n\n          this._errHandler.reportMatch(this);\n          this.consume();\n        }\n      }\n    } catch (re) {\n      if (re instanceof RecognitionException) {\n        _localctx.exception = re;\n        this._errHandler.reportError(this, re);\n        this._errHandler.recover(this, re);\n      } else {\n        throw re;\n      }\n    } finally {\n      this.exitRule();\n    }\n    return _localctx;\n  }\n\n  public static readonly _serializedATN: string =\n    \"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03\\x123\\x04\\x02\" +\n    \"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\n    \"\\t\\x07\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\" +\n    \"\\x05\\x03\\x17\\n\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x05\\x04\\x1E\" +\n    \"\\n\\x04\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\" +\n    \"\\x03\\x05\\x03\\x05\\x03\\x05\\x05\\x05+\\n\\x05\\x03\\x06\\x03\\x06\\x05\\x06/\\n\\x06\" +\n    \"\\x03\\x07\\x03\\x07\\x03\\x07\\x02\\x02\\x02\\b\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\" +\n    \"\\x02\\f\\x02\\x02\\x03\\x03\\x02\\b\\r\\x022\\x02\\x0E\\x03\\x02\\x02\\x02\\x04\\x16\\x03\" +\n    \"\\x02\\x02\\x02\\x06\\x1D\\x03\\x02\\x02\\x02\\b*\\x03\\x02\\x02\\x02\\n.\\x03\\x02\\x02\" +\n    \"\\x02\\f0\\x03\\x02\\x02\\x02\\x0E\\x0F\\x05\\x04\\x03\\x02\\x0F\\x10\\x07\\x02\\x02\\x03\" +\n    \"\\x10\\x03\\x03\\x02\\x02\\x02\\x11\\x12\\x05\\x06\\x04\\x02\\x12\\x13\\x07\\x04\\x02\\x02\" +\n    \"\\x13\\x14\\x05\\x04\\x03\\x02\\x14\\x17\\x03\\x02\\x02\\x02\\x15\\x17\\x05\\x06\\x04\\x02\" +\n    \"\\x16\\x11\\x03\\x02\\x02\\x02\\x16\\x15\\x03\\x02\\x02\\x02\\x17\\x05\\x03\\x02\\x02\\x02\" +\n    \"\\x18\\x19\\x05\\b\\x05\\x02\\x19\\x1A\\x07\\x03\\x02\\x02\\x1A\\x1B\\x05\\x06\\x04\\x02\" +\n    \"\\x1B\\x1E\\x03\\x02\\x02\\x02\\x1C\\x1E\\x05\\b\\x05\\x02\\x1D\\x18\\x03\\x02\\x02\\x02\" +\n    \"\\x1D\\x1C\\x03\\x02\\x02\\x02\\x1E\\x07\\x03\\x02\\x02\\x02\\x1F \\x07\\x05\\x02\\x02\" +\n    ' +\\x05\\x04\\x03\\x02!\"\\x05\\n\\x06\\x02\"#\\x05\\f\\x07\\x02#$\\x05\\n\\x06\\x02$' +\n    \"+\\x03\\x02\\x02\\x02%+\\x07\\x11\\x02\\x02&'\\x07\\x0E\\x02\\x02'(\\x05\\x04\\x03\" +\n    \"\\x02()\\x07\\x0F\\x02\\x02)+\\x03\\x02\\x02\\x02*\\x1F\\x03\\x02\\x02\\x02*!\\x03\\x02\" +\n    \"\\x02\\x02*%\\x03\\x02\\x02\\x02*&\\x03\\x02\\x02\\x02+\\t\\x03\\x02\\x02\\x02,/\\x07\" +\n    \"\\x11\\x02\\x02-/\\x07\\x10\\x02\\x02.,\\x03\\x02\\x02\\x02.-\\x03\\x02\\x02\\x02/\\v\" +\n    \"\\x03\\x02\\x02\\x0201\\t\\x02\\x02\\x021\\r\\x03\\x02\\x02\\x02\\x06\\x16\\x1D*.\";\n  public static __ATN: ATN;\n  public static get _ATN(): ATN {\n    if (!SimpleBooleanParser.__ATN) {\n      SimpleBooleanParser.__ATN = new ATNDeserializer().deserialize(\n        Utils.toCharArray(SimpleBooleanParser._serializedATN)\n      );\n    }\n\n    return SimpleBooleanParser.__ATN;\n  }\n}\n\nexport class ParseContext extends ParserRuleContext {\n  public expression(): ExpressionContext {\n    return this.getRuleContext(0, ExpressionContext);\n  }\n  public EOF(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.EOF, 0);\n  }\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_parse;\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterParse) {\n      listener.enterParse(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitParse) {\n      listener.exitParse(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitParse) {\n      return visitor.visitParse(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n\nexport class ExpressionContext extends ParserRuleContext {\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_expression;\n  }\n  public copyFrom(ctx: ExpressionContext): void {\n    super.copyFrom(ctx);\n  }\n}\nexport class OrExpressionContext extends ExpressionContext {\n  public _left: ExpressionAndContext;\n  public _right: ExpressionContext;\n  public OR(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.OR, 0);\n  }\n  public expressionAnd(): ExpressionAndContext {\n    return this.getRuleContext(0, ExpressionAndContext);\n  }\n  public expression(): ExpressionContext {\n    return this.getRuleContext(0, ExpressionContext);\n  }\n  constructor(ctx: ExpressionContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterOrExpression) {\n      listener.enterOrExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitOrExpression) {\n      listener.exitOrExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitOrExpression) {\n      return visitor.visitOrExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class AndParentExpressionContext extends ExpressionContext {\n  public expressionAnd(): ExpressionAndContext {\n    return this.getRuleContext(0, ExpressionAndContext);\n  }\n  constructor(ctx: ExpressionContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterAndParentExpression) {\n      listener.enterAndParentExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitAndParentExpression) {\n      listener.exitAndParentExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitAndParentExpression) {\n      return visitor.visitAndParentExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n\nexport class ExpressionAndContext extends ParserRuleContext {\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_expressionAnd;\n  }\n  public copyFrom(ctx: ExpressionAndContext): void {\n    super.copyFrom(ctx);\n  }\n}\nexport class AndExpressionContext extends ExpressionAndContext {\n  public _left: ExpressionSimpleContext;\n  public _right: ExpressionAndContext;\n  public AND(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.AND, 0);\n  }\n  public expressionSimple(): ExpressionSimpleContext {\n    return this.getRuleContext(0, ExpressionSimpleContext);\n  }\n  public expressionAnd(): ExpressionAndContext {\n    return this.getRuleContext(0, ExpressionAndContext);\n  }\n  constructor(ctx: ExpressionAndContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterAndExpression) {\n      listener.enterAndExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitAndExpression) {\n      listener.exitAndExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitAndExpression) {\n      return visitor.visitAndExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class SimpleExpressionContext extends ExpressionAndContext {\n  public expressionSimple(): ExpressionSimpleContext {\n    return this.getRuleContext(0, ExpressionSimpleContext);\n  }\n  constructor(ctx: ExpressionAndContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterSimpleExpression) {\n      listener.enterSimpleExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitSimpleExpression) {\n      listener.exitSimpleExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitSimpleExpression) {\n      return visitor.visitSimpleExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n\nexport class ExpressionSimpleContext extends ParserRuleContext {\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_expressionSimple;\n  }\n  public copyFrom(ctx: ExpressionSimpleContext): void {\n    super.copyFrom(ctx);\n  }\n}\nexport class NotExpressionContext extends ExpressionSimpleContext {\n  public NOT(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.NOT, 0);\n  }\n  public expression(): ExpressionContext {\n    return this.getRuleContext(0, ExpressionContext);\n  }\n  constructor(ctx: ExpressionSimpleContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterNotExpression) {\n      listener.enterNotExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitNotExpression) {\n      listener.exitNotExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitNotExpression) {\n      return visitor.visitNotExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class ComparatorExpressionContext extends ExpressionSimpleContext {\n  public _left: NumExpressionContext;\n  public _op: ComparatorContext;\n  public _right: NumExpressionContext;\n  public numExpression(): NumExpressionContext[];\n  public numExpression(i: number): NumExpressionContext;\n  public numExpression(\n    i?: number\n  ): NumExpressionContext | NumExpressionContext[] {\n    if (i === undefined) {\n      return this.getRuleContexts(NumExpressionContext);\n    } else {\n      return this.getRuleContext(i, NumExpressionContext);\n    }\n  }\n  public comparator(): ComparatorContext {\n    return this.getRuleContext(0, ComparatorContext);\n  }\n  constructor(ctx: ExpressionSimpleContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterComparatorExpression) {\n      listener.enterComparatorExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitComparatorExpression) {\n      listener.exitComparatorExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitComparatorExpression) {\n      return visitor.visitComparatorExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class IdentifierExpressionContext extends ExpressionSimpleContext {\n  public IDENTIFIER(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.IDENTIFIER, 0);\n  }\n  constructor(ctx: ExpressionSimpleContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterIdentifierExpression) {\n      listener.enterIdentifierExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitIdentifierExpression) {\n      listener.exitIdentifierExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitIdentifierExpression) {\n      return visitor.visitIdentifierExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class ParenExpressionContext extends ExpressionSimpleContext {\n  public LPAREN(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.LPAREN, 0);\n  }\n  public expression(): ExpressionContext {\n    return this.getRuleContext(0, ExpressionContext);\n  }\n  public RPAREN(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.RPAREN, 0);\n  }\n  constructor(ctx: ExpressionSimpleContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterParenExpression) {\n      listener.enterParenExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitParenExpression) {\n      listener.exitParenExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitParenExpression) {\n      return visitor.visitParenExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n\nexport class NumExpressionContext extends ParserRuleContext {\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_numExpression;\n  }\n  public copyFrom(ctx: NumExpressionContext): void {\n    super.copyFrom(ctx);\n  }\n}\nexport class IdentifierNumExpressionContext extends NumExpressionContext {\n  public IDENTIFIER(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.IDENTIFIER, 0);\n  }\n  constructor(ctx: NumExpressionContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterIdentifierNumExpression) {\n      listener.enterIdentifierNumExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitIdentifierNumExpression) {\n      listener.exitIdentifierNumExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitIdentifierNumExpression) {\n      return visitor.visitIdentifierNumExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\nexport class DecimalExpressionContext extends NumExpressionContext {\n  public DECIMAL(): TerminalNode {\n    return this.getToken(SimpleBooleanParser.DECIMAL, 0);\n  }\n  constructor(ctx: NumExpressionContext) {\n    super(ctx.parent, ctx.invokingState);\n    this.copyFrom(ctx);\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterDecimalExpression) {\n      listener.enterDecimalExpression(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitDecimalExpression) {\n      listener.exitDecimalExpression(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitDecimalExpression) {\n      return visitor.visitDecimalExpression(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n\nexport class ComparatorContext extends ParserRuleContext {\n  public DIF(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.DIF, 0);\n  }\n  public GT(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.GT, 0);\n  }\n  public GE(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.GE, 0);\n  }\n  public LT(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.LT, 0);\n  }\n  public LE(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.LE, 0);\n  }\n  public EQ(): TerminalNode | undefined {\n    return this.tryGetToken(SimpleBooleanParser.EQ, 0);\n  }\n  constructor(parent: ParserRuleContext | undefined, invokingState: number) {\n    super(parent, invokingState);\n  }\n  // @Override\n  public get ruleIndex(): number {\n    return SimpleBooleanParser.RULE_comparator;\n  }\n  // @Override\n  public enterRule(listener: SimpleBooleanListener): void {\n    if (listener.enterComparator) {\n      listener.enterComparator(this);\n    }\n  }\n  // @Override\n  public exitRule(listener: SimpleBooleanListener): void {\n    if (listener.exitComparator) {\n      listener.exitComparator(this);\n    }\n  }\n  // @Override\n  public accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n    if (visitor.visitComparator) {\n      return visitor.visitComparator(this);\n    } else {\n      return visitor.visitChildren(this);\n    }\n  }\n}\n","import { JsonType } from \"../canvas/store\";\nimport { action, computed, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { GemmaGrafcet } from \"./gemma\";\n\nenum SignalTypeBase {\n  bool = \"bool\",\n  int = \"int\",\n  uint = \"uint\",\n  real = \"real\",\n}\n\nexport enum SignalType {\n  bool = \"bool\",\n\n  sint = \"sint\",\n  int = \"int\",\n  lint = \"lint\",\n  dint = \"dint\",\n\n  usint = \"usint\",\n  uint = \"uint\",\n  ulint = \"ulint\",\n  udint = \"udint\",\n\n  real = \"real\",\n  lreal = \"lreal\",\n}\n\nenum SignalTypeSize {\n  s = \"s\",\n  i = \"i\",\n  l = \"l\",\n  d = \"d\",\n}\n\nconst signalTypeToPrimitives = (\n  type?: SignalType\n): { base: SignalTypeBase; size: SignalTypeSize } | undefined => {\n  if (type === undefined) {\n    return undefined;\n  }\n  switch (type) {\n    case SignalType.bool:\n      return { base: SignalTypeBase.bool, size: SignalTypeSize.i };\n    case SignalType.real:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.i };\n    case SignalType.lreal:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.l };\n  }\n  let base: SignalTypeBase;\n  let index: number;\n  if (type.startsWith(\"u\")) {\n    base = SignalTypeBase.uint;\n    index = 1;\n  } else {\n    base = SignalTypeBase.int;\n    index = 0;\n  }\n\n  const size = type.charAt(index) as SignalTypeSize;\n\n  if (!Object.keys(SignalTypeSize).includes(size)) {\n    return undefined;\n  }\n\n  return { base, size };\n};\n\nconst signalSizeMap: { [key in SignalTypeBase]: SignalTypeSize[] } = {\n  [SignalType.bool]: [SignalTypeSize.i],\n  [SignalType.int]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.uint]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.real]: [SignalTypeSize.i, SignalTypeSize.l],\n};\n\nexport const SignalRow = observer(\n  ({\n    signal: s,\n    showDelete,\n    removeSignal,\n  }: {\n    signal: Signal;\n    showDelete: boolean;\n    removeSignal: (s: Signal) => void;\n  }) => {\n    return (\n      <TableRow>\n        <TableCell>\n          <Tooltip\n            title={s.errors[\"Name\"] !== undefined ? s.errors[\"Name\"] : \"\"}\n          >\n            <TextField\n              type=\"text\"\n              value={s.name}\n              onChange={(e) => (s.name = e.target.value.replace(/\\s/g, \"\"))}\n              style={{ width: \"145px\" }}\n              error={s.errors[\"Name\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={Object.keys(SignalTypeBase)}\n            setValue={(v) => s.setTypeBase(v as any)}\n            value={s.typeBase}\n          />\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={signalSizeMap[s.typeBase]}\n            setValue={(v) => (s.typeSize = v as any)}\n            value={s.typeSize}\n            maxButton={0}\n          />\n        </TableCell>\n        <TableCell>\n          <Tooltip\n            title={\n              s.errors[\"Default Value\"] !== undefined\n                ? s.errors[\"Default Value\"]\n                : \"\"\n            }\n            open={true}\n          >\n            <TextField\n              type={s.typeBase === SignalTypeBase.bool ? \"text\" : \"number\"}\n              value={s.defaultValue}\n              onChange={(e) => {\n                s.defaultValue = e.target.value.replace(/\\s/g, \"\");\n              }}\n              style={{ width: \"70px\" }}\n              error={s.errors[\"Default Value\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        {showDelete && (\n          <TableCell align=\"center\">\n            <IconButton onClick={(_) => removeSignal(s)} size=\"small\">\n              <FontAwesomeIcon icon={\"trash-alt\"} color={\"#000\"} />\n            </IconButton>\n          </TableCell>\n        )}\n      </TableRow>\n    );\n  }\n);\n\nconst regexSignalDefaultValid = {\n  [SignalTypeBase.bool]: {\n    regex: /^(TRUE|FALSE)$/,\n    message: 'should be \"TRUE\" or \"FALSE\"',\n  },\n  [SignalTypeBase.int]: {\n    regex: /^(-?[1-9][0-9]*|0)$/,\n    message: \"should be an integer\",\n  },\n  [SignalTypeBase.uint]: {\n    regex: /^([1-9][0-9]*|0)$/,\n    message: \"should be a positive integer\",\n  },\n  [SignalTypeBase.real]: {\n    regex: /^-?[0-9]*\\.?[0-9]+$/,\n    message: \"should be a number\",\n  },\n};\n\nexport class Signal {\n  @observable\n  didBlur: boolean = false;\n\n  @observable\n  name: string;\n  @observable\n  defaultValue: string;\n  @observable\n  typeSize: SignalTypeSize;\n  @observable\n  typeBase: SignalTypeBase;\n  @computed\n  get type(): SignalType {\n    if (this.typeBase === SignalTypeBase.bool) {\n      return SignalType.bool;\n    }\n    const sizeStr = this.typeSize === SignalTypeSize.i ? \"\" : this.typeSize!;\n    if (this.typeBase.startsWith(\"u\")) {\n      return (\"u\" + sizeStr + this.typeBase.substring(1)) as SignalType;\n    } else {\n      return (sizeStr + this.typeBase) as SignalType;\n    }\n  }\n\n  @action.bound\n  setTypeBase = (base: SignalTypeBase) => {\n    this.typeBase = base;\n    if (!signalSizeMap[base].includes(this.typeSize)) {\n      this.typeSize = signalSizeMap[base][0];\n    }\n  };\n\n  @computed\n  get errors() {\n    const name =\n      this.automationSystem.signals.findIndex(\n        (s2) => s2.name === this.name && this !== s2\n      ) !== -1\n        ? \"Duplicate name\"\n        : undefined;\n\n    const validator = regexSignalDefaultValid[this.typeBase];\n    const hasError =\n      this.defaultValue.length !== 0 &&\n      !validator.regex.test(this.defaultValue);\n    const defaultValueError = hasError ? validator.message : undefined;\n\n    return { Name: name, \"Default Value\": defaultValueError };\n  }\n\n  description?: string;\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      name: this.name,\n      type: this.type,\n      defaultValue: this.defaultValue,\n    };\n  }\n\n  static fromJson(\n    automationSystem: GemmaGrafcet,\n    json: JsonType\n  ): Signal | undefined {\n    if (\n      typeof json[\"name\"] === \"string\" &&\n      Object.keys(SignalType).includes(json[\"type\"] as any)\n    ) {\n      return new Signal(automationSystem, json);\n    } else {\n      return undefined;\n    }\n  }\n\n  constructor(\n    private automationSystem: GemmaGrafcet,\n    d?: {\n      name?: string;\n      description?: string;\n      type?: SignalType;\n      defaultValue?: string;\n    }\n  ) {\n    this.name = d?.name ?? \"\";\n    this.description = d?.description;\n    const typePrim = signalTypeToPrimitives(d?.type);\n    this.typeBase = typePrim?.base ?? SignalTypeBase.bool;\n    this.typeSize = typePrim?.size ?? SignalTypeSize.i;\n    this.defaultValue = d?.defaultValue ?? \"\";\n  }\n}\n","import { CharStreams, CommonTokenStream } from \"antlr4ts\";\nimport { SimpleBooleanLexer } from \"../grammar/SimpleBooleanLexer\";\nimport {\n  ExpressionContext,\n  IdentifierExpressionContext,\n  IdentifierNumExpressionContext,\n  SimpleBooleanParser,\n} from \"../grammar/SimpleBooleanParser\";\nimport { SimpleBooleanVisitor } from \"../grammar/SimpleBooleanVisitor\";\nimport { AbstractParseTreeVisitor } from \"antlr4ts/tree/AbstractParseTreeVisitor\";\nimport { ErrorNode } from \"antlr4ts/tree/ErrorNode\";\nimport { ParseTree } from \"antlr4ts/tree/ParseTree\";\n\n// Extend the AbstractParseTreeVisitor to get default visitor behaviour\nclass ErrorVisitor\n  extends AbstractParseTreeVisitor<string[]>\n  implements SimpleBooleanVisitor<string[]> {\n  isInvalid: boolean = false;\n  boolSignals: Array<IdentifierExpressionContext> = [];\n\n  constructor(public signals: { numSignals: string[]; boolSignals: string[] }) {\n    super();\n  }\n\n  defaultResult() {\n    return [];\n  }\n\n  aggregateResult(aggregate: string[], nextResult: string[]) {\n    return aggregate.concat(nextResult);\n  }\n\n  visitErrorNode(node: ErrorNode): string[] {\n    if (this.isInvalid) {\n      return [];\n    }\n    this.isInvalid = true;\n    return [\"Invalid boolean expression\"];\n  }\n\n  visitIdentifierExpression(n: IdentifierExpressionContext): string[] {\n    const valid = this.signals.boolSignals.includes(n.text);\n    this.boolSignals.push(n);\n    return valid ? [] : [`'${n.text}' is not a defined boolean signal`];\n  }\n\n  visitIdentifierNumExpression(n: IdentifierNumExpressionContext): string[] {\n    const valid = this.signals.numSignals.includes(n.text);\n    return valid ? [] : [`'${n.text}' is not a defined numeric signal`];\n  }\n\n  visitExpression(n: ExpressionContext): string[] {\n    if (n.exception !== undefined && !this.isInvalid) {\n      this.isInvalid = true;\n      return [\"Invalid boolean expression\"];\n    }\n    return [];\n  }\n}\n\nexport type ParsedOutput = {\n  tree: ExpressionContext;\n  errors: string[];\n  boolSignals: Array<IdentifierExpressionContext>;\n};\n\nexport const parseBoolExpression = (\n  text: string,\n  signals: { numSignals: string[]; boolSignals: string[] }\n): ParsedOutput => {\n  // Create the lexer and parser\n  let inputStream = CharStreams.fromString(text);\n  let lexer = new SimpleBooleanLexer(inputStream);\n  let tokenStream = new CommonTokenStream(lexer);\n  let parser = new SimpleBooleanParser(tokenStream);\n\n  // Parse the input, where `compilationUnit` is whatever entry point you defined\n\n  let tree = parser.parse();\n\n  // Create the visitor\n  const countFunctionsVisitor = new ErrorVisitor(signals);\n  // Use the visitor entry point\n  const errors = countFunctionsVisitor.visit(tree);\n\n  if (tree.exception !== undefined) {\n    countFunctionsVisitor.isInvalid = true;\n    errors.push(\"Invalid boolean expression\");\n  }\n\n  let toProcess: ParseTree[] | undefined = [...tree.children];\n  if (toProcess !== undefined && !countFunctionsVisitor.isInvalid) {\n    while (toProcess.length !== 0) {\n      const curr: ParseTree | undefined = toProcess.pop()!;\n      if (curr instanceof ExpressionContext && curr.exception !== undefined) {\n        errors.push(\"Invalid boolean expression\");\n        break;\n      } else if (curr.childCount > 0) {\n        toProcess = toProcess.concat(\n          [...Array(curr.childCount).keys()].map((i) => curr.getChild(i))\n        );\n      }\n    }\n  }\n  return { tree, errors, boolSignals: countFunctionsVisitor.boolSignals };\n};\n","import { Checkbox } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {\n  action,\n  computed,\n  IKeyValueMap,\n  observable,\n  ObservableMap,\n} from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useRef } from \"react\";\nimport { JsonType } from \"../canvas/store\";\nimport { FieldSpec, StrFieldSpec } from \"../fields\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport { ConnModel } from \"../node/node-model\";\nimport { PropertiesTable } from \"../properties/properties-table\";\nimport { parseBoolExpression, ParsedOutput } from \"./antlr_parser\";\nimport { CustomToken, getCustomTokens, VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { SignalType } from \"./signal\";\nimport { Step, StepType } from \"./step\";\n\ntype GemmaConn = ConnModel<Step, GemmaGrafcet, Transition>;\n\nexport class Transition {\n  @observable\n  conditionExpression: string;\n  @observable\n  priority: number;\n  @observable\n  isNegated: boolean;\n  @observable\n  savedSignalsWithMemory: ObservableMap<\n    string,\n    { behaviour: \"NC\" | \"NO\"; withMemory: boolean }\n  >;\n\n  @computed\n  get priorityUi() {\n    return (\n      this.connection.from.data._transitions.findIndex((t) => t === this) + 1\n    );\n  }\n  @computed\n  get priorityChoices() {\n    return [...Array(this.connection.from.data._transitions.length)].map(\n      (_, i) => \"\" + (i + 1)\n    );\n  }\n\n  errors = observable.map<string, string>();\n\n  spec: { [key: string]: FieldSpec } = {\n    conditionExpression: new StrFieldSpec({ default: \"\" }),\n  };\n\n  constructor(\n    public connection: GemmaConn,\n    d?: {\n      conditionExpression?: string;\n      priority?: number;\n      isNegated?: boolean;\n      savedSignalsWithMemory?: IKeyValueMap<{\n        behaviour: \"NC\" | \"NO\";\n        withMemory: boolean;\n      }>;\n    }\n  ) {\n    this.conditionExpression = d?.conditionExpression ?? \"\";\n    this.priority = d?.priority ?? connection.from.outputs.length + 1;\n    this.isNegated = d?.isNegated ?? false;\n    this.savedSignalsWithMemory = new ObservableMap<\n      string,\n      { behaviour: \"NC\" | \"NO\"; withMemory: boolean }\n    >(d?.savedSignalsWithMemory);\n  }\n\n  @action.bound\n  setPriority = (v: string): void => {\n    const priority = parseInt(v);\n    if (this.connection.isHidden) {\n      return;\n    }\n\n    const transitions = this.connection.from.outputs;\n    const hiddenTransitions = transitions\n      .filter(\n        (t) => t.isHidden && t.data.priority <= this.priorityChoices.length\n      )\n      .sort((a, b) => a.data.priority - b.data.priority)\n      .map((t) => t.data);\n    console.log(hiddenTransitions);\n    if (hiddenTransitions.length > 0) {\n      let p = 1;\n      [...this.connection.from.data._transitions, ...hiddenTransitions].forEach(\n        (t, ind) => {\n          t.priority = p++;\n        }\n      );\n    }\n    if (this.priority > priority) {\n      transitions\n        .filter(\n          (t) => t.data.priority >= priority && t.data.priority < this.priority\n        )\n        .forEach((t) => t.data.priority++);\n    } else {\n      transitions\n        .filter(\n          (t) => t.data.priority <= priority && t.data.priority > this.priority\n        )\n        .forEach((t) => t.data.priority--);\n    }\n    this.priority = priority;\n  };\n\n  get from(): Step {\n    return this.connection.from.data;\n  }\n\n  get to(): Step {\n    return this.connection.to.data;\n  }\n\n  @computed\n  get connectionText(): { text: string; style?: React.CSSProperties }[] {\n    const cond = this.conditionExpression.substring(0, 20);\n    const hasNegation =\n      this.isNegated &&\n      (this.from.type === StepType.MACRO ||\n        this.from.type === StepType.ENCLOSING);\n    const showPriority =\n      hasNegation ||\n      (this.from.type !== StepType.CONTAINER &&\n        this.connection.from.data._transitions.length > 1);\n\n    return [\n      {\n        text: showPriority ? `${this.priorityUi}: ` : \"\",\n        style: { textDecoration: hasNegation ? \"overline\" : undefined },\n      },\n      { text: ` ${cond}${this.conditionExpression.length > 20 ? \"...\" : \"\"}` },\n    ];\n  }\n\n  @computed\n  get toJson(): JsonType {\n    const json: JsonType = {\n      conditionExpression: this.conditionExpression,\n      priority: this.priority,\n      isNegated: this.isNegated,\n    };\n    if (this.savedSignalsWithMemory.size > 0) {\n      const _jsonSignals: {\n        [key: string]: {\n          behaviour: \"NC\" | \"NO\";\n          withMemory: boolean;\n        };\n      } = {};\n      for (const [k, v] of this.savedSignalsWithMemory.entries()) {\n        _jsonSignals[k] = { ...v };\n      }\n      json[\"savedSignalsWithMemory\"] = _jsonSignals;\n    }\n    return json;\n  }\n\n  @computed\n  get expressionTokens(): [CustomToken, number][] {\n    return getCustomTokens(this.conditionExpression);\n  }\n\n  @computed\n  get parsedExpression(): ParsedOutput | undefined {\n    const gemma = this.connection.graph.globalData;\n    try {\n      const output = parseBoolExpression(this.conditionExpression, {\n        boolSignals: gemma.boolSignals.map((s) => s.name),\n        numSignals: gemma.numSignals.map((s) => s.name),\n      });\n      return output;\n    } catch (e) {}\n    return undefined;\n  }\n\n  @computed\n  get signalsInCondition(): Array<string> {\n    let _signals: string[];\n    if (this.parsedExpression !== undefined) {\n      _signals = this.parsedExpression.boolSignals.map((s) => s.text);\n    } else {\n      _signals = this.expressionTokens\n        .map(([token, _]) => token)\n        .filter((token) => token instanceof VarId)\n        .map((s) => s.toString());\n    }\n    return [\n      ..._signals\n        .filter((token) =>\n          this.from.automationSystem.signals.some(\n            (s) => s.type === SignalType.bool && s.name === token\n          )\n        )\n        .reduce((set, token) => {\n          set.add(token.toString());\n          return set;\n        }, new Set<string>())\n        .values(),\n    ];\n  }\n\n  // @computed\n  // get signalsInConditionWithDefault(): Array<[string, boolean]> | undefined {\n  //   return this.parsedExpression?.boolSignals.map((s) => {\n  //     if (s.parent === undefined) {\n  //     }\n  //     return [s.text, false];\n  //   });\n  // }\n\n  // evaluateSignal = (s: IdentifierExpressionContext): boolean => {\n  //   let result = false;\n  //   let topOfNot = false;\n  //   let topOfAnd = false;\n\n  //   let parent = s.parent;\n  //   while (parent !== undefined) {\n  //     if (parent instanceof AndParentExpressionContext) {\n  //       topOfAnd = !topOfAnd;\n  //     } else if (parent instanceof NotExpressionContext) {\n  //       topOfNot = !topOfNot;\n  //     } else if (parent instanceof OrExpressionContext) {\n  //     } else if (parent instanceof SimpleExpressionContext) {\n  //     } else if (parent instanceof AndExpressionContext) {\n  //     }\n  //     parent = parent.parent;\n  //   }\n  //   return result;\n  // };\n\n  @computed\n  get signalsWithMemory() {\n    return this.signalsInCondition\n      .filter((s) => this.savedSignalsWithMemory.get(s)?.withMemory ?? false)\n      .map((value) => ({\n        value,\n        behaviour: this.savedSignalsWithMemory.get(value)!.behaviour,\n      }));\n  }\n\n  ConnectionView = observer(() => {\n    return (\n      <>\n        <PropertiesTable key=\"table\">\n          <tr key=\"priority\">\n            <td>Priority</td>\n            <td>\n              <ChoiceField\n                keys={this.priorityChoices}\n                value={\"\" + this.priorityUi}\n                setValue={this.setPriority}\n              />\n            </td>\n          </tr>\n          <tr key=\"condition\">\n            <td>Condition</td>\n            <td>{<ConditionInput m={this} />}</td>\n          </tr>\n          {(this.from.type === StepType.MACRO ||\n            this.from.type === StepType.ENCLOSING) && (\n            <tr key=\"isNegated\">\n              <td>Negated</td>\n              <td>\n                {\n                  <Switch\n                    checked={this.isNegated}\n                    onChange={() => {\n                      this.isNegated = !this.isNegated;\n                    }}\n                    color=\"primary\"\n                  />\n                }\n              </td>\n            </tr>\n          )}\n        </PropertiesTable>\n        <div className=\"row\">\n          <div style={{ flex: 1 }}>\n            <h4 style={{ margin: \"0\" }}>Errors</h4>\n            {this.parsedExpression?.errors.length === 0 && \"No errors\"}\n            <ul\n              style={{\n                color: \"indianred\",\n                marginTop: \"0\",\n                paddingLeft: \"20px\",\n              }}\n              key=\"errors\"\n            >\n              {this.parsedExpression?.errors.map((err, index) => (\n                <li key={index}>{err}</li>\n              ))}\n            </ul>\n          </div>\n          {((this.from.type === StepType.MACRO && !this.isNegated) ||\n            (this.from.type === StepType.ENCLOSING && this.isNegated)) && (\n            <>\n              <div style={{ width: \"10px\" }} />\n              <div style={{ flex: 1 }}>\n                <h4 key=\"title\" style={{ margin: \"0\" }}>\n                  With Memory\n                </h4>\n                {this.signalsInCondition.length === 0 &&\n                  \"No signals in transition\"}\n                {this.signalsInCondition.map((token) => {\n                  return (\n                    <MemCheckbox\n                      key={token}\n                      token={token}\n                      map={this.savedSignalsWithMemory}\n                    />\n                  );\n                })}\n              </div>\n            </>\n          )}\n        </div>\n      </>\n    );\n  });\n}\n\nconst MemCheckbox = observer(\n  ({\n    map,\n    token,\n  }: {\n    map: ObservableMap<string, { behaviour: \"NC\" | \"NO\"; withMemory: boolean }>;\n    token: string;\n  }) => {\n    const _update = (value: {\n      behaviour: \"NC\" | \"NO\";\n      withMemory: boolean;\n    }) => {\n      if (!value.withMemory && value.behaviour === \"NO\") {\n        map.delete(token);\n      } else {\n        map.set(token, value);\n      }\n    };\n    const state = map.get(token);\n    const behaviour = state?.behaviour ?? \"NO\";\n    const withMemory = state?.withMemory ?? false;\n\n    return (\n      <div className=\"row\" style={{ alignItems: \"center\" }}>\n        <div>\n          <Checkbox\n            checked={withMemory}\n            size=\"small\"\n            color=\"primary\"\n            onChange={() => {\n              _update({ withMemory: !withMemory, behaviour });\n            }}\n          />\n        </div>\n        <div style={{ flex: 1 }}>{token}</div>\n        {withMemory && (\n          <div style={{ paddingLeft: 3, paddingRight: 3 }}>\n            <ChoiceField\n              value={behaviour}\n              keys={[\"NC\", \"NO\"]}\n              setValue={(v) => {\n                _update({ withMemory, behaviour: v });\n              }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nconst ConditionInput = observer(\n  ({\n    m,\n  }: {\n    m: {\n      conditionExpression: string;\n      expressionTokens: [CustomToken, number][];\n    };\n  }) => {\n    let prevIndex = 0;\n    let _spanStyleRef = useRef<HTMLSpanElement>(null);\n    const font = \"400 15px monospace\";\n\n    return (\n      <div style={{ width: \"206px\", position: \"relative\" }} className=\"center\">\n        <span\n          style={{\n            font,\n            position: \"absolute\",\n            top: 0,\n            padding: \"3px\",\n            textAlign: \"initial\",\n            whiteSpace: \"pre-line\",\n          }}\n          ref={_spanStyleRef}\n        >\n          {m.expressionTokens.map(([c, textIndex], index) => {\n            let color: string;\n            if (c instanceof VarId) {\n              color = \"black\";\n            } else if ([\"AND\", \"NOT\", \"OR\"].includes(c)) {\n              color = \"blue\";\n            } else {\n              color = \"brown\";\n            }\n            const whiteSpace = textIndex - prevIndex;\n            const text = \" \".repeat(whiteSpace) + c.toString();\n            prevIndex = textIndex + c.toString().length;\n            return (\n              <span key={index} style={{ color }}>\n                {text}\n              </span>\n            );\n          })}\n        </span>\n        <textarea\n          onScroll={(s) => {\n            _spanStyleRef.current!.scrollTo(0, s.currentTarget.scrollTop);\n          }}\n          className=\"multiline-input\"\n          style={{\n            font,\n            background: \"transparent\",\n            color: \"transparent\",\n            caretColor: \"black\",\n            position: \"relative\",\n          }}\n          spellCheck={false}\n          value={m.conditionExpression}\n          onChange={(e) => {\n            const value = e.currentTarget.value;\n            if (value.match(/^\\s$/) === null) {\n              m.conditionExpression = value.replace(/\\s[^\\S\\r\\n]/g, \" \");\n            }\n          }}\n        ></textarea>\n      </div>\n    );\n  }\n);\n","\nexport abstract class SourceItem {\n  constructor(public name: string) {}\n\n  when(f: {file: (f: SourceFile) => void, dir: (f: SourceDirectory) => void}) {\n    if (this instanceof SourceFile) {\n      f.file(this)\n    } else if (this instanceof SourceDirectory) {\n      f.dir(this)\n    }\n  }\n}\n\nexport class SourceFile extends SourceItem {\n  constructor(name: string, public content: string) {\n    super(name);\n  }\n}\n\nexport class SourceDirectory extends SourceItem {\n  constructor(name: string, public items: SourceItem[]) {\n    super(name);\n  }\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Draggable from \"react-draggable\";\n// import Draggable, { DraggableData, DraggableEvent } from \"react-draggable\";\nimport styled from \"styled-components\";\nimport { NodeModel } from \"./node-model\";\nimport { useStore } from \"../App\";\n\nexport type Shape = (number | undefined)[];\n\nconst StyledNode = styled.div`\n  z-index: 1;\n  cursor: pointer;\n  position: absolute;\n  box-shadow: 0 1px 4px 1px #eee;\n  background: #fff;\n  border-radius: 6;\n  border: 1.5px solid;\n`;\n\ntype NodeViewProps = { node: NodeModel<any, any, any> };\nexport const NodeView: React.FC<NodeViewProps> = observer((params) => {\n  const { node, children } = params;\n  const rootStore = useStore();\n  // const onDrag = React.useCallback(\n  //   (_: DraggableEvent, data: DraggableData) => {\n  //     node.move(data.deltaX, data.deltaY);\n  //   },\n  //   [node]\n  // );\n  const selectingInput = rootStore.selectingInputFor !== undefined;\n  const isValidInput =\n    selectingInput && rootStore.selectingInputFor!.data.isValidInput(node);\n  const isSelected = rootStore.selectedNode === node;\n\n  const onClick = React.useCallback(\n    (_: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      console.log(node);\n      if (selectingInput) {\n        if (isValidInput) {\n          rootStore.assignInput(node);\n        }\n      } else {\n        rootStore.selectNode(node);\n      }\n    },\n    [rootStore, node, selectingInput, isValidInput]\n  );\n\n  if (node.isHidden && !rootStore.showHidden) {\n    return <></>;\n  }\n  // const [_, setDivRef] = React.useState<HTMLDivElement | null>(null);\n  const { x, y } = node;\n\n  let style: React.CSSProperties = {};\n  if (isSelected) {\n    style[\"boxShadow\"] = \"rgb(110 110 110) 1px 1.5px 3px 1px\";\n  }\n  if (selectingInput) {\n    style[\"cursor\"] = isValidInput ? \"pointer\" : \"not-allowed\";\n  }\n  if (node.isHidden) {\n    style[\"opacity\"] = 0.1;\n  }\n\n  return (\n    <Draggable\n      // onDrag={onDrag}\n      disabled={true}\n      position={{\n        // TODO: improve x, y with support for nested children\n        x: x - (node.data.parent?.x ?? 0),\n        y: y - (node.data.parent?.y ?? 0),\n      }}\n      bounds=\"parent\"\n    >\n      <StyledNode\n        ref={(e) => {\n          if (e === null) return;\n          node.setElement(e);\n        }}\n        onClick={onClick}\n        style={style}\n      >\n        <node.data.View children={children} />\n      </StyledNode>\n    </Draggable>\n  );\n});\n","import { Signal } from \"./signal\";\nimport { macroStepBehaviour } from \"./macro-step\";\nimport { EnclosingStep, MacroStep, StepType } from \"./step\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { gemmaBehaviour, memoryTransitionSuffix } from \"./gemma-templates\";\n\nconst variableDefinition = (signal: Signal): string => {\n  return `\\\n<variable name=\"${signal.name}\">\n  <type>\n    <${signal.type.toUpperCase()} />\n  </type>\n  ${\n    signal.defaultValue.length > 0\n      ? `<initialValue>\n    <simpleValue value=\"${signal.defaultValue}\" />\n  </initialValue>\n`\n      : \"\"\n  }\\\n</variable>`;\n};\n\nconst objectIdData = (objectId: string): string => {\n  return `\\\n<data name=\"http://www.3s-software.com/plcopenxml/objectid\" handleUnknown=\"discard\">\n  <ObjectId>${objectId}</ObjectId>\n</data> \n`;\n};\n\nconst functionBlock = (step: MacroStep | EnclosingStep): string => {\n  return `\\\n<data name=\"http://www.3s-software.com/plcopenxml/pou\" handleUnknown=\"implementation\">\n  <pou name=\"${step.name}_FB\" pouType=\"functionBlock\">\n    <interface>\n      <inputVars>\n        <variable name=\"Initialization\">\n          <type>\n            <BOOL />\n          </type>\n        </variable>\n      </inputVars>\n      <outputVars>\n        <variable name=\"Complete\">\n          <type>\n            <BOOL />\n          </type>\n        </variable>\n      </outputVars>\n    </interface>\n    <body>\n      <ST>\n        <xhtml xmlns=\"http://www.w3.org/1999/xhtml\">\n      ${macroStepBehaviour(step)}\n        </xhtml>\n      </ST>\n    </body>\n    <addData>\n      ${objectIdData(step.key)}\n    </addData>\n  </pou>\n</data>\n`;\n};\n\nconst gemmaImplementation = (gemma: GemmaGrafcet): string => {\n  return `\\\n<data name=\"http://www.3s-software.com/plcopenxml/pou\" handleUnknown=\"implementation\">\n  <pou name=\"GEMMA\" pouType=\"functionBlock\">\n    <interface>\n      <localVars>\n        <variable name=\"State\">\n          <type>\n            <UINT />\n          </type>\n          <initialValue>\n            <simpleValue value=\"${gemma.initialStep?.id}\" />\n          </initialValue>\n        </variable>\n        <variable name=\"Entry\">\n          <type>\n            <BOOL />\n          </type>\n          <initialValue>\n            <simpleValue value=\"TRUE\" />\n          </initialValue>\n        </variable>\n        ${gemma.steps\n          .filter(\n            (s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO\n          )\n          .map(\n            (s) => `\\\n          <variable name=\"${s.name}\">\n          <type>\n            <derived name=\"${s.name}_FB\" />\n          </type>\n          </variable>`\n          )\n          .join(\"\\n\")}\n        ${gemma.steps\n          .filter(\n            (s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO\n          )\n          .flatMap((s) => s.transitions)\n          .flatMap((t) =>\n            t.signalsWithMemory.map((sm) => {\n              const assign = sm.behaviour === \"NO\" ? \"FALSE\" : \"TRUE\";\n              return `\\\n              <variable name=\"${sm.value}${memoryTransitionSuffix(t)}\">\n              <type>\n                <BOOL />\n              </type>\n              <initialValue>\n                <simpleValue value=\"${assign}\" />\n              </initialValue>\n              </variable>`;\n            })\n          )\n          .join(\"    \\n\")}\n      </localVars>\n    </interface>\n    <body>\n      <ST>\n        <xhtml xmlns=\"http://www.w3.org/1999/xhtml\">\n      ${gemmaBehaviour(gemma)}\n        </xhtml>\n      </ST>\n    </body>\n    <addData>\n      ${objectIdData(gemma.key)}\n    </addData>\n  </pou>\n</data>\n`;\n};\n\nexport const projectTemplate = (gemma: GemmaGrafcet): string => {\n  return `\\\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<project xmlns=\"http://www.plcopen.org/xml/tc6_0200\">\n  ${projectHeader()}\n  <instances>\n    <configurations>\n      <configuration name=\"Device\">\n        <resource name=\"Application\">\n          ${tasks()}\n          <globalVars name=\"GVL\">\n            ${gemma.signals.map(variableDefinition).join(\"      \\n\")}\n            <addData>\n              <data name=\"http://www.3s-software.com/plcopenxml/attributes\" handleUnknown=\"implementation\">\n                <Attributes>\n                  <Attribute Name=\"qualified_only\" Value=\"\" />\n                </Attributes>\n              </data>\n              ${objectIdData(\"ea459247-8ebb-40c6-ae2a-b2c7106e0e22\")}\n            </addData>\n          </globalVars>\n          <addData>\n            ${gemmaImplementation(gemma)}\n            ${gemma.steps\n              .filter(\n                (s) =>\n                  s.type === StepType.ENCLOSING || s.type === StepType.MACRO\n              )\n              .map((s) => functionBlock(s as MacroStep | EnclosingStep))\n              .join(\"\\n\")}\n            ${libraries()}\n            ${objectIdData(\"f1bdda63-82df-4380-babf-520f8e0395d3\")}\n          </addData>\n        </resource>\n        <addData>\n          ${device(gemma.codesysVersion)}\n          <data name=\"configurations\" handleUnknown=\"discard\">\n            <configurations />\n          </data>\n          ${objectIdData(\"a8da5055-ba3c-41dd-853b-ad72125a9af2\")}\n        </addData>\n      </configuration>\n    </configurations>\n  </instances>\n  <addData>\n    ${projectStructure(gemma)}\n  </addData>\n</project>\n`;\n};\n\nconst projectStructure = (gemma: GemmaGrafcet): string => {\n  return `\\\n<data name=\"http://www.3s-software.com/plcopenxml/projectstructure\" handleUnknown=\"discard\">\n  <ProjectStructure>\n    <Object Name=\"Device\" ObjectId=\"a8da5055-ba3c-41dd-853b-ad72125a9af2\">\n      <Object Name=\"Application\" ObjectId=\"f1bdda63-82df-4380-babf-520f8e0395d3\">\n        <Object Name=\"Administrador de bibliotecas\" ObjectId=\"a13a8ff1-e760-4284-9d45-5ca949e70c2f\" />\n        <Object Name=\"MainTask\" ObjectId=\"8d75883b-687d-4295-b9bf-1b088a8ac6b3\" />\n        <Object Name=\"GVL\" ObjectId=\"ea459247-8ebb-40c6-ae2a-b2c7106e0e22\" />\n        <Object Name=\"GEMMA\" ObjectId=\"${gemma.key}\" />\n        ${gemma.steps\n          .filter(\n            (s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO\n          )\n          .map((s) => `<Object Name=\"${s.name}\" ObjectId=\"${s.key}\" />`)\n          .join(\"\\n\")}\n      </Object>\n    </Object>\n  </ProjectStructure>\n</data>\n`;\n};\n\nconst tasks = (): string => {\n  return `\\\n<task name=\"MainTask\" interval=\"PT0.02S\" priority=\"1\">\n  <pouInstance name=\"GEMMA\" typeName=\"\">\n    <documentation>\n      <xhtml xmlns=\"http://www.w3.org/1999/xhtml\" />\n    </documentation>\n  </pouInstance>\n  <addData>\n    <data name=\"http://www.3s-software.com/plcopenxml/tasksettings\" handleUnknown=\"implementation\">\n      <TaskSettings KindOfTask=\"Cyclic\" Interval=\"t#20ms\" IntervalUnit=\"ms\" WithinSPSTimeSlicing=\"true\">\n        <Watchdog Enabled=\"false\" TimeUnit=\"ms\" Sensitivity=\"1\" />\n      </TaskSettings>\n    </data>\n    <data name=\"http://www.3s-software.com/plcopenxml/objectid\" handleUnknown=\"discard\">\n      <ObjectId>8d75883b-687d-4295-b9bf-1b088a8ac6b3</ObjectId>\n    </data>\n  </addData>\n</task>\n`;\n};\n\nconst projectHeader = (): string => {\n  const now = new Date();\n  return `\\\n<fileHeader companyName=\"\" productName=\"CODESYS\" productVersion=\"CODESYS V3.5 SP11 Patch 3\" creationDateTime=\"${now.toISOString()}\" />\n<contentHeader name=\"ControlLogic.project\" modificationDateTime=\"${now.toISOString()}\">\n  <coordinateInfo>\n    <fbd>\n      <scaling x=\"1\" y=\"1\" />\n    </fbd>\n    <ld>\n      <scaling x=\"1\" y=\"1\" />\n    </ld>\n    <sfc>\n      <scaling x=\"1\" y=\"1\" />\n    </sfc>\n  </coordinateInfo>\n  <addData>\n    <data name=\"http://www.3s-software.com/plcopenxml/projectinformation\" handleUnknown=\"implementation\">\n      <ProjectInformation />\n    </data>\n  </addData>\n</contentHeader>\n<types>\n  <dataTypes />\n  <pous />\n</types>\n`;\n};\n\nconst libraries = (): string => {\n  return `\\\n<data name=\"http://www.3s-software.com/plcopenxml/libraries\" handleUnknown=\"implementation\">\n  <Libraries>\n    <Library Name=\"#IoStandard\" Namespace=\"IoStandard\" HideWhenReferencedAsDependency=\"false\" PublishSymbolsInContainer=\"false\" SystemLibrary=\"true\" LinkAllContent=\"true\" DefaultResolution=\"IoStandard, 3.5.10.0 (System)\" />\n    <Library Name=\"#3SLicense\" Namespace=\"_3S_LICENSE\" HideWhenReferencedAsDependency=\"false\" PublishSymbolsInContainer=\"false\" SystemLibrary=\"true\" LinkAllContent=\"false\" DefaultResolution=\"3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)\" ResolverGuid=\"97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b\" />\n    <Library Name=\"#Standard\" Namespace=\"Standard\" HideWhenReferencedAsDependency=\"false\" PublishSymbolsInContainer=\"false\" SystemLibrary=\"false\" LinkAllContent=\"false\" DefaultResolution=\"Standard, * (System)\" />\n    <Library Name=\"#BreakpointLogging\" Namespace=\"BPLog\" HideWhenReferencedAsDependency=\"false\" PublishSymbolsInContainer=\"false\" SystemLibrary=\"true\" LinkAllContent=\"false\" DefaultResolution=\"Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)\" />\n    <Library Name=\"#IecVarAccess\" Namespace=\"IecVarAccessLibrary\" HideWhenReferencedAsDependency=\"false\" PublishSymbolsInContainer=\"false\" SystemLibrary=\"true\" LinkAllContent=\"false\" DefaultResolution=\"IecVarAccess, 3.3.1.20 (System)\" />\n    <addData>\n      <data name=\"http://www.3s-software.com/plcopenxml/objectid\" handleUnknown=\"discard\">\n        <ObjectId>a13a8ff1-e760-4284-9d45-5ca949e70c2f</ObjectId>\n      </data>\n    </addData>\n  </Libraries>\n</data>\n`;\n};\n\nconst device = (codesysVersion: string | null): string => {\n  return `\\\n<data name=\"Device\" handleUnknown=\"discard\">\n  <Device xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"\">\n    <DeviceType>\n      <DeviceIdentification>\n        <Type>4096</Type>\n        <Id>0000 0001</Id>\n        <Version>${codesysVersion ?? \"3.5.11.30\"}</Version>\n      </DeviceIdentification>\n      <Connector moduleType=\"256\" interface=\"Common.PCI\" connectorId=\"0\">\n        <HostParameterSet />\n      </Connector>\n      <Connector moduleType=\"769\" interface=\"SafetyInterface\" connectorId=\"1\">\n        <HostParameterSet />\n      </Connector>\n      <DeviceParameterSet />\n    </DeviceType>\n  </Device>\n</data>\n`;\n};\n","import { MacroStep, EnclosingStep } from \"./step\";\n\nconst variables = (model: MacroStep | EnclosingStep): string => {\n  return `\nFUNCTION_BLOCK ${model.name}_FB\n\n// Variable declaration\nVAR_INPUT\n  Initialization:BOOL;\nEND_VAR\n\nVAR_OUTPUT\n  Complete:BOOL;\nEND_VAR\n`;\n};\n\nexport const macroStepBehaviour = (model: MacroStep | EnclosingStep) =>\n  `\\\n// FB behavior\nIF Initialization THEN\n  Complete:=FALSE;\n  // Initialization actions\n\nEND_IF\n\n// Nested behavior\n\n// Termination of the nested behavior\nComplete:=TRUE;\n`;\n\nexport const macroStepTemplate = (model: MacroStep | EnclosingStep) =>\n  `\\\n${variables(model)}\n${macroStepBehaviour(model)}\n`;\n","import { templateGemmaGrafcet, templateGlobals } from \"./gemma-templates\";\nimport {\n  GlobalData,\n  RootStoreModel,\n  DataBuilder,\n  JsonType,\n  GraphWarnings,\n} from \"../canvas/store\";\nimport { computed, IObservableArray, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Transition } from \"./transition\";\nimport { Step, StepType, ProcedureType, BaseStep } from \"./step\";\nimport { NodeModel } from \"../node/node-model\";\nimport { IndexedDB } from \"../canvas/persistence\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { SourceDirectory, SourceFile } from \"../codegen/file-system\";\nimport { macroStepTemplate } from \"./macro-step\";\nimport { NodeView } from \"../node/node\";\nimport { Signal, SignalRow, SignalType } from \"./signal\";\nimport mm from \"../gemma-model.json\";\nimport { projectTemplate } from \"./openxml-templates\";\n\nexport class GemmaGrafcet implements GlobalData<Step> {\n  constructor(\n    private graph: RootStoreModel<Step, GemmaGrafcet, Transition>,\n    json?: JsonType\n  ) {\n    let signals: Signal[] = [];\n    if (Array.isArray(json?.signals)) {\n      signals = json?.signals\n        .map((s) =>\n          typeof s === \"object\" ? Signal.fromJson(this, s) : undefined\n        )\n        .filter((s) => s !== undefined) as Signal[];\n    }\n    this.signals = observable.array<Signal>(signals);\n  }\n\n  get key(): string {\n    return this.graph.key;\n  }\n  get codesysVersion(): string | null {\n    return this.graph.codesysVersion;\n  }\n\n  canAddNode = (nodeType: string): boolean => {\n    return true;\n  };\n\n  generatingXML = false;\n\n  initState(): void {\n    const nodes = [...this.graph.nodes.values()];\n    const _selected = nodes.find(\n      (n) => n.data.type !== StepType.CONTAINER && !n.isHidden\n    );\n    if (_selected !== undefined) {\n      this.graph.selectNode(_selected);\n    }\n    const _selectedTrans = nodes\n      .flatMap((n) => n.inputs)\n      .find((t) => !t.isHidden);\n    if (_selectedTrans !== undefined) {\n      this.graph.selectConnection(_selectedTrans);\n    }\n\n    this.fFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.F\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 600, y: 0 })!;\n    this.fFamily.setName(\"F family\");\n    this.fFamily.data.family = ProcedureType.F;\n\n    this.aFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.A\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 0 })!;\n    this.aFamily.setName(\"A family\");\n    this.aFamily.data.family = ProcedureType.A;\n\n    this.dFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.D\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 500 })!;\n    this.dFamily.setName(\"D family\");\n    this.dFamily.data.family = ProcedureType.D;\n  }\n\n  fFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  aFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  dFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n\n  @computed\n  get steps(): Step[] {\n    return [...this.graph.nodes.values()]\n      .filter((node) => !node.isHidden && node.data.type !== StepType.CONTAINER)\n      .sort((a, b) => a.data.id - b.data.id)\n      .map((node) => node.data);\n  }\n\n  readonly signals: IObservableArray<Signal>;\n\n  @computed\n  get numSignals(): Signal[] {\n    return this.signals.filter((s) => s.type !== SignalType.bool);\n  }\n\n  @computed\n  get boolSignals(): Signal[] {\n    return this.signals.filter((s) => s.type === SignalType.bool);\n  }\n\n  @computed\n  get initialStep(): Step | undefined {\n    return this.steps.find((s) => s.isInitial);\n  }\n\n  @computed\n  get generateMainFile(): string {\n    return templateGemmaGrafcet(this);\n  }\n\n  generateProjectInFormat = (format: string): string => {\n    this.generatingXML = true;\n    const result = projectTemplate(this);\n    this.generatingXML = false;\n    return result;\n  };\n\n  @computed\n  get generateSourceCode(): SourceDirectory {\n    const main = templateGemmaGrafcet(this);\n    const globals = templateGlobals(this.signals);\n    const files = [\n      new SourceFile(\"GEMMA.txt\", main),\n      new SourceFile(\"GVL.txt\", globals),\n    ];\n\n    for (const s of this.steps.values()) {\n      // if (s.type === StepType.ENCLOSING) {\n      //   files.push(\n      //     new SourceFile(s.name + \"_FB.txt\", enclosingStepTemplate(s))\n      //   );\n      // } else\n      if (s.type === StepType.ENCLOSING || s.type === StepType.MACRO) {\n        files.push(new SourceFile(s.name + \"_FB.txt\", macroStepTemplate(s)));\n      }\n    }\n\n    return new SourceDirectory(\"gemma_grafcet\", files);\n  }\n\n  @computed\n  get warnings(): GraphWarnings {\n    const signalsErrors = new Set<string>();\n    let unnamedSignals = 0;\n    for (const s of this.signals) {\n      const isUnnamed = s.name.trim() === \"\";\n      if (isUnnamed) {\n        unnamedSignals++;\n      } else if (!!s.errors[\"Name\"]) {\n        signalsErrors.add(`${s.name}. Name: ${s.errors[\"Name\"]}.`);\n      }\n      if (!!s.errors[\"Default Value\"]) {\n        signalsErrors.add(\n          `${isUnnamed ? \"<UNNAMED>\" : s.name}. Default value: ${\n            s.errors[\"Default Value\"]\n          }.`\n        );\n      }\n    }\n    if (unnamedSignals > 0) {\n      signalsErrors.add(\n        `${unnamedSignals} signal${\n          unnamedSignals === 1 ? \"\" : \"s\"\n        } with no name.`\n      );\n    }\n\n    const hasInitialStep = this.steps.some((s) => s.isInitial);\n    const stepsWithNoInputTransitions = this.steps.filter(\n      (s) => !s.node.inputs.some((n) => !n.isHidden)\n    );\n    const stepsWithNoOutputTransitions = this.steps.filter(\n      (s) => !s.node.outputs.some((n) => !n.isHidden)\n    );\n    const stepsErrors = [];\n    if (!hasInitialStep) {\n      stepsErrors.push(\"No initial step.\");\n    }\n    if (stepsWithNoOutputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no output transitions: ${stepsWithNoOutputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n    if (stepsWithNoInputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no input transitions: ${stepsWithNoInputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n\n    const transitionErrors = this.steps\n      .flatMap((s) => s._transitions)\n      .filter(\n        (t) =>\n          t.parsedExpression?.errors !== undefined &&\n          t.parsedExpression?.errors.length > 0\n      )\n      .map((t) => [\n        `${t.from.name} -> ${t.to.name}`,\n        t.parsedExpression?.errors,\n      ]);\n\n    return {\n      Steps: stepsErrors,\n      Transitions: transitionErrors as any,\n      Signals: [...signalsErrors.values()],\n    };\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      signals: this.signals.map((s) => s.toJson),\n    };\n  }\n\n  View = observer(() => {\n    const [showDelete, setShowDelete] = useState(false);\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h3 style={{ margin: \"5px 0 10px 5px\" }}>Signals</h3>\n          <Button onClick={(_) => setShowDelete(!showDelete)}>\n            {showDelete ? \"Hide Delete\" : \"Show Delete\"}\n            <FontAwesomeIcon\n              style={{ paddingLeft: \"7px\" }}\n              icon={\"trash-alt\"}\n              color={\"#000\"}\n            />\n          </Button>\n        </div>\n        <Table\n          id=\"signals-table\"\n          size=\"small\"\n          aria-label=\"a dense table\"\n          stickyHeader={true}\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Size</TableCell>\n              <TableCell>Default</TableCell>\n              {showDelete && <TableCell>Delete</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.signals.map((s, index) => (\n              <SignalRow\n                signal={s}\n                key={index}\n                showDelete={showDelete}\n                removeSignal={(s) => this.signals.remove(s)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n        <Button\n          style={{ alignSelf: \"flex-end\" }}\n          onClick={(_) => this.signals.push(new Signal(this))}\n        >\n          Add Signal\n        </Button>\n      </div>\n    );\n  });\n\n  CanvasView = observer(() => {\n    const nodes = [...this.graph.nodes.values()];\n    const _nodesFromFamily = (family: ProcedureType) => {\n      return nodes\n        .filter(\n          (n) => n.data.family === family && n.data.type !== StepType.CONTAINER\n        )\n        .map((n) => {\n          return <NodeView node={n} key={n.key} />;\n        });\n    };\n\n    const _color = {\n      [ProcedureType.A]: { color: \"#ecf5ff\", size: { w: 600, h: 500 } },\n      [ProcedureType.D]: { color: \"#ffd6d6\", size: { w: 600, h: 500 } },\n      [ProcedureType.F]: { color: \"#ebffec\", size: { w: 600, h: 1000 } },\n    };\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          paddingRight: \"15px\",\n        }}\n      >\n        {nodes\n          .filter((n) => n.data.type === StepType.CONTAINER)\n          .map((n) => {\n            const _d = _color[n.data.family]!;\n            return (\n              <div\n                style={{\n                  background: _d.color,\n                  width: _d.size.w,\n                  height: _d.size.h,\n                  position: \"absolute\",\n                  top: n.y,\n                  left: n.x,\n                }}\n                key={n.key}\n                ref={(e) => {\n                  if (e === null) return;\n                  n.setSize(e.getBoundingClientRect());\n                }}\n              >\n                {_nodesFromFamily(n.data.family)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  });\n}\n\nexport const gemmaBuilders: DataBuilder<Step, GemmaGrafcet, Transition> = {\n  graphBuilder: (g, json) => new GemmaGrafcet(g, json),\n  nodeBuilder: (n, json) => {\n    console.log(json);\n    const type = json !== undefined ? json[\"type\"] : undefined;\n    if (typeof type === \"string\" && Object.keys(StepType).includes(type)) {\n      return new BaseStep(n, json);\n    }\n\n    return new BaseStep(n);\n  },\n  connectionBuilder: (c, json) => new Transition(c, json),\n};\n\nexport const make5NodesGraph = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n  });\n\n  const s1 = rootStore.addNode(StepType.SIMPLE, { x: 72, y: 60 });\n  if (s1 !== undefined) {\n    s1.data.isInitial = true;\n  }\n  const s2 = rootStore.addNode(StepType.MACRO, { x: 261, y: 170 });\n\n  [\n    s1,\n    s2,\n    rootStore.addNode(StepType.ENCLOSING, { x: 441, y: 316 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 211, y: 410 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 441, y: 500 }),\n  ].forEach((s, index) => s?.setName(`S${index + 1}`));\n\n  s1!.data.family = ProcedureType.A;\n  s2!.data.family = ProcedureType.D;\n  rootStore.selectNode(s1!);\n\n  rootStore.selectingInput(s1!);\n  const conn = rootStore.assignInput(s2!);\n\n  rootStore.selectConnection(conn);\n  rootStore.globalData.signals.push(\n    new Signal(rootStore.globalData, { name: \"\" })\n  );\n  return rootStore;\n};\n\nexport const makeBaseGemmaTemplate = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n    hideOnDelete: true,\n    json: mm as any,\n  });\n  return rootStore;\n};\n\nexport const makeBaseGemmaTemplateOld = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n    hideOnDelete: true,\n  });\n\n  const nodesRaw: {\n    [key in ProcedureType]: {\n      [key: string]: { type: StepType; x: number; y: number };\n    };\n  } = {\n    [ProcedureType.A]: {\n      A1: { type: StepType.SIMPLE, x: 517, y: 142 },\n      A2: { type: StepType.SIMPLE, x: 240, y: 417 },\n      A3: { type: StepType.SIMPLE, x: 418, y: 406 },\n      A4: { type: StepType.SIMPLE, x: 479, y: 314 },\n      A5: { type: StepType.MACRO, x: 86, y: 325 },\n      A6: { type: StepType.SIMPLE, x: 156, y: 31 },\n      A7: { type: StepType.MACRO, x: 239, y: 176 },\n    },\n    [ProcedureType.F]: {\n      F1: { type: StepType.MACRO, x: 743, y: 709 },\n      F2: { type: StepType.MACRO, x: 966, y: 683 },\n      F3: { type: StepType.MACRO, x: 704, y: 171 },\n      F4: { type: StepType.ENCLOSING, x: 848, y: 29 },\n      F5: { type: StepType.ENCLOSING, x: 979, y: 478 },\n      F6: { type: StepType.ENCLOSING, x: 729, y: 876 },\n    },\n    [ProcedureType.D]: {\n      D1: { type: StepType.MACRO, x: 75, y: 895 },\n      D2: { type: StepType.SIMPLE, x: 221, y: 573 },\n      D3: { type: StepType.ENCLOSING, x: 309, y: 735 },\n    },\n  };\n\n  const nodes: {\n    [key: string]: NodeModel<Step, GemmaGrafcet, Transition>;\n  } = {};\n\n  for (const [family, nn] of Object.entries(nodesRaw)) {\n    for (const [k, v] of Object.entries(nn)) {\n      const n = rootStore.addNode(v.type, { x: v.x, y: v.y });\n      n?.setName(k);\n      n!.data.family = family as ProcedureType;\n      nodes[k] = n!;\n      if (k === \"A6\") {\n        n!.data.isInitial = true;\n      }\n    }\n  }\n\n  const connections = {\n    A1: [\"F2\", \"F1\", \"F5\", \"F4\"],\n    A2: [\"A1\"],\n    A3: [\"A4\"],\n    A4: [\"F1\"],\n    A5: [\"A6\", \"A7\"],\n    A6: [\"A1\"],\n    A7: [\"A4\"],\n    F1: [\"F3\", \"F4\", \"F5\", \"F6\", \"A2\", \"A3\", \"D1\", \"D2\", \"D3\"],\n    F2: [\"F1\"],\n    F3: [\"A1\"],\n    F4: [\"A6\"],\n    F5: [\"F1\", \"F4\"],\n    F6: [\"F1\", \"D1\"],\n    D1: [\"D2\", \"A5\"],\n    D2: [\"A5\"],\n    D3: [\"A2\", \"A3\"],\n  };\n\n  for (const [from, v] of Object.entries(connections)) {\n    for (const to of v) {\n      rootStore.addConnection(nodes[from], nodes[to]);\n    }\n  }\n\n  rootStore.addConnection(rootStore.globalData.fFamily!, nodes[\"D1\"]!, {\n    data: {\n      conditionExpression: \"I1 AND I2\",\n    },\n  });\n\n  const a1 = nodes[\"A1\"]!;\n  rootStore.selectNode(a1);\n  rootStore.selectConnection(a1.outputs[0]);\n\n  return rootStore;\n};\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, { useCallback, useState } from \"react\";\nimport { MainCanvas } from \"./canvas/canvas\";\nimport { ConfigView } from \"./canvas/config-view\";\nimport { createIndexedDB, IndexedDB } from \"./canvas/persistence\";\nimport { RootStoreModel, GlobalData, GraphWarnings } from \"./canvas/store\";\nimport { NodeData, ConnectionData } from \"./node/node-model\";\nimport { PropertiesView } from \"./properties/properties-view\";\nimport { gemmaBuilders, makeBaseGemmaTemplate } from \"./step/gemma\";\nimport { importJson } from \"./utils\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const storeContext = React.createContext<RootStoreModel<\n  any,\n  any,\n  any\n> | null>(null);\n\nexport function useStore<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>() {\n  const store = React.useContext<RootStoreModel<D, G, C> | null>(storeContext);\n  if (!store) {\n    throw Error(\"useStore should be used inside a Store provider.\");\n  }\n  return store;\n}\n\ntype RootStore = RootStoreModel<any, any, any>;\n\nexport function App() {\n  const [globalDB, setDB] = React.useState<IndexedDB | null>(null);\n  const [store, setStore] = React.useState<RootStore | null>(null);\n  (window as any).store = store;\n  const _isReset = store && store.resetStore;\n  React.useEffect(() => {\n    if (!store) {\n      createIndexedDB().then(async (db) => {\n        setDB(db);\n        const graphs = await db.fetchGraphs();\n\n        let _store: RootStore;\n        const graph = graphs[0];\n        if (graph !== undefined) {\n          const graphExt = await db.loadGraph(graph.key);\n          _store = new RootStoreModel({\n            db,\n            json: { graph, ...graphExt },\n            hideOnDelete: true,\n            builders: gemmaBuilders,\n          });\n        } else {\n          _store = makeBaseGemmaTemplate(db);\n        }\n        setStore(_store);\n      });\n    } else if (store.resetStore) {\n      setStore(null);\n    }\n  }, [store, _isReset]);\n\n  if (!store) {\n    return <div className=\"center\">Loading...</div>;\n  }\n\n  return (\n    <storeContext.Provider value={store}>\n      <div\n        className=\"row\"\n        style={{ background: \"rgba(250,250,250,0.7)\", height: \"100%\" }}\n      >\n        {/* <div className=\"col\">\n          <MainMenu items={Object.keys(rootStore.builders.nodeBuilder)} />\n        </div> */}\n        <div\n          className=\"col\"\n          style={{\n            width: \"0px\",\n            background: \"rgba(250,250,250,0.7)\",\n            flex: \"1 0 auto\",\n          }}\n        >\n          <div className=\"row\" style={{ minHeight: 0, flex: 1 }}>\n            <div className=\"col\" style={{ flex: 1 }}>\n              <TopMenu store={store} globalDB={globalDB!} setStore={setStore} />\n              <MainCanvas />\n            </div>\n            <ConfigView />\n          </div>\n          <PropertiesView />\n        </div>\n      </div>\n    </storeContext.Provider>\n  );\n}\n\nconst ToggleShowHidden = observer(({ store }: { store: RootStore }) => (\n  <Button\n    onClick={(_) => {\n      store.showHidden = !store.showHidden;\n    }}\n  >\n    {store.showHidden ? \"Hide Deleted\" : \"Show Deleted\"}\n  </Button>\n));\n\nfunction TopMenu<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>({\n  store,\n  setStore,\n  globalDB,\n}: {\n  store: RootStoreModel<D, G, C>;\n  globalDB: IndexedDB;\n  setStore: (store: RootStore) => void;\n}) {\n  const [isResetDialogOpen, setIsResetDialogOpen] = useState(false);\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState(false);\n  const toggleDialog = useCallback(() => {\n    setIsResetDialogOpen(!isResetDialogOpen);\n  }, [isResetDialogOpen]);\n\n  return (\n    <div\n      className=\"row\"\n      style={{\n        justifyContent: \"space-between\",\n        borderBottom: \"rgb(221 220 220) solid 1.5px\",\n      }}\n    >\n      <ToggleShowHidden store={store} />\n      <div\n        className=\"row\"\n        style={{\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          onClick={(_) => {\n            store.saveModel();\n          }}\n        >\n          Save\n        </Button>\n        <Button onClick={toggleDialog}>Reset</Button>\n        <Dialog\n          open={isResetDialogOpen}\n          onClose={toggleDialog}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            Reset Diagram State\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Are you sure you want to reset the diagram state? All changes will\n              be lost.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={toggleDialog} color=\"primary\">\n              Close\n            </Button>\n            <Button\n              onClick={async (_) => {\n                const _store = makeBaseGemmaTemplate(globalDB);\n                setStore(_store);\n                toggleDialog();\n              }}\n              color=\"primary\"\n            >\n              Reset Diagram\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button\n          onClick={(_) => {\n            const hasWarnings = Object.values(store.globalData.warnings).some(\n              (v) => v.length > 0\n            );\n            if (hasWarnings) {\n              setIsWarningsDialogOpen(true);\n            } else {\n              store.downloadModel();\n            }\n          }}\n        >\n          Export\n        </Button>\n        <WarningsDialog\n          open={isWarningsDialogOpen}\n          toggleDialog={() => setIsWarningsDialogOpen(!isWarningsDialogOpen)}\n          warnings={store.globalData.warnings}\n          accept={store.downloadModel}\n        />\n        <Button>\n          <label\n            htmlFor=\"import-file-input\"\n            style={{ margin: 0, width: \"100%\", cursor: \"pointer\" }}\n          >\n            Import\n          </label>\n          <input\n            type=\"file\"\n            id=\"import-file-input\"\n            accept=\"application/json\"\n            style={{ display: \"none\" }}\n            onChange={async (e) => {\n              const json = await importJson(e);\n              if (typeof json === \"string\") {\n                try {\n                  const val = JSON.parse(json);\n                  const _store = new RootStoreModel({\n                    db: globalDB,\n                    json: val,\n                    builders: gemmaBuilders,\n                    hideOnDelete: true,\n                  });\n                  setStore(_store);\n                } catch (e) {\n                  console.log(e);\n                }\n              }\n            }}\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport const WarningsDialog = ({\n  open,\n  toggleDialog,\n  warnings,\n  accept,\n}: {\n  open: boolean;\n  toggleDialog: () => void;\n  warnings: GraphWarnings;\n  accept: () => void;\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">Download Diagram</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          There are some warnings in the diagram configuration. Do you want to\n          continue with the download?\n        </DialogContentText>\n        {Object.entries(warnings).map(([title, warnings]) => {\n          if (warnings.length === 0) {\n            return <div key={title}></div>;\n          }\n          return (\n            <div key={title} className=\"warning-list\">\n              <h3>{title}</h3>\n              <ul>\n                {warnings[0].length === 2 && Array.isArray(warnings[0][1])\n                  ? (warnings as [string, string[]][]).map(\n                      ([sectionTitle, warnings], index) => (\n                        <div key={sectionTitle}>\n                          <h5>{sectionTitle}</h5>\n                          {warnings.map((w, index) => (\n                            <li key={`${sectionTitle}${index}`}>{w}</li>\n                          ))}\n                        </div>\n                      )\n                    )\n                  : (warnings as string[]).map((w, index) => (\n                      <li key={`${title}${index}`}>{w}</li>\n                    ))}\n              </ul>\n            </div>\n          );\n        })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleDialog} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={accept} color=\"primary\">\n          Continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlibrary.add(faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}