{"version":3,"sources":["canvas/arrow.tsx","canvas/canvas.tsx","utils.ts","canvas/config-view.tsx","canvas/persistence.ts","node/node-model.tsx","canvas/store.tsx","properties/properties-table.tsx","properties/properties-view.tsx","step/custom_parser.ts","fields/choice-field.tsx","step/step.tsx","fields/primitive-field.tsx","step/gemma-templates.ts","grammar/SimpleBooleanParser.ts","grammar/SimpleBooleanLexer.ts","step/antlr_parser.ts","step/transition.tsx","codegen/file-system.ts","node/node.tsx","step/signal.tsx","step/gemma.tsx","step/macro-step.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["triangleFromCenter","x","y","height","width","y0","ArrowView","observer","connection","rootStore","useStore","isHidden","showHidden","changeX","changeY","from","to","isSelected","connectionStartPosition","data","undefined","b","top","bottom","left","right","getStartPositionConnection","x1","y1","x2","y2","dy","dx","m","Math","abs","deltaX","xa","ya","xm","ym","degrees","atan2","PI","style","strokeWidth","stroke","opacity","d","onClick","_","selectConnection","RectAndText","texts","connectionText","rectFill","transform","padding","React","useState","textRefs","setTextRefs","curr","reduce","p","c","text","prev","setPrev","fullbbox","getBBox","max","useEffect","id","setTimeout","clearTimeout","xPrev","fill","cursor","map","t","index","bbox","key","ref","e","nn","MainCanvas","ops","nodes","values","overflow","flex","position","border","background","margin","borderRadius","globalData","CanvasView","flatMap","op","inputs","defaultResizeEnable","topRight","bottomRight","bottomLeft","topLeft","resizableEnable","f","Object","entries","k","v","downloadToClient","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","importJson","event","files","target","Promise","resolve","window","alert","reader","FileReader","onload","result","onabort","onerror","readAsText","DBStores","ConfigView","isWarningsDialogOpen","setIsWarningsDialogOpen","connections","forEach","get","set","push","Map","orderedOps","counts","filter","withDependencies","length","numProcessed","size","slice","outs","dep","delete","minWidth","defaultSize","boxShadow","enable","className","borderBottom","Button","warnings","some","downloadSourceCode","open","toggleDialog","accept","generateMainFile","openDB","upgrade","db","createObjectStore","graph","keyPath","autoIncrement","node","createIndex","IndexedDB","getKeyFromConnection","path","connectionWithKey","graphKey","assign","this","getAll","value","put","tx","transaction","objectStore","dbKey","openCursor","continue","done","all","getAllFromIndex","_g","n","store","add","updateMany","close","clear","keys","items","val","Error","item","ConnModel","dataBuilder","json","selectedConnection","toJson","observable","computed","NodeModel","resizeObserver","element","setElement","setSize","getBoundingClientRect","disconnect","ResizeObserver","observe","name","conn","outputs","array","action","rect","RootStoreModel","builders","hideOnDelete","saveModel","clearDB","updateGraph","addNodes","addConnections","downloadModel","JSON","stringify","_addToZip","root","dir","newRoot","folder","when","zip","JSZip","sourceCode","generateSourceCode","generateAsync","graphBuilder","v4","nodeBuilder","addConnection","selectedNode","next","_n","initState","nodeType","pos","canAddNode","_in","remove","_out","selectingInputFor","addEventListener","_selectingInputKeyListener","connectionBuilder","addOutput","removeEventListener","ev","PropertiesTable","children","PropertiesTableStyled","PropertiesTableNode","self","spec","plotField","model","nInputs","alignItems","variant","styled","table","PropertiesView","inner","maxHeight","maxWidth","justifyContent","backgroundColor","display","IconButton","activateNode","removeNode","icon","color","activateConnection","removeConnection","ConnectionView","View","minHeight","VarId","StepType","ProcedureType","ButtonsDiv","div","ChoiceFieldSpec","choices","default","onChange","isObservableMap","Symbol","toStringTag","mobxProp","types","optional","string","Array","setValue","ChoiceField","maxButton","Select","autoWidth","marginBottom","disabled","MenuItem","ButtonGroup","aria-label","buttonStyle","StrFieldSpec","maxLength","minLength","multiline","errors","TextField","fullWidth","inputProps","textAlign","error","BoolFieldSpec","required","boolean","Switch","checked","BaseStep","l","Number","POSITIVE_INFINITY","CONTAINER","isInitial","SIMPLE","toString","_color","A","D","F","family","innerStyle","wrapper","nodeHeight","ENCLOSING","MACRO","borderTop","borderRight","borderLeft","description","reaction","otherInitial","automationSystem","steps","find","s","inputNodes","every","aFamily","dFamily","fFamily","sort","priority","_transitions","transitions","concat","delta","parseInt","EnclosingDecoration","H","textOrEmpty","cond","memoryTransitionSuffix","templateCondition","expressionTokens","tok","savedSignalsWithMemory","has","join","templateGemmaGrafcetSimpleStep","isNested","templateTransitions","templateGemmaGrafcetNestedStep","templateFBEntry","_isInner","innerTransitionsLength","isNegated","_evaluateComplete","signalsWithMemory","sm","templateGemmaGrafcet","initialStep","step","replace","SimpleBooleanParser","input","_interp","ParserATNSimulator","_ATN","VOCABULARY","ruleNames","_serializedATN","_localctx","ParseContext","_ctx","state","enterRule","RULE_parse","enterOuterAlt","expression","match","EOF","re","RecognitionException","exception","_errHandler","reportError","recover","exitRule","ExpressionContext","RULE_expression","sync","interpreter","adaptivePredict","_input","NotExpressionContext","NOT","OrExpressionContext","_left","expressionAnd","OR","_right","AndParentExpressionContext","ExpressionAndContext","RULE_expressionAnd","AndExpressionContext","expressionSimple","AND","SimpleExpressionContext","ExpressionSimpleContext","RULE_expressionSimple","ComparatorExpressionContext","numExpression","_op","comparator","IdentifierExpressionContext","IDENTIFIER","ParenExpressionContext","LPAREN","RPAREN","NumExpressionContext","RULE_numExpression","LA","IdentifierNumExpressionContext","DECIMAL","DecimalExpressionContext","NoViableAltException","_la","ComparatorContext","RULE_comparator","GT","GE","LT","LE","EQ","recoverInline","Token","matchedEOF","reportMatch","consume","__ATN","ATNDeserializer","deserialize","Utils","Parser","TRUE","FALSE","WS","_LITERAL_NAMES","_SYMBOLIC_NAMES","VocabularyImpl","parent","invokingState","getRuleContext","getToken","listener","enterParse","exitParse","visitor","visitParse","visitChildren","ParserRuleContext","ctx","copyFrom","enterNotExpression","exitNotExpression","visitNotExpression","enterOrExpression","exitOrExpression","visitOrExpression","enterAndParentExpression","exitAndParentExpression","visitAndParentExpression","enterAndExpression","exitAndExpression","visitAndExpression","enterSimpleExpression","exitSimpleExpression","visitSimpleExpression","i","getRuleContexts","enterComparatorExpression","exitComparatorExpression","visitComparatorExpression","enterIdentifierExpression","exitIdentifierExpression","visitIdentifierExpression","enterParenExpression","exitParenExpression","visitParenExpression","enterIdentifierNumExpression","exitIdentifierNumExpression","visitIdentifierNumExpression","enterDecimalExpression","exitDecimalExpression","visitDecimalExpression","tryGetToken","enterComparator","exitComparator","visitComparator","SimpleBooleanLexer","LexerATNSimulator","channelNames","modeNames","Lexer","ErrorVisitor","signals","isInvalid","boolSignals","aggregate","nextResult","valid","includes","numSignals","AbstractParseTreeVisitor","Transition","bound","conditionExpression","evaluateSignal","topOfNot","topOfAnd","priorityChoices","setPriority","ConditionInput","parsedExpression","marginTop","paddingLeft","err","signalsInCondition","token","withMemory","MemCheckbox","Checkbox","substring","hasNegation","textDecoration","omit","signal","addSignal","prevToken","strPrev","getCustomTokens","gemma","output","inputStream","CharStreams","fromString","lexer","tokenStream","CommonTokenStream","tree","parse","countFunctionsVisitor","visit","toProcess","pop","childCount","getChild","parseBoolExpression","console","log","Set","ObservableSet","prevIndex","_spanStyleRef","useRef","font","whiteSpace","textIndex","repeat","onScroll","current","scrollTo","currentTarget","scrollTop","caretColor","spellCheck","SourceItem","SourceFile","SourceDirectory","SignalTypeBase","SignalType","SignalTypeSize","StyledNode","NodeView","params","onDrag","useCallback","move","deltaY","selectingInput","isValidInput","assignInput","selectNode","bounds","signalSizeMap","bool","int","uint","real","SignalRow","showDelete","removeSignal","TableRow","TableCell","Tooltip","title","setTypeBase","typeBase","typeSize","defaultValue","align","regexSignalDefaultValid","regex","message","Signal","typePrim","base","lreal","startsWith","charAt","signalTypeToPrimitives","sizeStr","findIndex","s2","validator","Name","test","GemmaGrafcet","setShowDelete","flexDirection","Table","stickyHeader","TableHead","TableBody","alignSelf","w","h","_d","isArray","fromJson","_selected","_selectedTrans","addNode","setName","main","globals","toUpperCase","trim","signalsErrors","hasInitialStep","stepsWithNoInputTransitions","stepsWithNoOutputTransitions","stepsErrors","Steps","Transitions","Signals","gemmaBuilders","g","makeBaseGemmaTemplate","nodesRaw","A1","A2","A3","A4","A5","A6","A7","F1","F2","F3","F4","F5","F6","D1","D2","D3","a1","storeContext","createContext","useContext","App","globalDB","setDB","setStore","_isReset","resetStore","createIndexedDB","then","fetchGraphs","graphs","loadGraph","graphExt","_store","Provider","TopMenu","ToggleShowHidden","isResetDialogOpen","setIsResetDialogOpen","Dialog","onClose","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","htmlFor","WarningsDialog","sectionTitle","Boolean","location","hostname","library","faChevronDown","faChevronUp","faTrashAlt","faEye","faEyeSlash","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.970e6494.chunk.js","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { NodeModel, ConnModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\n\nexport type ArrowModel = {\n  from: NodeModel<any, any, any>;\n  to: NodeModel<any, any, any>;\n};\n\ntype ArrowViewProps = { connection: ConnModel<any, any, any> };\n\nconst triangleFromCenter = (\n  x: number,\n  y: number,\n  height: number = 14,\n  width: number = 14\n) => {\n  const y0 = y + height;\n  return `M${x} ${y} L${x - width / 2} ${y0} L${x + width / 2} ${y0} Z`;\n};\n\nconst getStartPositionConnection = (\n  from: NodeModel<any, any, any>\n): { x: number; y: number } => {\n  const connectionStartPosition = (from.data as NodeData<any, any, any>)\n    .connectionStartPosition;\n\n  if (connectionStartPosition !== undefined) {\n    const b = connectionStartPosition();\n    if (b !== undefined) {\n      let x = from.x;\n      let y = from.y;\n      if (\"top\" in b) {\n        y += b.top;\n      } else {\n        y += from.height - b.bottom;\n      }\n\n      if (\"left\" in b) {\n        x += b.left;\n      } else {\n        y += from.width - b.right;\n      }\n      return { x, y };\n    }\n  }\n  return { x: from.x + from.width / 2, y: from.y + from.height / 2 };\n};\n\nexport const ArrowView: React.FC<ArrowViewProps> = observer(\n  ({ connection }: ArrowViewProps) => {\n    const rootStore = useStore();\n\n    if (connection.isHidden && !rootStore.showHidden) {\n      return <></>;\n    }\n    const { from, to, isSelected } = connection;\n    const { x: x1, y: y1 } = getStartPositionConnection(from);\n\n    const [x2, y2] = [to.x + to.width / 2, to.y + to.height / 2];\n    const dy = y2 - y1;\n    const dx = x2 - x1;\n\n    let changeX;\n    let changeY;\n    if (dx === 0) {\n      changeX = 0;\n      changeY = ((y2 > y1 ? 1 : -1) * to.height) / 2;\n    } else if (dy === 0) {\n      changeY = 0;\n      changeX = ((x2 > x1 ? 1 : -1) * to.width) / 2;\n    } else {\n      const m = Math.abs(dy / dx);\n      const [deltaX, deltaY] =\n        m > to.height / to.width\n          ? [to.height / 2 / m, to.height / 2]\n          : [to.width / 2, (to.width / 2) * m];\n      changeY = (y2 > y1 ? 1 : -1) * deltaY;\n      changeX = (x2 > x1 ? 1 : -1) * deltaX;\n    }\n    const xa = x2 - changeX;\n    const ya = y2 - changeY;\n\n    const [xm, ym] = [(x1 + x2) / 2, (y1 + y2) / 2];\n    const degrees = 90 + (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n\n    return (\n      <>\n        <path\n          style={{\n            strokeWidth: 2,\n            stroke: \"black\",\n            opacity: connection.isHidden ? 0.07 : 1,\n          }}\n          d={`M${x1} ${y1} L${x2} ${y2}`}\n          onClick={(_) => {\n            rootStore.selectConnection(connection);\n          }}\n        />\n        {!connection.isHidden && (\n          <>\n            <RectAndText\n              connection={connection}\n              texts={connection.data.connectionText}\n              x={xm}\n              rectFill={isSelected ? \"#eeedff\" : \"#eee\"}\n              y={ym}\n              onClick={(_) => rootStore.selectConnection(connection)}\n            />\n            <path\n              d={triangleFromCenter(xa, ya)}\n              transform={`rotate(${degrees} ${xa} ${ya})`}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\nconst RectAndText: React.FC<{\n  texts: { text: string; style?: React.CSSProperties }[];\n  connection: ConnModel<any, any, any>;\n  x: number;\n  y: number;\n  rectFill?: string;\n  padding?: number;\n  onClick: (event: React.MouseEvent<any, MouseEvent>) => void;\n}> = observer(\n  ({\n    texts,\n    x: xm,\n    y: ym,\n    rectFill = \"#eee\",\n    padding = 3,\n    onClick,\n    connection,\n  }) => {\n    const [textRefs, setTextRefs] = React.useState<SVGTextElement[]>([]);\n    const curr = texts.reduce((p, c) => p + c.text, \"\");\n    const [prev, setPrev] = React.useState(curr);\n    const fullbbox = textRefs.reduce(\n      (p, c) => {\n        if (c === undefined) {\n          return p;\n        }\n        const b = c.getBBox();\n\n        return {\n          width: p.width + b.width,\n          height: Math.max(p.height, b.height),\n        };\n      },\n      { width: 0, height: 0 }\n    );\n    React.useEffect(() => {\n      if (prev !== curr) {\n        const id = setTimeout(() => setPrev(curr), 0);\n        return () => clearTimeout(id);\n      }\n    });\n    let xPrev = 0;\n    return (\n      <>\n        <rect\n          width={fullbbox.width + padding * 2}\n          height={fullbbox.height + padding * 2}\n          x={xm - fullbbox.width / 2 - padding}\n          y={ym - fullbbox.height + padding}\n          fill={rectFill}\n          onClick={onClick}\n          style={{ cursor: \"pointer\" }}\n        ></rect>\n        {texts.map((t, index) => {\n          const bbox = textRefs[index]?.getBBox();\n          const x =\n            (fullbbox !== undefined ? xm - fullbbox.width / 2 : xm) + xPrev;\n          xPrev += bbox !== undefined ? bbox.width : 0;\n          return (\n            <text\n              key={`${connection.from.key}${connection.to.key}${index}`}\n              x={x}\n              y={ym + 2}\n              fill=\"black\"\n              ref={(e) => {\n                if (e === null || e === undefined || !!textRefs[index]) return;\n                const nn = [...textRefs];\n                nn[index] = e;\n                setTextRefs(nn);\n              }}\n              onClick={onClick}\n              style={{ cursor: \"pointer\", ...(t.style ?? {}) }}\n            >\n              {t.text}\n            </text>\n          );\n        })}\n      </>\n    );\n  }\n);\n\n// const getBoxIntersection = (from: OperationModelT, to: OperationModelT) => {\n//   const fwidth = from.width || 60;\n//   const fheight = from.width || 60;\n//   const twidth = to.width || 60;\n//   const theight = to.width || 60;\n\n//   const [x1, y1, x2, y2] = [\n//     from.x + fwidth / 2,\n//     from.y + fheight / 2,\n//     to.x + twidth / 2,\n//     to.y + theight / 2\n//   ];\n//   const dy = y2 - y1;\n//   const dx = x2 - x1;\n//   if (dx === 0 || dy === 0) {\n//   }\n//   const m = dy / dx;\n\n//   const degrees = 90 + (Math.atan2(dy, dx) * 180) / Math.PI;\n//   let xpos = x2 > x1 ? 1 : -1;\n//   const interY = (y2 - y1) / m;\n//   const interX = x2 * m + y1;\n// };\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useStore } from \"../App\";\nimport { ArrowView } from \"./arrow\";\n\ntype Props = {};\n\nexport const MainCanvas: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n  const ops = [...rootStore.nodes.values()];\n  return (\n    <div style={{ overflow: \"auto\", flex: \"1\" }}>\n      <div\n        style={{\n          position: \"relative\",\n          border: \"1px solid #eee\",\n          background: \"#fff\",\n          margin: \"10px\",\n          borderRadius: \"6px\",\n          flex: 1,\n          height: \"1000px\",\n          width: \"1200px\",\n        }}\n      >\n        <rootStore.globalData.CanvasView/>\n        <svg style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}>\n          {ops\n            .flatMap((op) => op.inputs)\n            .map((connection) => (\n              <ArrowView\n                connection={connection}\n                key={connection.from.key + connection.to.key}\n              />\n            ))}\n        </svg>\n      </div>\n    </div>\n  );\n});\n","export function listToMap<T extends number | string>(l: Array<T>) {\n  return l.reduce((p, c) => {\n    p[c.toString()] = c;\n    return p;\n  }, {} as { [key: string]: T });\n}\n\nconst defaultResizeEnable = {\n  top: false,\n  right: false,\n  bottom: false,\n  left: false,\n  topRight: false,\n  bottomRight: false,\n  bottomLeft: false,\n  topLeft: false,\n};\n\nexport function resizableEnable(f: {\n  top?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n  left?: boolean;\n  topRight?: boolean;\n  bottomRight?: boolean;\n  bottomLeft?: boolean;\n  topLeft?: boolean;\n}) {\n  return Object.entries(f).reduce(\n    (p, [k, v]) => {\n      if (v !== undefined) {\n        p[k as keyof typeof defaultResizeEnable] = v;\n      }\n      return p;\n    },\n    { ...defaultResizeEnable }\n  );\n}\n\nexport function downloadToClient(\n  content: BlobPart,\n  fileName: string,\n  contentType: string\n) {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}\n\nexport function importJson(\n  event: React.ChangeEvent<HTMLInputElement>\n): Promise<string | ArrayBuffer | null | undefined> {\n  const files = event.target.files;\n  return new Promise((resolve, _) => {\n    if (files !== null) {\n      const file = files[0];\n      if (file.type !== \"application/json\") {\n        window.alert(\n          \"Debes seleccionar un archivo válido, la extensión debe ser '.json'.\"\n        );\n        return resolve(undefined);\n      }\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          resolve(e.target?.result);\n        };\n        reader.onabort = (e) => {\n          resolve(undefined);\n        };\n        reader.onerror = (e) => {\n          resolve(undefined);\n        };\n        reader.readAsText(file);\n    } else {\n      resolve(undefined);\n    }\n  });\n}\n","import Button from \"@material-ui/core/Button\";\nimport { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React, { useState } from \"react\";\nimport { useStore, WarningsDialog } from \"../App\";\nimport { NodeModel } from \"../node/node-model\";\nimport { resizableEnable } from \"../utils\";\nimport { GlobalData } from \"./store\";\n\ntype Props = {};\n\nexport const ConfigView: React.FC<Props> = observer(<\n  G extends GlobalData<any>\n>() => {\n  const rootStore = useStore<any, G, any>();\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState(false);\n\n  const ops = [...rootStore.nodes.values()];\n  const connections = ops.reduce((p, c) => {\n    c.inputs.forEach((v) => {\n      let m = p.get(v.to);\n      if (m === undefined) {\n        m = [];\n        p.set(v.to, m);\n      }\n      m.push(c);\n    });\n    return p;\n  }, new Map<NodeModel<any, any, any>, NodeModel<any, any, any>[]>());\n\n  const orderedOps: NodeModel<any, any, any>[] = [];\n  const counts = new Map(\n    ops\n      .filter((op) => {\n        const withDependencies = op.data.length !== 0;\n        if (!withDependencies) {\n          orderedOps.push(op);\n        }\n        return withDependencies;\n      })\n      .map((op) => [op, op.data.length])\n  );\n  let numProcessed = 0;\n  while (counts.size !== 0 && orderedOps.length !== numProcessed) {\n    for (let k of orderedOps.slice(numProcessed)) {\n      numProcessed += 1;\n      const outs = connections.get(k);\n      if (outs === undefined) continue;\n\n      for (let dep of outs) {\n        const m = counts.get(dep)!;\n        if (m === 1) {\n          counts.delete(dep);\n          orderedOps.push(dep);\n        } else {\n          counts.set(dep, m - 1);\n        }\n      }\n    }\n  }\n\n  if (counts.size !== 0) {\n    // CICLE ?\n  }\n\n  return (\n    <Resizable\n      minWidth={200}\n      defaultSize={{ height: \"auto\", width: 350 }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ left: true })}\n    >\n      <div className=\"col\" style={{ height: \"100%\" }}>\n        <div style={{ borderBottom: \"rgb(221 220 220) solid 1.5px\" }}>\n          <Button\n            onClick={(_) => {\n              const hasWarnings = Object.values(\n                rootStore.globalData.warnings\n              ).some((v) => v.length > 0);\n              if (hasWarnings) {\n                setIsWarningsDialogOpen(true);\n              } else {\n                rootStore.downloadSourceCode();\n              }\n            }}\n          >\n            Download Code\n          </Button>\n          <WarningsDialog\n            open={isWarningsDialogOpen}\n            toggleDialog={() => setIsWarningsDialogOpen(!isWarningsDialogOpen)}\n            warnings={rootStore.globalData.warnings}\n            accept={rootStore.downloadSourceCode}\n          />\n        </div>\n        <div\n          style={{\n            overflow: \"auto\",\n            height: \"100%\",\n            padding: \"0 10px\",\n            flex: 1,\n          }}\n        >\n          <pre>{rootStore.globalData.generateMainFile}</pre>\n        </div>\n      </div>\n    </Resizable>\n  );\n});\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { JsonType } from \"./store\";\n\nconst DB_NAME = \"GemmaGrafcet\";\nenum DBStores {\n  graph = \"graph\",\n  node = \"node\",\n  connection = \"connection\",\n}\n\nexport type GraphJson = {\n  key: string;\n  data: JsonType;\n};\n\nexport type NodeJson = {\n  key: string;\n  name: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isHidden: boolean;\n  data: JsonType;\n};\n\ntype _NodeJson = NodeJson & {\n  graphKey: string;\n};\n\nexport type ConnectionJson = {\n  from: string;\n  to: string;\n  isHidden: boolean;\n  data: JsonType;\n};\n\ntype _ConnectionJson = ConnectionJson & {\n  key: string;\n  graphKey: string;\n};\n\ninterface MyDB extends DBSchema {\n  [DBStores.graph]: {\n    key: string;\n    value: GraphJson;\n  };\n  [DBStores.node]: {\n    key: string;\n    value: _NodeJson;\n    indexes: { \"by-graph\": string };\n  };\n  [DBStores.connection]: {\n    key: string;\n    value: _ConnectionJson;\n    indexes: { \"by-graph\": string };\n  };\n}\n\nexport async function createIndexedDB() {\n  const db = await openDB<MyDB>(DB_NAME, 1, {\n    upgrade(db) {\n      db.createObjectStore(DBStores.graph, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n\n      const nodeStore = db.createObjectStore(DBStores.node, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      nodeStore.createIndex(\"by-graph\", \"graphKey\");\n\n      const connStore = db.createObjectStore(DBStores.connection, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      connStore.createIndex(\"by-graph\", \"graphKey\");\n    },\n  });\n  return new IndexedDB(db);\n}\n\nexport function sameKeys(path: ConnectionJson, path2: ConnectionJson) {\n  return getKeyFromConnection(path) === getKeyFromConnection(path2);\n}\n\nexport function getKeyFromConnection(path: ConnectionJson) {\n  return `${path.from}_${path.to}`;\n}\n\nexport function connectionWithKey(\n  graphKey: string,\n  path: ConnectionJson\n): _ConnectionJson {\n  return Object.assign(path, { key: getKeyFromConnection(path), graphKey });\n}\n\nexport class IndexedDB {\n  constructor(private db: IDBPDatabase<MyDB>) {}\n\n  //\n  // GRAPHS\n  //\n\n  fetchGraphs() {\n    return this.db.getAll(DBStores.graph);\n  }\n\n  updateGraph(value: GraphJson) {\n    return this.db.put(DBStores.graph, value);\n  }\n\n  async deleteGraph(graphKey: string) {\n    const tx = this.db.transaction(\n      [DBStores.graph, DBStores.node, DBStores.connection],\n      \"readwrite\"\n    );\n    tx.objectStore(DBStores.graph).delete(graphKey);\n    for (const dbKey of [DBStores.node, DBStores.connection] as Array<\n      DBStores.node | DBStores.connection\n    >) {\n      let cursor = await tx\n        .objectStore(dbKey)\n        .index(\"by-graph\")\n        .openCursor(graphKey);\n      while (cursor) {\n        cursor.delete();\n        cursor = await cursor.continue();\n      }\n    }\n    await tx.done;\n  }\n\n  async loadGraph(graphKey: string) {\n    const [nodes, connections] = await Promise.all([\n      this.db.getAllFromIndex(DBStores.node, \"by-graph\", graphKey),\n      this.db.getAllFromIndex(DBStores.connection, \"by-graph\", graphKey),\n    ]);\n\n    return { nodes, connections };\n  }\n\n  //\n  // NODES\n  //\n\n  async addNodes(graphKey: string, nodes: NodeJson[]) {\n    const tx = this.db.transaction(DBStores.node, \"readwrite\");\n\n    const _g = { graphKey };\n    for (const n of nodes) {\n      tx.store.add(Object.assign(n, _g));\n    }\n    return await tx.done;\n  }\n\n  deleteNode(path: NodeJson) {\n    return this.db.delete(DBStores.node, path.key);\n  }\n\n  async updateNode(graphKey: string, path: NodeJson) {\n    return this.db.put(DBStores.node, Object.assign(path, { graphKey }));\n  }\n\n  async updateNodes(graphKey: string, nodes: Array<NodeJson>) {\n    const _g = { graphKey };\n    return this.updateMany(\n      DBStores.node,\n      nodes.map((n) => n.key),\n      nodes.map((p) => Object.assign(p, _g))\n    );\n  }\n\n  //\n  // CONNECTIONS\n  //\n\n  async addConnections(graphKey: string, connections: ConnectionJson[]) {\n    const tx = this.db.transaction(DBStores.connection, \"readwrite\");\n\n    for (const p of connections) {\n      tx.store.add(connectionWithKey(graphKey, p));\n    }\n    return await tx.done;\n  }\n\n  deleteConnection(path: ConnectionJson) {\n    return this.db.delete(DBStores.connection, getKeyFromConnection(path));\n  }\n\n  async updateConnection(graphKey: string, connection: ConnectionJson) {\n    return this.db.put(\n      DBStores.connection,\n      connectionWithKey(graphKey, connection)\n    );\n  }\n\n  async updateConnections(\n    graphKey: string,\n    connections: Array<ConnectionJson>\n  ) {\n    return this.updateMany(\n      DBStores.connection,\n      connections.map(getKeyFromConnection),\n      connections.map((p) => connectionWithKey(graphKey, p))\n    );\n  }\n\n  //\n  // OTHER\n  //\n\n  async closeDB() {\n    this.db.close();\n  }\n\n  async clearDB() {\n    await Promise.all([\n      this.db.clear(DBStores.graph),\n      this.db.clear(DBStores.connection),\n      this.db.clear(DBStores.node),\n    ]);\n  }\n\n  private async updateMany<T>(dbKey: DBStores, keys: string[], items: T[]) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    await Promise.all(\n      items.map(async (path, index) => {\n        const key = keys[index];\n        const val = await tx.store.get(key);\n\n        if (!val) {\n          throw new Error();\n        }\n        return tx.store.put({ ...val, ...path });\n      })\n    );\n    return await tx.done;\n  }\n\n  private async updateIncrementalSingle<T>(\n    dbKey: DBStores,\n    key: string,\n    item: T\n  ) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    const val = await tx.store.get(key);\n\n    if (!val) {\n      throw new Error();\n    }\n    tx.store.put({ ...val, ...item });\n    await tx.done;\n  }\n}\n","import { action, computed, observable, ObservableMap } from \"mobx\";\nimport { SnapshotIn } from \"mobx-state-tree\";\nimport { FieldSpec } from \"../fields\";\nimport { GlobalData, RootStoreModel, JsonType } from \"../canvas/store\";\nimport { ConnectionJson, NodeJson } from \"../canvas/persistence\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nexport type OperationI<\n  V extends { [key: string]: FieldSpec },\n  D extends NodeData<D, G, any>,\n  G extends GlobalData<D>\n> = {\n  [key in keyof V]: SnapshotIn<ReturnType<V[key][\"mobxProp\"]>>;\n} & {\n  NAME: string;\n  spec: V;\n  nInputs: number;\n  errors: ObservableMap<keyof V, string>;\n};\n\nexport const mobxDecorators = <V extends { [key: string]: FieldSpec }>(\n  spec: V\n) => {\n  return {\n    ...Object.keys(spec).reduce((p, c) => {\n      p[c as keyof V] = observable;\n      return p;\n    }, {} as { [key in keyof V]: PropertyDecorator }),\n    errors: observable,\n  };\n};\n\nexport type ConnectionPosition =\n  | { top: number; left: number }\n  | { top: number; right: number }\n  | { bottom: number; left: number }\n  | { bottom: number; right: number };\n\nexport interface NodeData<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  isValidInput(input: NodeModel<D, G, C>): boolean;\n  nInputs: number;\n  spec: { [key: string]: FieldSpec };\n  // TODO: ObservableMap<keyof V, string>\n  errors: ObservableMap<string, string>;\n  View: React.FC;\n  toJson: JsonType;\n  parent?: NodeModel<D, G, C>;\n  connectionStartPosition?: () => undefined | ConnectionPosition;\n}\n\nexport type ConnectionData<D> = {\n  ConnectionView: React.FunctionComponent;\n  connectionText: { text: string; style?: React.CSSProperties }[];\n  toJson: JsonType;\n};\n\nexport class ConnModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public from: NodeModel<D, G, C>,\n    public to: NodeModel<D, G, C>,\n\n    dataBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C,\n    json?: JsonType,\n    isHidden?: boolean\n  ) {\n    this.data = dataBuilder(this, json);\n    this.isHidden = isHidden ?? false;\n  }\n\n  data: C;\n  @observable\n  isHidden: boolean;\n  get graph(): RootStoreModel<D, G, any> {\n    return this.from.graph;\n  }\n\n  @computed\n  get isSelected(): boolean {\n    return this.from.graph.selectedConnection === this;\n  }\n\n  @computed\n  get toJson(): ConnectionJson {\n    return {\n      from: this.from.key,\n      to: this.to.key,\n      data: this.data.toJson,\n      isHidden: this.isHidden,\n    };\n  }\n}\n\nexport class NodeModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public graph: RootStoreModel<D, G, any>,\n    d: {\n      key: string;\n      name: string;\n      x: number;\n      y: number;\n      isHidden?: boolean;\n      dataBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n      data?: JsonType;\n    }\n  ) {\n    this.key = d.key;\n    this.name = d.name;\n    this.x = d.x;\n    this.y = d.y;\n    this.isHidden = d.isHidden ?? false;\n    this.data = d.dataBuilder(this, d.data);\n  }\n\n  resizeObserver?: ResizeObserver;\n  element?: HTMLElement;\n  @observable\n  key: string;\n  @observable\n  name: string;\n  @observable\n  x: number;\n  @observable\n  y: number;\n  @observable\n  width: number = 60;\n  @observable\n  height: number = 60;\n  @observable\n  data: D;\n  @observable\n  isHidden: boolean;\n  @observable\n  inputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get inputNodes(): NodeModel<D, G, C>[] {\n    return this.inputs.map((c) => c.from);\n  }\n  @observable\n  outputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get outputNodes(): NodeModel<D, G, C>[] {\n    return this.outputs.map((c) => c.to);\n  }\n\n  @action\n  addInput(conn: ConnModel<D, G, C>) {\n    this.inputs.push(conn);\n    conn.from.outputs.push(conn);\n  }\n\n  @action\n  addOutput(conn: ConnModel<D, G, C>) {\n    this.outputs.push(conn);\n    conn.to.inputs.push(conn);\n  }\n\n  @action\n  move = (dx: number, dy: number) => {\n    this.x += dx;\n    this.y += dy;\n  };\n  @action\n  setSize = (rect: DOMRect) => {\n    this.width = rect.width;\n    this.height = rect.height;\n  };\n  @action\n  setName = (name: string) => {\n    this.name = name;\n  };\n  setElement = (element: HTMLElement) => {\n    this.setSize(element.getBoundingClientRect());\n\n    if (this.element !== element) {\n      if (this.resizeObserver !== undefined) {\n        this.resizeObserver.disconnect();\n      }\n      this.element = element;\n      this.resizeObserver = new ResizeObserver((entries, observer) => {\n        this.setSize(element.getBoundingClientRect());\n      });\n      this.resizeObserver.observe(element);\n    }\n  };\n\n  @computed\n  get toJson(): NodeJson {\n    return {\n      key: this.key,\n      name: this.name,\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      isHidden: this.isHidden,\n      data: this.data.toJson,\n    };\n  }\n}\n","import {\n  action,\n  computed,\n  IKeyValueMap,\n  IMapEntries,\n  observable,\n  ObservableMap,\n} from \"mobx\";\nimport { v4 } from \"uuid\";\nimport { SourceDirectory } from \"../codegen/file-system\";\nimport {\n  NodeModel,\n  NodeData,\n  ConnModel,\n  ConnectionData,\n} from \"../node/node-model\";\nimport { downloadToClient } from \"../utils\";\nimport JSZip from \"jszip\";\nimport { ConnectionJson, GraphJson, IndexedDB, NodeJson } from \"./persistence\";\n\nexport type DataBuilder<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  connectionBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C;\n  nodeBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n  graphBuilder: (graph: RootStoreModel<D, G, C>, json?: JsonType) => G;\n};\n\ntype JsonTypeItem = number | string | boolean | JsonType;\nexport type JsonType = { [key: string]: JsonTypeItem | JsonTypeItem[] };\n\nexport type GraphWarnings = { [key: string]: string[] | Array<[string, Array<string>]> };\n\nexport interface GlobalData<D extends NodeData<D, any, any>> {\n  generateMainFile: string;\n  generateSourceCode: SourceDirectory;\n  canAddNode(nodeType: string): boolean;\n  View: React.FunctionComponent;\n  CanvasView: React.FunctionComponent;\n  toJson: JsonType;\n  warnings: GraphWarnings;\n  initState?: () => void;\n}\n\ntype FullGraphJson = {\n  graph: GraphJson;\n  nodes: NodeJson[];\n  connections: ConnectionJson[];\n};\n\ntype ConstructParams<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  builders: DataBuilder<D, G, C>;\n  data?: G;\n  key?: string;\n  nodes?:\n    | IMapEntries<string, NodeModel<D, G, C>>\n    | IKeyValueMap<NodeModel<D, G, C>>;\n};\n\nexport class RootStoreModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> {\n  constructor(d: {\n    db: IndexedDB;\n    builders: DataBuilder<D, G, C>;\n    hideOnDelete?: boolean;\n    json?: FullGraphJson;\n  }) {\n    this.db = d.db;\n    this.builders = d.builders;\n    this.hideOnDelete = d.hideOnDelete ?? false;\n    this.globalData = d.builders.graphBuilder(this, d.json?.graph.data);\n    this.key = d.json?.graph.key ?? v4();\n\n    const nodes = d.json?.nodes.reduce((m, n) => {\n      const node = new NodeModel(this, {\n        ...n,\n        dataBuilder: d.builders.nodeBuilder,\n      });\n\n      m[n.key] = node;\n      return m;\n    }, {} as { [key: string]: NodeModel<D, G, C> });\n\n    this.nodes = observable.map(nodes ?? {});\n\n    d.json?.connections.forEach((c) => {\n      const from = this.nodes.get(c.from);\n      const to = this.nodes.get(c.to);\n      if (from !== undefined && to !== undefined) {\n        this.addConnection(from, to, c.data, c.isHidden);\n      }\n    });\n    if (this.nodes.size !== 0) {\n      this.selectedNode = this.nodes.values().next().value;\n      if (this.selectedNode!.outputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.outputs[0];\n      } else if (this.selectedNode!.inputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.inputs[0];\n      } else {\n        for (const _n of this.nodes.values()) {\n          if (_n.outputs.length !== 0) {\n            this.selectedConnection = _n.outputs[0];\n            break;\n          }\n        }\n      }\n    }\n    if (this.globalData.initState !== undefined) {\n      this.globalData.initState();\n    }\n  }\n\n  key: string;\n  // Builders to create graph, node and transition instances\n  builders: DataBuilder<D, G, C>;\n  hideOnDelete: boolean;\n  // Global generic data\n  globalData: G;\n  db: IndexedDB;\n\n  @observable\n  resetStore: boolean = false;\n  // All nodes\n  @observable\n  nodes: ObservableMap<string, NodeModel<D, G, C>>;\n  // Selected node\n  @observable\n  selectedNode?: NodeModel<D, G, C>;\n  // Selected connection\n  @observable\n  selectedConnection?: ConnModel<D, G, C>;\n\n  // Selected input for connection\n  @observable\n  selectingInputFor?: NodeModel<D, G, C>;\n\n  @observable\n  showHidden = true;\n\n  // Select a node\n  @action\n  selectNode = (node: NodeModel<D, G, C>) => {\n    this.selectedNode = node;\n  };\n\n  // Select a connection\n  @action\n  selectConnection = (connection: ConnModel<D, G, C>) => {\n    this.selectedConnection = connection;\n  };\n\n  // Add a node\n  @action\n  addNode = (\n    nodeType: string,\n    pos?: { x: number; y: number }\n  ): NodeModel<D, G, C> | undefined => {\n    if (this.globalData.canAddNode(nodeType)) {\n      const op = new NodeModel(this, {\n        dataBuilder: this.builders.nodeBuilder,\n        key: v4(),\n        name: nodeType,\n        x: pos?.x ?? 100,\n        y: pos?.y ?? 100,\n        data: { type: nodeType },\n      });\n      this.nodes.set(op.key, op);\n      return op;\n    }\n  };\n\n  // Remove a node\n  @action\n  removeNode = (node: NodeModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      node.isHidden = true;\n      for (const _in of node.inputs) {\n        _in.isHidden = true;\n      }\n      for (const _out of node.outputs) {\n        _out.isHidden = true;\n      }\n    } else {\n      if (node === this.selectedNode) {\n        this.selectedNode = undefined;\n      }\n      if (this.nodes.delete(node.key)) {\n        for (const _in of node.inputs) {\n          _in.from.outputs.remove(_in);\n        }\n        for (const _out of node.outputs) {\n          _out.to.inputs.remove(_out);\n        }\n      }\n    }\n  };\n\n  @action\n  activateNode = (node: NodeModel<D, G, C>) => {\n    node.isHidden = false;\n    for (const _in of node.inputs) {\n      if (!_in.from.isHidden) _in.isHidden = false;\n    }\n    for (const _out of node.outputs) {\n      if (!_out.to.isHidden) _out.isHidden = false;\n    }\n  };\n\n  @action\n  removeConnection = (connection: ConnModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      connection.isHidden = true;\n    } else {\n      if (connection === this.selectedConnection) {\n        this.selectedConnection = undefined;\n      }\n      connection.from.outputs.remove(connection);\n      connection.to.inputs.remove(connection);\n    }\n  };\n\n  @action\n  activateConnection = (connection: ConnModel<D, G, C>): void => {\n    if (!connection.from.isHidden && !connection.to.isHidden) {\n      connection.isHidden = false;\n    }\n  };\n\n  // Select input-output / add connection\n\n  @action\n  selectingInput = (from: NodeModel<D, G, C>) => {\n    this.selectingInputFor = from;\n    window.addEventListener(\"keyup\", this._selectingInputKeyListener);\n  };\n\n  @action\n  assignInput = (to: NodeModel<D, G, C>): ConnModel<D, G, C> => {\n    const conn = new ConnModel(\n      this.selectingInputFor!,\n      to,\n      this.builders.connectionBuilder\n    );\n    conn.from.addOutput(conn);\n    this.selectingInputFor = undefined;\n    this.selectedConnection = conn;\n    window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    return conn;\n  };\n\n  @action\n  private _selectingInputKeyListener = (ev: KeyboardEvent) => {\n    if (ev.key === \"Escape\") {\n      this.selectingInputFor = undefined;\n      window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    }\n  };\n\n  @action\n  addConnection = (\n    from: NodeModel<D, G, C>,\n    to: NodeModel<D, G, C>,\n    json?: JsonType,\n    isHidden?: boolean\n  ): ConnModel<D, G, C> => {\n    const conn = new ConnModel(\n      from,\n      to,\n      this.builders.connectionBuilder,\n      json,\n      isHidden\n    );\n    conn.from.addOutput(conn);\n    return conn;\n  };\n\n  // Serialization\n\n  @computed\n  get toJson(): GraphJson {\n    return { data: this.globalData.toJson, key: this.key };\n  }\n\n  saveModel = async () => {\n    const nodes = [...this.nodes.entries()];\n    await this.db.clearDB();\n    await Promise.all([\n      this.db.updateGraph(this.toJson),\n      this.db.addNodes(\n        this.key,\n        nodes.map(([_, value]) => value.toJson)\n      ),\n      this.db.addConnections(\n        this.key,\n        nodes.flatMap(([_, value]) => value.outputs).map((t) => t.toJson)\n      ),\n    ]);\n  };\n\n  downloadModel = (): FullGraphJson => {\n    const nodes = [...this.nodes.entries()];\n    const json = {\n      graph: this.toJson,\n      nodes: nodes.map(([_, value]) => value.toJson),\n      connections: nodes\n        .flatMap(([_, value]) => value.outputs)\n        .map((t) => t.toJson),\n    };\n\n    downloadToClient(\n      JSON.stringify(json),\n      \"gemma-model.json\",\n      \"application/json\"\n    );\n    return json;\n  };\n\n  downloadSourceCode = async () => {\n    const _addToZip = (root: JSZip, dir: SourceDirectory) => {\n      const newRoot = root.folder(dir.name)!;\n\n      for (const item of dir.items) {\n        item.when({\n          file: (f) => newRoot.file(f.name, f.content),\n          dir: (d) => _addToZip(newRoot, d),\n        });\n      }\n    };\n\n    const zip = new JSZip();\n    const sourceCode = this.globalData.generateSourceCode;\n    _addToZip(zip, sourceCode);\n\n    const content = await zip.generateAsync({ type: \"blob\" });\n\n    downloadToClient(\n      content,\n      \"gemma-grafcet-source-code.zip\",\n      \"application/zip\"\n    );\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props2 = {\n  children: React.ReactNode;\n};\n\nexport const PropertiesTable = observer(({ children }: Props2) => {\n  return (\n    <PropertiesTableStyled>\n      <thead>\n        <tr>\n          <td>Property</td>\n          <td>Value</td>\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </PropertiesTableStyled>\n  );\n});\n\ntype Props<D extends NodeData<D, any, any>> = {\n  self: NodeModel<D, any, any>;\n};\n\nexport const PropertiesTableNode = observer(\n  <D extends NodeData<D, any, any>>({ self }: Props<D>) => {\n    const rootStore = useStore();\n    return (\n      <div className=\"col\">\n        <PropertiesTable>\n          {Object.entries(self.data.spec).map(([k, v]) => (\n            <tr key={k}>\n              <td>{k}</td>\n              <td>\n                <v.plotField name={k} model={self.data as any} />\n              </td>\n            </tr>\n          ))}\n        </PropertiesTable>\n        <div style={{ margin: \"0 3px\" }}>\n          {self.data.nInputs !== 0 && (\n            <div className=\"row\" key=\"inputs\" style={{ alignItems: \"center\" }}>\n              <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Inputs:</h4>\n              <div style={{ flex: 1 }}>\n                {self.inputs.map((v) => (\n                  <Button\n                    onClick={() => rootStore.selectConnection(v as any)}\n                    key={v.from.key}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    style={{ minWidth: \"39px\" }}\n                  >\n                    {v.from.name}\n                  </Button>\n                ))}\n                {self.inputs.length === 0 && \"No inputs\"}\n              </div>\n            </div>\n          )}\n          <div className=\"row\" key=\"outputs\" style={{ alignItems: \"center\" }}>\n            <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Outputs:</h4>\n            <div style={{ flex: 1 }}>\n              {self.outputs.map((v) => (\n                <Button\n                  onClick={() => rootStore.selectConnection(v as any)}\n                  key={v.to.key}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  style={{ minWidth: \"39px\" }}\n                >\n                  {v.to.name}\n                </Button>\n              ))}\n              {self.outputs.length === 0 && \"No outputs\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nconst PropertiesTableStyled = styled.table`\n  padding-bottom: 10px;\n  thead {\n    font-size: 1.1em;\n    font-weight: bolder;\n    tr td:last-child {\n      padding: 4px 0px 4px 10px;\n    }\n  }\n  tr td {\n    padding: 0;\n  }\n  tr td:first-child {\n    padding-right: 15px;\n    height: 32px;\n  }\n  tr td:last-child {\n    margin: auto auto;\n    padding-left: 10px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React from \"react\";\nimport { resizableEnable } from \"../utils\";\nimport { PropertiesTableNode } from \"./properties-table\";\nimport { useStore } from \"../App\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./properties-view.css\";\n\ntype Props = {};\n\nexport const PropertiesView: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n\n  let inner;\n  if (rootStore.selectedNode != null) {\n    const selectedNode = rootStore.selectedNode;\n    const selectedConnection = rootStore.selectedConnection;\n    inner = (\n      <div\n        style={{\n          overflow: \"auto\",\n          maxHeight: \"100%\",\n          maxWidth: \"100%\",\n          justifyContent: \"space-around\",\n          backgroundColor: \"#fafafa\",\n          display: \"flex\",\n        }}\n        className=\"row\"\n      >\n        <div\n          className=\"properties-view\"\n          key=\"node-properties\"\n          id=\"node-properties\"\n        >\n          <div\n            className=\"row\"\n            style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n          >\n            <h3 style={{ margin: \"5px 0px 10px 5px\" }}>\n              {`Step: ${selectedNode.name}`}\n            </h3>\n            <IconButton\n              onClick={(_) => {\n                if (selectedNode.isHidden) {\n                  rootStore.activateNode(selectedNode);\n                } else {\n                  rootStore.removeNode(selectedNode);\n                }\n              }}\n            >\n              <FontAwesomeIcon\n                icon={selectedNode.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                color={\"#000\"}\n              />\n            </IconButton>\n          </div>\n          <PropertiesTableNode self={rootStore.selectedNode} />\n        </div>\n        <div\n          className=\"properties-view\"\n          key=\"connection-properties\"\n          id=\"connection-properties\"\n        >\n          {selectedConnection !== undefined && (\n            <div className=\"col\">\n              <div\n                className=\"row\"\n                style={{\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3 style={{ margin: \"5px 0 10px 5px\" }}>\n                  {`Transition: ${selectedConnection.from.name} -> ${selectedConnection.to.name}`}\n                </h3>\n                <IconButton\n                  onClick={(_) => {\n                    if (selectedConnection.isHidden) {\n                      rootStore.activateConnection(selectedConnection);\n                    } else {\n                      rootStore.removeConnection(selectedConnection);\n                    }\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={selectedConnection.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                    color={\"#000\"}\n                  />\n                </IconButton>\n              </div>\n              <selectedConnection.data.ConnectionView />\n            </div>\n          )}\n        </div>\n        <div\n          style={{ minWidth: \"270px\" }}\n          className=\"properties-view\"\n          key=\"graph-properties\"\n        >\n          <rootStore.globalData.View />\n        </div>\n      </div>\n    );\n  } else {\n    inner = (\n      <div style={{ width: \"150px\" }} className=\"row\">\n        <div style={{ width: \"150px\" }} className=\"center\">\n          Not selected\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Resizable\n      minHeight={200}\n      defaultSize={{ height: 295, width: \"auto\" }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ top: true })}\n    >\n      {inner}\n    </Resizable>\n  );\n});\n","export class VarId {\n  constructor(public text: string) {}\n\n  toString(): string {\n    return this.text;\n  }\n}\n\nexport type CustomToken =\n  | \"(\"\n  | \")\"\n  | \"AND\"\n  | \"OR\"\n  | \"NOT\"\n  | \"<\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"\\n\"\n  | VarId;\n\nexport const getCustomTokens = (t: string): [CustomToken, number][] => {\n  const l: [CustomToken, number][] = [];\n  let i = -1;\n  let omit = 0;\n  let signal = \"\";\n  const addSignal = () => {\n    if (signal.length !== 0) {\n      l.push([new VarId(signal), i - signal.length]);\n      signal = \"\";\n    }\n  };\n  const add = (v: CustomToken) => {\n    addSignal();\n    l.push([v, i]);\n  };\n\n  for (const c of t) {\n    i++;\n    if (omit !== 0) {\n      omit--;\n      continue;\n    }\n    switch (c) {\n      case \" \":\n        addSignal();\n        break;\n      case \"\\n\":\n      case \")\":\n      case \"(\":\n      case \"<\":\n      case \">\":\n        add(c);\n        break;\n      case \"=\":\n        const prevToken = l[l.length - 1];\n        const prev = prevToken[0];\n        const strPrev = prev instanceof VarId ? prev.text : prev;\n        if ([\"<\", \">\"].includes(strPrev) && prevToken[1] === i - 1) {\n          l[l.length - 1][0] = (prev + \"=\") as any;\n        } else {\n          add(c);\n        }\n        break;\n      case \"A\":\n        if (t.substring(i, i + 3) === \"AND\") {\n          omit = 2;\n          add(\"AND\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"O\":\n        if (t.substring(i, i + 2) === \"OR\") {\n          omit = 1;\n          add(\"OR\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"N\":\n        if (t.substring(i, i + 3) === \"NOT\") {\n          omit = 2;\n          add(\"NOT\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      default:\n        signal += c;\n        break;\n    }\n  }\n  if (signal.length !== 0) {\n    l.push([new VarId(signal), i - signal.length + 1]);\n  }\n  return l;\n};\n\ntype ParseR = { ok: boolean };\n\n// type Conv = (tokens: Token[]) => ParseR;\n\n// const _union = (fs: Array<Conv>) => {};\n\n// const _find = (token: Token): Conv => {\n//   return (ts) => {\n//     return { ok: ts[0] == token };\n//   };\n// };\n\ntype Item = (CustomToken | Union)[];\n\ntype ExpType = \"VarId\" | \"comp\" | \"and\" | \"simpleExp\" | \"numOP\";\n\nclass Union {\n  constructor(\n    items: Partial<{ [key in ExpType]: (CustomToken | \"SELF\" | Union)[] }>\n  ) {\n    this.variants = Object.values(items).map((l) => {\n      return l!.map((v) => (v === \"SELF\" ? this : v));\n    });\n  }\n  variants: Item[];\n}\n\n// type Val = Item | Union;\n\n// type Expression<V extends { [key: string]: Token }> = {\n//   name: ExpType;\n//   tokens: Item;\n//   p: (t: Token[]) => V;\n// };\n\n// export const getCustomParse = (tokens: Token[]) => {\n//   const varId: Expression<{ varId: VarId }> = {\n//     name: \"VarId\",\n//     p: (t) => ({ varId: t[0] as VarId }),\n//     tokens: [new VarId(\"\")],\n//   };\n\n//   const numSimple = new Union({\n//     VarId: [new VarId(\"\")], //TODO: decimal\n//   });\n\n//   const comparator = new Union([[\"<\"], [\">\"], [\"=\"], [\"<=\"], [\">=\"]]);\n\n//   const expSimple = new Union([\n//     [numSimple, comparator, numSimple],\n//     [new VarId(\"\")],\n//   ]);\n\n//   const expAnd = new Union([[expSimple, \"AND\", \"SELF\"], [expSimple]]);\n\n//   const exp = new Union([\n//     [\"(\", \"SELF\", \")\"],\n//     [\"NOT\", \"SELF\"],\n//     [expAnd, \"OR\", \"SELF\"],\n//     [expAnd],\n//   ]);\n\n//   for (const t of tokens) {\n//     matchPossibilities(t, exp);\n//   }\n// };\n\n// const matchPossibilities = (t: Token, possibilities: Union): void => {\n//   let i = -1;\n//   for (const variant of possibilities.variants) {\n//     i++;\n\n//     const curr = variant.pop();\n//     if (curr === undefined) {\n//     } else if (typeof curr == \"string\") {\n//       if (t == curr) {\n//       }\n//     } else if (curr instanceof Union) {\n//       matchPossibilities(t, curr);\n//     } else {\n//       if (t instanceof VarId) {\n//       } else {\n//       }\n//     }\n//   }\n// };\n","import Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { observer } from \"mobx-react-lite\";\nimport { IAnyType, IMSTMap, types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FieldSpec, PP2 } from \"./\";\n\nconst ButtonsDiv = styled.div`\n  min-height: 38px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport class ChoiceFieldSpec<\n  V,\n  K extends C extends IMSTMap<M> ? string : string & keyof C,\n  C extends { [key: string]: V } | IMSTMap<M>,\n  M extends IAnyType,\n  MM extends { [key: string]: FieldSpec }\n> {\n  choices: C;\n  default: K;\n  onChange?: (n: V) => void;\n\n  constructor(v: { choices: C; default: K; onChange?: (n: V) => void }) {\n    this.choices = v.choices;\n    this.default = v.default;\n    this.onChange = v.onChange;\n    if (this.isObservableMap()) {\n      if ((this.choices as any).get(this.default) === null) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  isObservableMap = () => {\n    return (\n      typeof this.choices.keys === \"function\" &&\n      typeof this.choices.size === \"number\" &&\n      Symbol.toStringTag in this.choices\n    );\n  };\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.string, this.default)\n      : types.string;\n\n  plotField: React.FC<PP2<MM, string>> = observer(({ name, model }) => {\n    let keys;\n    if (this.isObservableMap()) {\n      keys = Array.from(\n        (this.choices as any).keys() as IterableIterator<string>\n      );\n    } else {\n      keys = Object.keys(this.choices);\n    }\n    return (\n      <ChoiceField\n        value={model[name]}\n        setValue={(v) => {\n          model[name] = v as any;\n          if (this.onChange !== undefined) this.onChange(v as any);\n        }}\n        keys={keys}\n      />\n    );\n  });\n}\n\nexport const ChoiceField = ({\n  keys,\n  value,\n  setValue,\n  maxButton,\n}: {\n  keys: string[];\n  value: string;\n  setValue: (v: string) => void;\n  maxButton?: number\n}) => {\n  if (keys.length > (maxButton ?? 3)) {\n    return (\n      <Select\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value as any);\n        }}\n        autoWidth={true}\n        style={{minHeight: \"35px\", marginBottom: \"3px\"}}\n        disabled={keys.length <= 1}\n      >\n        {keys.map((k) => {\n          return (\n            <MenuItem key={k} value={k}>\n              {k}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  } else {\n    return (\n      <ButtonsDiv>\n        <ButtonGroup\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n        >\n          {keys.map((k) => {\n            const buttonStyle =\n              k === value ? { background: \"#3f51b5\", color: \"white\" } : {};\n\n            return (\n              <Button\n                key={k}\n                onClick={() => {\n                  setValue(k);\n                }}\n                style={buttonStyle}\n              >\n                {k}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n      </ButtonsDiv>\n    );\n  }\n};\n","import React from \"react\";\nimport { computed, observable, reaction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { ChoiceFieldSpec } from \"../fields/choice-field\";\nimport { ConnectionPosition, NodeData, NodeModel } from \"../node/node-model\";\nimport { listToMap } from \"../utils\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { Transition } from \"./transition\";\nimport { JsonType } from \"../canvas/store\";\nimport { BoolFieldSpec } from \"../fields/primitive-field\";\n\nexport enum StepType {\n  ENCLOSING = \"ENCLOSING\",\n  MACRO = \"MACRO\",\n  SIMPLE = \"SIMPLE\",\n  CONTAINER = \"CONTAINER\",\n}\n\ntype GemmaNode = NodeModel<Step, GemmaGrafcet, Transition>;\n\nexport enum ProcedureType {\n  F = \"F\", // Operational\n  D = \"D\", // Failure\n  A = \"A\", // Stop\n}\n\nexport type Step = SimpleStep | EnclosingStep | MacroStep | ContainerStep;\n\nexport class BaseStep implements NodeData<Step, GemmaGrafcet, Transition> {\n  @observable\n  type: StepType;\n\n  nInputs = Number.POSITIVE_INFINITY;\n  errors = observable.map<string, string>();\n\n  constructor(\n    public node: GemmaNode,\n    d?: {\n      description?: string;\n      family?: ProcedureType;\n      isInitial?: boolean;\n      type?: StepType;\n    }\n  ) {\n    this.description = d?.description ?? \"\";\n    this.family = d?.family ?? ProcedureType.F;\n    this.isInitial = d?.isInitial ?? false;\n    this.type = d?.type ?? StepType.SIMPLE;\n    reaction(\n      (_) => this.isInitial,\n      (isInitial, _) => {\n        if (isInitial) {\n          const otherInitial = this.automationSystem.steps.find(\n            (s) => s.isInitial && s !== this\n          );\n          if (otherInitial !== undefined) {\n            otherInitial.isInitial = false;\n          }\n        }\n      }\n    );\n  }\n\n  @computed\n  get name(): string {\n    return this.node.name;\n  }\n  @observable\n  description: string;\n  @observable\n  isInitial: boolean;\n  @observable\n  family: ProcedureType;\n  @computed\n  get parent(): GemmaNode | undefined {\n    if (this.type === StepType.CONTAINER) {\n      return undefined;\n    }\n    switch (this.family) {\n      case ProcedureType.A:\n        return this.automationSystem.aFamily;\n      case ProcedureType.D:\n        return this.automationSystem.dFamily;\n      case ProcedureType.F:\n        return this.automationSystem.fFamily;\n    }\n    throw new Error(\"\");\n  }\n\n  get automationSystem(): GemmaGrafcet {\n    return this.node.graph.globalData;\n  }\n\n  connectionStartPosition = (): undefined | ConnectionPosition => {\n    if (this.type === StepType.CONTAINER) {\n      return { bottom: 40, left: 50 };\n    }\n    return undefined;\n  };\n\n  @computed\n  private get _transitions(): Transition[] {\n    return this.node.outputs\n      .filter((t) => !t.isHidden)\n      .map((t) => t.data)\n      .sort((a, b) => a.priority - b.priority);\n  }\n  @computed\n  get innerTransitionsLength(): number {\n    return this._transitions.length;\n  }\n  @computed\n  get transitions(): Transition[] {\n    if (this === this.automationSystem.fFamily!.data) {\n      return this._transitions;\n    }\n    return this.family === ProcedureType.F\n      ? this.automationSystem.fFamily!.data.transitions.concat(\n          this._transitions\n        )\n      : this._transitions;\n  }\n  @computed\n  get id(): number {\n    if (this.name.length === 2) {\n      let delta: number;\n      switch (this.family) {\n        case ProcedureType.A:\n          delta = 0;\n          break;\n        case ProcedureType.F:\n          delta = 7;\n          break;\n        case ProcedureType.D:\n          delta = 7 + 6;\n          break;\n      }\n      return delta + Number.parseInt(this.name[1]);\n    }\n    return 0;\n  }\n\n  spec = {\n    isInitial: new BoolFieldSpec({ default: false, required: true }),\n    type: new ChoiceFieldSpec({\n      default: StepType.SIMPLE,\n      choices: listToMap(\n        Object.values(StepType).filter((t) => t !== StepType.CONTAINER)\n      ),\n    }),\n  };\n\n  isValidInput(n: GemmaNode): boolean {\n    return this.node.inputNodes.every((t) => t.data !== n.data);\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      family: this.family,\n      description: this.description,\n      type: this.type,\n      isInitial: this.isInitial,\n    };\n  }\n\n  View = observer(({ children }) => {\n    const _color = {\n      [ProcedureType.A]: \"#ecf5ff\",\n      [ProcedureType.D]: \"#ffd6d6\",\n      [ProcedureType.F]: \"#ebffec\",\n    };\n\n    if (this.type === StepType.CONTAINER) {\n      return (\n        <div\n          style={{\n            position: \"relative\",\n            border: \"1px solid #eee\",\n            background: _color[this.family],\n            flex: 1,\n            width: 400,\n            height: 400,\n          }}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    let style: React.CSSProperties = {};\n    let innerStyle: React.CSSProperties = { padding: \"12px\" };\n    let wrapper: (p: React.ReactElement) => React.ReactElement = (p) => p;\n\n    if (this.isInitial) {\n      wrapper = (p) => (\n        <div style={{ padding: \"5px\" }}>\n          <div\n            style={{\n              border: \"1.5px solid\",\n            }}\n          >\n            {p}\n          </div>\n        </div>\n      );\n    }\n\n    const nodeHeight = this.node.height - 2 - (this.isInitial ? 12 : 0);\n    switch (this.type) {\n      case StepType.ENCLOSING:\n        style = { padding: \"0 0\", display: \"flex\" };\n        return wrapper(\n          <div style={{ ...style, position: \"relative\" }}>\n            <EnclosingDecoration left={true} nodeHeight={nodeHeight} />\n            <div style={{ ...innerStyle, padding: \"12px 18px\" }}>\n              {this.node.name}\n            </div>\n            <EnclosingDecoration left={false} nodeHeight={nodeHeight} />\n          </div>\n        );\n      case StepType.MACRO:\n        style = { padding: \"5px 0\" };\n        innerStyle = {\n          borderTop: \"1.5px solid\",\n          borderBottom: \"1.5px solid\",\n          borderRight: \"0\",\n          borderLeft: \"0\",\n          padding: \"5px 12px\",\n        };\n        break;\n    }\n\n    return wrapper(\n      <div style={style}>\n        <div style={innerStyle}>{this.node.name}</div>\n      </div>\n    );\n  });\n}\n\nexport type SimpleStep = BaseStep & {\n  type: StepType.SIMPLE;\n};\n\nexport type ContainerStep = BaseStep & {\n  type: StepType.CONTAINER;\n};\n\nexport type EnclosingStep = BaseStep & {\n  type: StepType.ENCLOSING;\n};\n\nexport type MacroStep = BaseStep & {\n  type: StepType.MACRO;\n};\n\nexport const EnclosingDecoration = ({\n  nodeHeight,\n  left,\n}: {\n  nodeHeight: number;\n  left: boolean;\n}) => {\n  return (\n    <svg\n      style={{\n        width: \"10px\",\n        height: \"\" + nodeHeight + \"px\",\n        position: \"absolute\",\n        right: left ? undefined : 0,\n      }}\n    >\n      <path\n        d={\n          left\n            ? `M 10 0 L 0 ${nodeHeight / 2} L 10 ${nodeHeight}`\n            : `M 0 0 L 10 ${nodeHeight / 2} L 0 ${nodeHeight}`\n        }\n        stroke=\"black\"\n        fill=\"transparent\"\n      ></path>\n    </svg>\n  );\n};\n","import Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { observer } from \"mobx-react-lite\";\nimport { types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport { FieldSpec, FieldSpecI, PP2 } from \"./\";\n\nexport class StrFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, string> {\n  default: string;\n  maxLength?: number;\n  minLength?: number;\n  multiline: boolean;\n\n  constructor(v: {\n    default: string;\n    maxLength?: number;\n    minLength?: number;\n    multiline?: boolean;\n  }) {\n    this.default = v.default;\n    this.maxLength = v.maxLength;\n    this.minLength = v.minLength;\n    this.multiline = v.multiline ?? false;\n\n    if (typeof this.default === \"string\") {\n      if (\n        this.minLength !== undefined &&\n        this.default.length < this.minLength\n      ) {\n        throw Error(\"\");\n      } else if (\n        this.maxLength !== undefined &&\n        this.default.length > this.maxLength\n      ) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  mobxProp = () => {\n    if (this.default !== undefined) {\n      return types.optional(types.string, this.default);\n    } else {\n      return types.string;\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, string>) => {\n    const [value, setValue] = React.useState(model[name]);\n    const errors = model.errors;\n    const onChange = (\n      e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n      let value = e.target.value;\n      setValue(value as any);\n\n      if (this.maxLength !== undefined && value.length > this.maxLength) {\n        errors.set(name, \"Max length exceded.\");\n      } else if (\n        this.minLength !== undefined &&\n        value.length < this.minLength\n      ) {\n        errors.set(name, \"Min length exceded.\");\n      } else {\n        errors.delete(name);\n        model[name] = value as any;\n      }\n    };\n\n    if (this.multiline) {\n      return (\n        <textarea\n          key={name}\n          className=\"multiline-input\"\n          value={value}\n          onChange={onChange}\n        ></textarea>\n      );\n    } else {\n      return (\n        <TextField\n          key={name}\n          value={value}\n          fullWidth={true}\n          margin=\"dense\"\n          inputProps={{ style: { textAlign: \"center\" } }}\n          error={errors.get(name) !== undefined}\n          style={{ width: \"140px\" }}\n          onChange={onChange}\n        />\n      );\n    }\n  });\n}\n\nexport class BoolFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, boolean> {\n  default: boolean;\n  required?: boolean;\n\n  constructor(v: { default: boolean; required?: boolean }) {\n    this.default = v.default;\n    this.required = v.required !== undefined ? v.required : true;\n  }\n\n  mobxProp = () => {\n    if (this[\"default\"] === undefined) {\n      return types.boolean;\n    } else {\n      return types.optional(types.boolean, this.default);\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, boolean>) => {\n    return (\n      <Switch\n        checked={model[name]}\n        onChange={() => {\n          model[name] = !model[name] as any;\n        }}\n        color=\"primary\"\n      />\n    );\n  });\n}\n\nexport class NumFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, number> {\n  default: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  isInt: boolean;\n\n  constructor(v: {\n    default: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    isInt?: boolean;\n  }) {\n    this.default = v.default;\n    this.min = v.min;\n    this.max = v.max;\n    this.step = v.step;\n    this.isInt = v.isInt !== undefined ? v.isInt : false;\n    if (this.min !== undefined && this.default < this.min) {\n      throw Error(\"\");\n    } else if (this.max !== undefined && this.default > this.max) {\n      throw Error(\"\");\n    }\n    if (this.isInt) {\n      this.default = Math.round(this.default);\n      if (this.step === undefined) {\n        this.step = 1;\n      } else {\n        this.step = Math.round(this.step);\n      }\n    }\n  }\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.number, this.default)\n      : types.number;\n\n  plotField = observer(({ name, model }: PP2<M, number>) => {\n    const [value, setValue] = React.useState(\n      ((model[name] as any) as number).toString()\n    );\n    const errors = model.errors;\n    const error = errors.get(name);\n\n    return (\n      <TextField\n        key={name}\n        value={value}\n        inputProps={{\n          min: this.min,\n          max: this.max,\n          step: this.step,\n          style: { textAlign: \"center\" },\n        }}\n        type=\"number\"\n        error={error !== undefined}\n        fullWidth={true}\n        style={{ width: \"80px\" }}\n        onChange={(e) => {\n          let value = e.target.value;\n          if (this.min !== undefined && this.min >= 0) {\n            value = value.replace(/-/g, \"\");\n          }\n          if (this.isInt) {\n            value = value.replace(/\\./g, \"\");\n          }\n          setValue(value);\n\n          let num: number;\n          if (this.isInt) {\n            num = parseInt(value, 10);\n          } else {\n            num = parseFloat(value);\n          }\n\n          if (Number.isNaN(num)) {\n            errors.set(name, \"Invalid\");\n          } else if (this.min !== undefined && this.min > num) {\n            errors.set(name, `Smaller than minimum ${this.min}`);\n          } else if (this.max !== undefined && this.max < num) {\n            errors.set(name, `Greater than maximum ${this.max}`);\n          } else {\n            errors.delete(name);\n            model[name] = num as any;\n          }\n        }}\n      />\n    );\n  });\n}\n","import { VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { EnclosingStep, MacroStep, SimpleStep, StepType } from \"./step\";\nimport { Transition } from \"./transition\";\nimport { Signal } from \"./signal\";\n\nexport class H {\n  static textOrEmpty = (cond: boolean, text: string) => (cond ? text : \"\");\n}\n\nconst memoryTransitionSuffix = (t: Transition): string => {\n  return `_${t.from.name}_${t.priority}_MEM`;\n};\n\nconst templateCondition = (t: Transition): string => {\n  return t.expressionTokens\n    .map(([tok, _]) => {\n      if (tok instanceof VarId) {\n        // Is signal\n        return (\n          \"GVL.\" +\n          tok.text +\n          (t.savedSignalsWithMemory.has(tok.text)\n            ? memoryTransitionSuffix(t)\n            : \"\")\n        );\n      } else {\n        return tok;\n      }\n    })\n    .join(\" \");\n};\n\nconst templateTransitions = (\n  transitions: Transition[],\n  { isNested }: { isNested: boolean }\n) => {\n  return `\\\n${transitions\n  .map((t, index) => {\n    return `\n${index === 0 ? \"IF\" : \"ELSIF\"} ${templateCondition(t)} THEN\n  State:=${t.to.id};\\\n  ${isNested ? \"\\n  Entry:=TRUE;\" : \"\"}`;\n  })\n  .join(\"\\n\")}\\\n${transitions.length === 0 ? \"\" : \"\\nEND_IF\"}`;\n};\n\nconst templateGemmaGrafcetSimpleStep = (model: SimpleStep): string => {\n  return templateTransitions(model.transitions, { isNested: false });\n};\n\nconst templateFBEntry = (model: MacroStep | EnclosingStep): string => `\\\nIF Entry THEN\n  ${model.name}(Initialization:=ENTRY);\n  Entry:=FALSE;\nEND_IF\n${model.name}(Initialization:=ENTRY);`;\n\nconst templateGemmaGrafcetNestedStep = (\n  model: MacroStep | EnclosingStep\n): string => {\n  const transitions = model.transitions;\n  const _evaluateComplete = (t: Transition, index: number): boolean => {\n    const _isInner = transitions.length - model.innerTransitionsLength <= index;\n    switch (model.type) {\n      case StepType.MACRO:\n        return _isInner && !t.isNegated;\n      case StepType.ENCLOSING:\n        return _isInner && t.isNegated;\n    }\n    throw new Error(\"\");\n  };\n\n  return `\n${templateFBEntry(model)}\n\n${transitions\n  .map((t, index) => {\n    return `\\\n${index === 0 ? \"IF\" : \"ELSIF\"} ${templateCondition(t)}${\n      _evaluateComplete(t, index) ? ` AND ${model.name}.Complete` : \"\"\n    } THEN\n  State:=${t.to.id};\n  Entry:=TRUE;\n  ${model.transitions\n    .flatMap((t) =>\n      t.signalsWithMemory.map(\n        (sm) => `${sm}${memoryTransitionSuffix(t)} := FALSE;`\n      )\n    )\n    .join(\"  \\n\")}`;\n  })\n  .join(\"\\n\")}\\\n${H.textOrEmpty(transitions.length !== 0, \"\\nEND_IF\")}`;\n};\n\nexport const templateGlobals = (signals: Array<Signal>): string => {\n  return `\\\nVAR_GLOBAL\n    ${signals\n      .map(\n        (s) =>\n          `${s.name} : ${s.type.toUpperCase()}${\n            s.defaultValue.trim().length === 0 ? \"\" : \" :=\" + s.defaultValue\n          };`\n      )\n      .join(\"\\n    \")}\nEND_VAR\n`;\n};\n\nexport const templateGemmaGrafcet = (model: GemmaGrafcet): string => {\n  return `\n// Variable declaration\nVAR\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .map((s) => `  ${s.name}:${s.name}_FB;`)\n  .join(\"\\n\")}\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map((sm) => `${sm}${memoryTransitionSuffix(t)}`)\n  )\n  .map((sm) => `  ${sm}:BOOL:=FALSE;`)\n  .join(\"\\n\")}\n\n  State:UINT:=${model.initialStep?.id};\n  Entry:BOOL:=TRUE;\nEND_VAR\n\n// Program behavior\nCASE State OF\n  ${model.steps\n    .map((step) => {\n      return `\n  ${step.id}: //State ${step.name}\n    ${(() => {\n      switch (step.type) {\n        case StepType.SIMPLE:\n          return templateGemmaGrafcetSimpleStep(step);\n        case StepType.ENCLOSING:\n        case StepType.MACRO:\n          return templateGemmaGrafcetNestedStep(step);\n        default:\n          throw new Error(\"\");\n      }\n    })().replace(/\\n/g, \"\\n    \")}\n  `;\n    })\n    .join(\"\\n\")}\nEND_CASE\n\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map(\n      (sm) => `\\\nIF State = ${t.from.id} AND GVL.${sm} THEN\n  ${sm}${memoryTransitionSuffix(t)} := TRUE;\nEND_IF\n`\n    )\n  )\n  .join(\"\\n\")}\n`;\n};\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n// @ts-ignore\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\nimport { Parser } from \"antlr4ts/Parser\";\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\nimport { Token } from \"antlr4ts/Token\";\nimport { TokenStream } from \"antlr4ts/TokenStream\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\nimport { SimpleBooleanListener } from \"./SimpleBooleanListener\";\nimport { SimpleBooleanVisitor } from \"./SimpleBooleanVisitor\";\n\n\nexport class SimpleBooleanParser extends Parser {\n\tpublic static readonly AND = 1;\n\tpublic static readonly OR = 2;\n\tpublic static readonly NOT = 3;\n\tpublic static readonly TRUE = 4;\n\tpublic static readonly FALSE = 5;\n\tpublic static readonly GT = 6;\n\tpublic static readonly GE = 7;\n\tpublic static readonly LT = 8;\n\tpublic static readonly LE = 9;\n\tpublic static readonly EQ = 10;\n\tpublic static readonly LPAREN = 11;\n\tpublic static readonly RPAREN = 12;\n\tpublic static readonly DECIMAL = 13;\n\tpublic static readonly IDENTIFIER = 14;\n\tpublic static readonly WS = 15;\n\tpublic static readonly RULE_parse = 0;\n\tpublic static readonly RULE_expression = 1;\n\tpublic static readonly RULE_expressionAnd = 2;\n\tpublic static readonly RULE_expressionSimple = 3;\n\tpublic static readonly RULE_numExpression = 4;\n\tpublic static readonly RULE_comparator = 5;\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"parse\", \"expression\", \"expressionAnd\", \"expressionSimple\", \"numExpression\", \n\t\t\"comparator\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, \"'AND'\", \"'OR'\", \"'NOT'\", \"'TRUE'\", \"'FALSE'\", \"'>'\", \"'>='\", \n\t\t\"'<'\", \"'<='\", \"'='\", \"'('\", \"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \n\t\t\"EQ\", \"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleBooleanParser._LITERAL_NAMES, SimpleBooleanParser._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn SimpleBooleanParser.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"SimpleBoolean.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return SimpleBooleanParser.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return SimpleBooleanParser._serializedATN; }\n\n\tconstructor(input: TokenStream) {\n\t\tsuper(input);\n\t\tthis._interp = new ParserATNSimulator(SimpleBooleanParser._ATN, this);\n\t}\n\t// @RuleVersion(0)\n\tpublic parse(): ParseContext {\n\t\tlet _localctx: ParseContext = new ParseContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 0, SimpleBooleanParser.RULE_parse);\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 12;\n\t\t\tthis.expression();\n\t\t\tthis.state = 13;\n\t\t\tthis.match(SimpleBooleanParser.EOF);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expression(): ExpressionContext {\n\t\tlet _localctx: ExpressionContext = new ExpressionContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 2, SimpleBooleanParser.RULE_expression);\n\t\ttry {\n\t\t\tthis.state = 22;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 0, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new NotExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 15;\n\t\t\t\tthis.match(SimpleBooleanParser.NOT);\n\t\t\t\tthis.state = 16;\n\t\t\t\tthis.expression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new OrExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 17;\n\t\t\t\t(_localctx as OrExpressionContext)._left = this.expressionAnd();\n\t\t\t\tthis.state = 18;\n\t\t\t\tthis.match(SimpleBooleanParser.OR);\n\t\t\t\tthis.state = 19;\n\t\t\t\t(_localctx as OrExpressionContext)._right = this.expression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_localctx = new AndParentExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\n\t\t\t\t{\n\t\t\t\tthis.state = 21;\n\t\t\t\tthis.expressionAnd();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\tlet _localctx: ExpressionAndContext = new ExpressionAndContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 4, SimpleBooleanParser.RULE_expressionAnd);\n\t\ttry {\n\t\t\tthis.state = 29;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 1, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new AndExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 24;\n\t\t\t\t(_localctx as AndExpressionContext)._left = this.expressionSimple();\n\t\t\t\tthis.state = 25;\n\t\t\t\tthis.match(SimpleBooleanParser.AND);\n\t\t\t\tthis.state = 26;\n\t\t\t\t(_localctx as AndExpressionContext)._right = this.expressionAnd();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new SimpleExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 28;\n\t\t\t\tthis.expressionSimple();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\tlet _localctx: ExpressionSimpleContext = new ExpressionSimpleContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 6, SimpleBooleanParser.RULE_expressionSimple);\n\t\ttry {\n\t\t\tthis.state = 40;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 2, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new ComparatorExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 31;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._left = this.numExpression();\n\t\t\t\tthis.state = 32;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._op = this.comparator();\n\t\t\t\tthis.state = 33;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._right = this.numExpression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new IdentifierExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 35;\n\t\t\t\tthis.match(SimpleBooleanParser.IDENTIFIER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_localctx = new ParenExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\n\t\t\t\t{\n\t\t\t\tthis.state = 36;\n\t\t\t\tthis.match(SimpleBooleanParser.LPAREN);\n\t\t\t\tthis.state = 37;\n\t\t\t\tthis.expression();\n\t\t\t\tthis.state = 38;\n\t\t\t\tthis.match(SimpleBooleanParser.RPAREN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic numExpression(): NumExpressionContext {\n\t\tlet _localctx: NumExpressionContext = new NumExpressionContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 8, SimpleBooleanParser.RULE_numExpression);\n\t\ttry {\n\t\t\tthis.state = 44;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch (this._input.LA(1)) {\n\t\t\tcase SimpleBooleanParser.IDENTIFIER:\n\t\t\t\t_localctx = new IdentifierNumExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 42;\n\t\t\t\tthis.match(SimpleBooleanParser.IDENTIFIER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SimpleBooleanParser.DECIMAL:\n\t\t\t\t_localctx = new DecimalExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 43;\n\t\t\t\tthis.match(SimpleBooleanParser.DECIMAL);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic comparator(): ComparatorContext {\n\t\tlet _localctx: ComparatorContext = new ComparatorContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 10, SimpleBooleanParser.RULE_comparator);\n\t\tlet _la: number;\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 46;\n\t\t\t_la = this._input.LA(1);\n\t\t\tif (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << SimpleBooleanParser.GT) | (1 << SimpleBooleanParser.GE) | (1 << SimpleBooleanParser.LT) | (1 << SimpleBooleanParser.LE) | (1 << SimpleBooleanParser.EQ))) !== 0))) {\n\t\t\tthis._errHandler.recoverInline(this);\n\t\t\t} else {\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis.matchedEOF = true;\n\t\t\t\t}\n\n\t\t\t\tthis._errHandler.reportMatch(this);\n\t\t\t\tthis.consume();\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03\\x113\\x04\\x02\" +\n\t\t\"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\n\t\t\"\\t\\x07\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\" +\n\t\t\"\\x03\\x03\\x03\\x03\\x05\\x03\\x19\\n\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\" +\n\t\t\"\\x04\\x05\\x04 \\n\\x04\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\" +\n\t\t\"\\x05\\x03\\x05\\x03\\x05\\x05\\x05+\\n\\x05\\x03\\x06\\x03\\x06\\x05\\x06/\\n\\x06\\x03\" +\n\t\t\"\\x07\\x03\\x07\\x03\\x07\\x02\\x02\\x02\\b\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\\x02\" +\n\t\t\"\\f\\x02\\x02\\x03\\x03\\x02\\b\\f\\x022\\x02\\x0E\\x03\\x02\\x02\\x02\\x04\\x18\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x06\\x1F\\x03\\x02\\x02\\x02\\b*\\x03\\x02\\x02\\x02\\n.\\x03\\x02\\x02\\x02\" +\n\t\t\"\\f0\\x03\\x02\\x02\\x02\\x0E\\x0F\\x05\\x04\\x03\\x02\\x0F\\x10\\x07\\x02\\x02\\x03\\x10\" +\n\t\t\"\\x03\\x03\\x02\\x02\\x02\\x11\\x12\\x07\\x05\\x02\\x02\\x12\\x19\\x05\\x04\\x03\\x02\\x13\" +\n\t\t\"\\x14\\x05\\x06\\x04\\x02\\x14\\x15\\x07\\x04\\x02\\x02\\x15\\x16\\x05\\x04\\x03\\x02\\x16\" +\n\t\t\"\\x19\\x03\\x02\\x02\\x02\\x17\\x19\\x05\\x06\\x04\\x02\\x18\\x11\\x03\\x02\\x02\\x02\\x18\" +\n\t\t\"\\x13\\x03\\x02\\x02\\x02\\x18\\x17\\x03\\x02\\x02\\x02\\x19\\x05\\x03\\x02\\x02\\x02\\x1A\" +\n\t\t\"\\x1B\\x05\\b\\x05\\x02\\x1B\\x1C\\x07\\x03\\x02\\x02\\x1C\\x1D\\x05\\x06\\x04\\x02\\x1D\" +\n\t\t\" \\x03\\x02\\x02\\x02\\x1E \\x05\\b\\x05\\x02\\x1F\\x1A\\x03\\x02\\x02\\x02\\x1F\\x1E\\x03\" +\n\t\t\"\\x02\\x02\\x02 \\x07\\x03\\x02\\x02\\x02!\\\"\\x05\\n\\x06\\x02\\\"#\\x05\\f\\x07\\x02#$\" +\n\t\t\"\\x05\\n\\x06\\x02$+\\x03\\x02\\x02\\x02%+\\x07\\x10\\x02\\x02&\\'\\x07\\r\\x02\\x02\\'\" +\n\t\t\"(\\x05\\x04\\x03\\x02()\\x07\\x0E\\x02\\x02)+\\x03\\x02\\x02\\x02*!\\x03\\x02\\x02\\x02\" +\n\t\t\"*%\\x03\\x02\\x02\\x02*&\\x03\\x02\\x02\\x02+\\t\\x03\\x02\\x02\\x02,/\\x07\\x10\\x02\" +\n\t\t\"\\x02-/\\x07\\x0F\\x02\\x02.,\\x03\\x02\\x02\\x02.-\\x03\\x02\\x02\\x02/\\v\\x03\\x02\" +\n\t\t\"\\x02\\x0201\\t\\x02\\x02\\x021\\r\\x03\\x02\\x02\\x02\\x06\\x18\\x1F*.\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!SimpleBooleanParser.__ATN) {\n\t\t\tSimpleBooleanParser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleBooleanParser._serializedATN));\n\t\t}\n\n\t\treturn SimpleBooleanParser.__ATN;\n\t}\n\n}\n\nexport class ParseContext extends ParserRuleContext {\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tpublic EOF(): TerminalNode { return this.getToken(SimpleBooleanParser.EOF, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_parse; }\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterParse) {\n\t\t\tlistener.enterParse(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitParse) {\n\t\t\tlistener.exitParse(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitParse) {\n\t\t\treturn visitor.visitParse(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expression; }\n\tpublic copyFrom(ctx: ExpressionContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class NotExpressionContext extends ExpressionContext {\n\tpublic NOT(): TerminalNode { return this.getToken(SimpleBooleanParser.NOT, 0); }\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterNotExpression) {\n\t\t\tlistener.enterNotExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitNotExpression) {\n\t\t\tlistener.exitNotExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitNotExpression) {\n\t\t\treturn visitor.visitNotExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class OrExpressionContext extends ExpressionContext {\n\tpublic _left: ExpressionAndContext;\n\tpublic _right: ExpressionContext;\n\tpublic OR(): TerminalNode { return this.getToken(SimpleBooleanParser.OR, 0); }\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterOrExpression) {\n\t\t\tlistener.enterOrExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitOrExpression) {\n\t\t\tlistener.exitOrExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitOrExpression) {\n\t\t\treturn visitor.visitOrExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class AndParentExpressionContext extends ExpressionContext {\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterAndParentExpression) {\n\t\t\tlistener.enterAndParentExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitAndParentExpression) {\n\t\t\tlistener.exitAndParentExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitAndParentExpression) {\n\t\t\treturn visitor.visitAndParentExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionAndContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expressionAnd; }\n\tpublic copyFrom(ctx: ExpressionAndContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class AndExpressionContext extends ExpressionAndContext {\n\tpublic _left: ExpressionSimpleContext;\n\tpublic _right: ExpressionAndContext;\n\tpublic AND(): TerminalNode { return this.getToken(SimpleBooleanParser.AND, 0); }\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\treturn this.getRuleContext(0, ExpressionSimpleContext);\n\t}\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tconstructor(ctx: ExpressionAndContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterAndExpression) {\n\t\t\tlistener.enterAndExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitAndExpression) {\n\t\t\tlistener.exitAndExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitAndExpression) {\n\t\t\treturn visitor.visitAndExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class SimpleExpressionContext extends ExpressionAndContext {\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\treturn this.getRuleContext(0, ExpressionSimpleContext);\n\t}\n\tconstructor(ctx: ExpressionAndContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterSimpleExpression) {\n\t\t\tlistener.enterSimpleExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitSimpleExpression) {\n\t\t\tlistener.exitSimpleExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitSimpleExpression) {\n\t\t\treturn visitor.visitSimpleExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionSimpleContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expressionSimple; }\n\tpublic copyFrom(ctx: ExpressionSimpleContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class ComparatorExpressionContext extends ExpressionSimpleContext {\n\tpublic _left: NumExpressionContext;\n\tpublic _op: ComparatorContext;\n\tpublic _right: NumExpressionContext;\n\tpublic numExpression(): NumExpressionContext[];\n\tpublic numExpression(i: number): NumExpressionContext;\n\tpublic numExpression(i?: number): NumExpressionContext | NumExpressionContext[] {\n\t\tif (i === undefined) {\n\t\t\treturn this.getRuleContexts(NumExpressionContext);\n\t\t} else {\n\t\t\treturn this.getRuleContext(i, NumExpressionContext);\n\t\t}\n\t}\n\tpublic comparator(): ComparatorContext {\n\t\treturn this.getRuleContext(0, ComparatorContext);\n\t}\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterComparatorExpression) {\n\t\t\tlistener.enterComparatorExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitComparatorExpression) {\n\t\t\tlistener.exitComparatorExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitComparatorExpression) {\n\t\t\treturn visitor.visitComparatorExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class IdentifierExpressionContext extends ExpressionSimpleContext {\n\tpublic IDENTIFIER(): TerminalNode { return this.getToken(SimpleBooleanParser.IDENTIFIER, 0); }\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterIdentifierExpression) {\n\t\t\tlistener.enterIdentifierExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitIdentifierExpression) {\n\t\t\tlistener.exitIdentifierExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitIdentifierExpression) {\n\t\t\treturn visitor.visitIdentifierExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class ParenExpressionContext extends ExpressionSimpleContext {\n\tpublic LPAREN(): TerminalNode { return this.getToken(SimpleBooleanParser.LPAREN, 0); }\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tpublic RPAREN(): TerminalNode { return this.getToken(SimpleBooleanParser.RPAREN, 0); }\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterParenExpression) {\n\t\t\tlistener.enterParenExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitParenExpression) {\n\t\t\tlistener.exitParenExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitParenExpression) {\n\t\t\treturn visitor.visitParenExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class NumExpressionContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_numExpression; }\n\tpublic copyFrom(ctx: NumExpressionContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class IdentifierNumExpressionContext extends NumExpressionContext {\n\tpublic IDENTIFIER(): TerminalNode { return this.getToken(SimpleBooleanParser.IDENTIFIER, 0); }\n\tconstructor(ctx: NumExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterIdentifierNumExpression) {\n\t\t\tlistener.enterIdentifierNumExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitIdentifierNumExpression) {\n\t\t\tlistener.exitIdentifierNumExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitIdentifierNumExpression) {\n\t\t\treturn visitor.visitIdentifierNumExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class DecimalExpressionContext extends NumExpressionContext {\n\tpublic DECIMAL(): TerminalNode { return this.getToken(SimpleBooleanParser.DECIMAL, 0); }\n\tconstructor(ctx: NumExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterDecimalExpression) {\n\t\t\tlistener.enterDecimalExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitDecimalExpression) {\n\t\t\tlistener.exitDecimalExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitDecimalExpression) {\n\t\t\treturn visitor.visitDecimalExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ComparatorContext extends ParserRuleContext {\n\tpublic GT(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.GT, 0); }\n\tpublic GE(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.GE, 0); }\n\tpublic LT(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.LT, 0); }\n\tpublic LE(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.LE, 0); }\n\tpublic EQ(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.EQ, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_comparator; }\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterComparator) {\n\t\t\tlistener.enterComparator(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitComparator) {\n\t\t\tlistener.exitComparator(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitComparator) {\n\t\t\treturn visitor.visitComparator(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { CharStream } from \"antlr4ts/CharStream\";\nimport { Lexer } from \"antlr4ts/Lexer\";\nimport { LexerATNSimulator } from \"antlr4ts/atn/LexerATNSimulator\";\nimport { NotNull } from \"antlr4ts/Decorators\";\nimport { Override } from \"antlr4ts/Decorators\";\nimport { RuleContext } from \"antlr4ts/RuleContext\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\n\nexport class SimpleBooleanLexer extends Lexer {\n\tpublic static readonly AND = 1;\n\tpublic static readonly OR = 2;\n\tpublic static readonly NOT = 3;\n\tpublic static readonly TRUE = 4;\n\tpublic static readonly FALSE = 5;\n\tpublic static readonly GT = 6;\n\tpublic static readonly GE = 7;\n\tpublic static readonly LT = 8;\n\tpublic static readonly LE = 9;\n\tpublic static readonly EQ = 10;\n\tpublic static readonly LPAREN = 11;\n\tpublic static readonly RPAREN = 12;\n\tpublic static readonly DECIMAL = 13;\n\tpublic static readonly IDENTIFIER = 14;\n\tpublic static readonly WS = 15;\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly channelNames: string[] = [\n\t\t\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\n\t];\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly modeNames: string[] = [\n\t\t\"DEFAULT_MODE\",\n\t];\n\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \"EQ\", \"LPAREN\", \n\t\t\"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, \"'AND'\", \"'OR'\", \"'NOT'\", \"'TRUE'\", \"'FALSE'\", \"'>'\", \"'>='\", \n\t\t\"'<'\", \"'<='\", \"'='\", \"'('\", \"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \n\t\t\"EQ\", \"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleBooleanLexer._LITERAL_NAMES, SimpleBooleanLexer._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn SimpleBooleanLexer.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\n\tconstructor(input: CharStream) {\n\t\tsuper(input);\n\t\tthis._interp = new LexerATNSimulator(SimpleBooleanLexer._ATN, this);\n\t}\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"SimpleBoolean.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return SimpleBooleanLexer.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return SimpleBooleanLexer._serializedATN; }\n\n\t// @Override\n\tpublic get channelNames(): string[] { return SimpleBooleanLexer.channelNames; }\n\n\t// @Override\n\tpublic get modeNames(): string[] { return SimpleBooleanLexer.modeNames; }\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02\\x11e\\b\\x01\\x04\" +\n\t\t\"\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\" +\n\t\t\"\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\" +\n\t\t\"\\x04\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x03\\x02\\x03\\x02\\x03\\x02\\x03\" +\n\t\t\"\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x05\\x03\" +\n\t\t\"\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\" +\n\t\t\"\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\n\\x03\\n\\x03\\n\\x03\" +\n\t\t\"\\v\\x03\\v\\x03\\f\\x03\\f\\x03\\r\\x03\\r\\x03\\x0E\\x05\\x0EI\\n\\x0E\\x03\\x0E\\x06\\x0E\" +\n\t\t\"L\\n\\x0E\\r\\x0E\\x0E\\x0EM\\x03\\x0E\\x03\\x0E\\x06\\x0ER\\n\\x0E\\r\\x0E\\x0E\\x0ES\\x05\" +\n\t\t\"\\x0EV\\n\\x0E\\x03\\x0F\\x03\\x0F\\x07\\x0FZ\\n\\x0F\\f\\x0F\\x0E\\x0F]\\v\\x0F\\x03\\x10\" +\n\t\t\"\\x06\\x10`\\n\\x10\\r\\x10\\x0E\\x10a\\x03\\x10\\x03\\x10\\x02\\x02\\x02\\x11\\x03\\x02\" +\n\t\t\"\\x03\\x05\\x02\\x04\\x07\\x02\\x05\\t\\x02\\x06\\v\\x02\\x07\\r\\x02\\b\\x0F\\x02\\t\\x11\" +\n\t\t\"\\x02\\n\\x13\\x02\\v\\x15\\x02\\f\\x17\\x02\\r\\x19\\x02\\x0E\\x1B\\x02\\x0F\\x1D\\x02\\x10\" +\n\t\t\"\\x1F\\x02\\x11\\x03\\x02\\x06\\x03\\x022;\\x05\\x02C\\\\aac|\\x06\\x022;C\\\\aac|\\x05\" +\n\t\t\"\\x02\\v\\f\\x0E\\x0F\\\"\\\"\\x02j\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02\\x07\\x03\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\r\\x03\\x02\\x02\\x02\\x02\\x0F\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x13\\x03\\x02\\x02\\x02\\x02\\x15\\x03\\x02\\x02\\x02\\x02\\x17\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x19\\x03\\x02\\x02\\x02\\x02\\x1B\\x03\\x02\\x02\\x02\\x02\\x1D\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x1F\\x03\\x02\\x02\\x02\\x03!\\x03\\x02\\x02\\x02\\x05%\\x03\\x02\\x02\\x02\\x07\" +\n\t\t\"(\\x03\\x02\\x02\\x02\\t,\\x03\\x02\\x02\\x02\\v1\\x03\\x02\\x02\\x02\\r7\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x0F9\\x03\\x02\\x02\\x02\\x11<\\x03\\x02\\x02\\x02\\x13>\\x03\\x02\\x02\\x02\\x15\" +\n\t\t\"A\\x03\\x02\\x02\\x02\\x17C\\x03\\x02\\x02\\x02\\x19E\\x03\\x02\\x02\\x02\\x1BH\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x1DW\\x03\\x02\\x02\\x02\\x1F_\\x03\\x02\\x02\\x02!\\\"\\x07C\\x02\\x02\\\"#\" +\n\t\t\"\\x07P\\x02\\x02#$\\x07F\\x02\\x02$\\x04\\x03\\x02\\x02\\x02%&\\x07Q\\x02\\x02&\\'\\x07\" +\n\t\t\"T\\x02\\x02\\'\\x06\\x03\\x02\\x02\\x02()\\x07P\\x02\\x02)*\\x07Q\\x02\\x02*+\\x07V\\x02\" +\n\t\t\"\\x02+\\b\\x03\\x02\\x02\\x02,-\\x07V\\x02\\x02-.\\x07T\\x02\\x02./\\x07W\\x02\\x02/\" +\n\t\t\"0\\x07G\\x02\\x020\\n\\x03\\x02\\x02\\x0212\\x07H\\x02\\x0223\\x07C\\x02\\x0234\\x07\" +\n\t\t\"N\\x02\\x0245\\x07U\\x02\\x0256\\x07G\\x02\\x026\\f\\x03\\x02\\x02\\x0278\\x07@\\x02\" +\n\t\t\"\\x028\\x0E\\x03\\x02\\x02\\x029:\\x07@\\x02\\x02:;\\x07?\\x02\\x02;\\x10\\x03\\x02\\x02\" +\n\t\t\"\\x02<=\\x07>\\x02\\x02=\\x12\\x03\\x02\\x02\\x02>?\\x07>\\x02\\x02?@\\x07?\\x02\\x02\" +\n\t\t\"@\\x14\\x03\\x02\\x02\\x02AB\\x07?\\x02\\x02B\\x16\\x03\\x02\\x02\\x02CD\\x07*\\x02\\x02\" +\n\t\t\"D\\x18\\x03\\x02\\x02\\x02EF\\x07+\\x02\\x02F\\x1A\\x03\\x02\\x02\\x02GI\\x07/\\x02\\x02\" +\n\t\t\"HG\\x03\\x02\\x02\\x02HI\\x03\\x02\\x02\\x02IK\\x03\\x02\\x02\\x02JL\\t\\x02\\x02\\x02\" +\n\t\t\"KJ\\x03\\x02\\x02\\x02LM\\x03\\x02\\x02\\x02MK\\x03\\x02\\x02\\x02MN\\x03\\x02\\x02\\x02\" +\n\t\t\"NU\\x03\\x02\\x02\\x02OQ\\x070\\x02\\x02PR\\t\\x02\\x02\\x02QP\\x03\\x02\\x02\\x02RS\" +\n\t\t\"\\x03\\x02\\x02\\x02SQ\\x03\\x02\\x02\\x02ST\\x03\\x02\\x02\\x02TV\\x03\\x02\\x02\\x02\" +\n\t\t\"UO\\x03\\x02\\x02\\x02UV\\x03\\x02\\x02\\x02V\\x1C\\x03\\x02\\x02\\x02W[\\t\\x03\\x02\" +\n\t\t\"\\x02XZ\\t\\x04\\x02\\x02YX\\x03\\x02\\x02\\x02Z]\\x03\\x02\\x02\\x02[Y\\x03\\x02\\x02\" +\n\t\t\"\\x02[\\\\\\x03\\x02\\x02\\x02\\\\\\x1E\\x03\\x02\\x02\\x02][\\x03\\x02\\x02\\x02^`\\t\\x05\" +\n\t\t\"\\x02\\x02_^\\x03\\x02\\x02\\x02`a\\x03\\x02\\x02\\x02a_\\x03\\x02\\x02\\x02ab\\x03\\x02\" +\n\t\t\"\\x02\\x02bc\\x03\\x02\\x02\\x02cd\\b\\x10\\x02\\x02d \\x03\\x02\\x02\\x02\\t\\x02HMS\" +\n\t\t\"U[a\\x03\\b\\x02\\x02\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!SimpleBooleanLexer.__ATN) {\n\t\t\tSimpleBooleanLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleBooleanLexer._serializedATN));\n\t\t}\n\n\t\treturn SimpleBooleanLexer.__ATN;\n\t}\n\n}\n\n","import { CharStreams, CommonTokenStream } from \"antlr4ts\";\nimport { SimpleBooleanLexer } from \"../grammar/SimpleBooleanLexer\";\nimport {\n  ExpressionContext,\n  IdentifierExpressionContext,\n  IdentifierNumExpressionContext,\n  SimpleBooleanParser,\n} from \"../grammar/SimpleBooleanParser\";\nimport { SimpleBooleanVisitor } from \"../grammar/SimpleBooleanVisitor\";\nimport { AbstractParseTreeVisitor } from \"antlr4ts/tree/AbstractParseTreeVisitor\";\nimport { ErrorNode } from \"antlr4ts/tree/ErrorNode\";\nimport { ParseTree } from \"antlr4ts/tree/ParseTree\";\n\n// Extend the AbstractParseTreeVisitor to get default visitor behaviour\nclass ErrorVisitor\n  extends AbstractParseTreeVisitor<string[]>\n  implements SimpleBooleanVisitor<string[]> {\n  isInvalid: boolean = false;\n  boolSignals: Array<IdentifierExpressionContext> = [];\n\n  constructor(public signals: { numSignals: string[]; boolSignals: string[] }) {\n    super();\n  }\n\n  defaultResult() {\n    return [];\n  }\n\n  aggregateResult(aggregate: string[], nextResult: string[]) {\n    return aggregate.concat(nextResult);\n  }\n\n  visitErrorNode(node: ErrorNode): string[] {\n    if (this.isInvalid) {\n      return [];\n    }\n    this.isInvalid = true;\n    return [\"Invalid boolean expression\"];\n  }\n\n  visitIdentifierExpression(n: IdentifierExpressionContext): string[] {\n    const valid = this.signals.boolSignals.includes(n.text);\n    this.boolSignals.push(n);\n    return valid ? [] : [`'${n.text}' is not a defined boolean signal`];\n  }\n\n  visitIdentifierNumExpression(n: IdentifierNumExpressionContext): string[] {\n    const valid = this.signals.numSignals.includes(n.text);\n    return valid ? [] : [`'${n.text}' is not a defined numeric signal`];\n  }\n\n  visitExpression(n: ExpressionContext): string[] {\n    if (n.exception !== undefined && !this.isInvalid) {\n      this.isInvalid = true;\n      return [\"Invalid boolean expression\"];\n    }\n    return [];\n  }\n}\n\nexport type ParsedOutput = {\n  tree: ExpressionContext;\n  errors: string[];\n  boolSignals: Array<IdentifierExpressionContext>;\n};\n\nexport const parseBoolExpression = (\n  text: string,\n  signals: { numSignals: string[]; boolSignals: string[] }\n): ParsedOutput => {\n  // Create the lexer and parser\n  let inputStream = CharStreams.fromString(text);\n  let lexer = new SimpleBooleanLexer(inputStream);\n  let tokenStream = new CommonTokenStream(lexer);\n  let parser = new SimpleBooleanParser(tokenStream);\n\n  // Parse the input, where `compilationUnit` is whatever entry point you defined\n\n  let tree = parser.parse();\n\n  // Create the visitor\n  const countFunctionsVisitor = new ErrorVisitor(signals);\n  // Use the visitor entry point\n  const errors = countFunctionsVisitor.visit(tree);\n\n  if (tree.exception !== undefined) {\n    countFunctionsVisitor.isInvalid = true;\n    errors.push(\"Invalid boolean expression\");\n  }\n\n  let toProcess: ParseTree[] | undefined = [...tree.children];\n  if (toProcess !== undefined && !countFunctionsVisitor.isInvalid) {\n    while (toProcess.length !== 0) {\n      const curr: ParseTree | undefined = toProcess.pop()!;\n      if (curr instanceof ExpressionContext && curr.exception !== undefined) {\n        errors.push(\"Invalid boolean expression\");\n        break;\n      } else if (curr.childCount > 0) {\n        toProcess = toProcess.concat(\n          [...Array(curr.childCount).keys()].map((i) => curr.getChild(i))\n        );\n      }\n    }\n  }\n  return { tree, errors, boolSignals: countFunctionsVisitor.boolSignals };\n};\n","import { Checkbox } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { action, computed, observable, ObservableSet } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useRef } from \"react\";\nimport { JsonType } from \"../canvas/store\";\nimport { FieldSpec, StrFieldSpec } from \"../fields\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport {\n  AndExpressionContext,\n  AndParentExpressionContext,\n  IdentifierExpressionContext,\n  NotExpressionContext,\n  OrExpressionContext,\n  SimpleExpressionContext,\n} from \"../grammar/SimpleBooleanParser\";\nimport { ConnModel } from \"../node/node-model\";\nimport { PropertiesTable } from \"../properties/properties-table\";\nimport { parseBoolExpression, ParsedOutput } from \"./antlr_parser\";\nimport { CustomToken, getCustomTokens, VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { Step, StepType } from \"./step\";\n\ntype GemmaConn = ConnModel<Step, GemmaGrafcet, Transition>;\n\nexport class Transition {\n  @observable\n  conditionExpression: string;\n  @observable\n  priority: number;\n  @observable\n  isNegated: boolean;\n  @observable\n  savedSignalsWithMemory: ObservableSet<string> = new ObservableSet();\n  @computed\n  get priorityChoices() {\n    return [...Array(this.connection.from.outputs.length)].map(\n      (_, i) => \"\" + (i + 1)\n    );\n  }\n\n  errors = observable.map<string, string>();\n\n  spec: { [key: string]: FieldSpec } = {\n    conditionExpression: new StrFieldSpec({ default: \"\" }),\n  };\n\n  constructor(\n    public connection: GemmaConn,\n    d?: {\n      conditionExpression?: string;\n      priority?: number;\n      isNegated?: boolean;\n    }\n  ) {\n    this.conditionExpression = d?.conditionExpression ?? \"\";\n    this.priority = d?.priority ?? connection.from.outputs.length + 1;\n    this.isNegated = d?.isNegated ?? false;\n  }\n\n  @action.bound\n  setPriority = (v: string): void => {\n    const priority = parseInt(v);\n    if (this.priority === priority) {\n      return;\n    }\n    const transitions = this.connection.from.outputs;\n    if (this.priority > priority) {\n      transitions\n        .filter(\n          (t) => t.data.priority >= priority && t.data.priority < this.priority\n        )\n        .forEach((t) => t.data.priority++);\n    } else {\n      transitions\n        .filter(\n          (t) => t.data.priority <= priority && t.data.priority > this.priority\n        )\n        .forEach((t) => t.data.priority--);\n    }\n    this.priority = priority;\n  };\n\n  get from(): Step {\n    return this.connection.from.data;\n  }\n\n  get to(): Step {\n    return this.connection.to.data;\n  }\n\n  @computed\n  get connectionText(): { text: string; style?: React.CSSProperties }[] {\n    const cond = this.conditionExpression.substring(0, 20);\n    const hasNegation =\n      this.isNegated &&\n      (this.from.type === StepType.MACRO ||\n        this.from.type === StepType.ENCLOSING);\n    const showPriority =\n      hasNegation ||\n      (this.from.type !== StepType.CONTAINER &&\n        this.connection.from.outputs.length > 1);\n\n    return [\n      {\n        text: showPriority ? `${this.priority}: ` : \"\",\n        style: { textDecoration: hasNegation ? \"overline\" : undefined },\n      },\n      { text: ` ${cond}${this.conditionExpression.length > 20 ? \"...\" : \"\"}` },\n    ];\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      conditionExpression: this.conditionExpression,\n      priority: this.priority,\n      isNegated: this.isNegated,\n    };\n  }\n\n  @computed\n  get expressionTokens(): [CustomToken, number][] {\n    return getCustomTokens(this.conditionExpression);\n  }\n\n  @computed\n  get parsedExpression(): ParsedOutput | undefined {\n    const gemma = this.connection.graph.globalData;\n    try {\n      const output = parseBoolExpression(this.conditionExpression, {\n        boolSignals: gemma.boolSignals.map((s) => s.name),\n        numSignals: gemma.numSignals.map((s) => s.name),\n      });\n      console.log(output.boolSignals);\n      return output;\n    } catch (e) {}\n    return undefined;\n  }\n\n  @computed\n  get signalsInCondition(): Array<string> {\n    if (this.parsedExpression !== undefined) {\n      return this.parsedExpression.boolSignals.map((s) => s.text);\n    }\n    return [\n      ...this.expressionTokens\n        .map(([token, _]) => token)\n        .filter(\n          (token) =>\n            token instanceof VarId &&\n            this.from.automationSystem.signals.some(\n              (s) => s.name === token.toString()\n            )\n        )\n        .reduce((set, token) => {\n          set.add(token.toString());\n          return set;\n        }, new Set<string>())\n        .values(),\n    ];\n  }\n\n  @computed\n  get signalsInConditionWithDefault(): Array<[string, boolean]> | undefined {\n    return this.parsedExpression?.boolSignals.map((s) => {\n      if (s.parent === undefined) {\n      }\n      return [s.text, false];\n    });\n  }\n\n  evaluateSignal = (s: IdentifierExpressionContext): boolean => {\n    let result = false;\n    let topOfNot = false;\n    let topOfAnd = false;\n\n    let parent = s.parent;\n    while (parent !== undefined) {\n      if (parent instanceof AndParentExpressionContext) {\n        topOfAnd = !topOfAnd;\n      } else if (parent instanceof NotExpressionContext) {\n        topOfNot = !topOfNot;\n      } else if (parent instanceof OrExpressionContext) {\n      } else if (parent instanceof SimpleExpressionContext) {\n      } else if (parent instanceof AndExpressionContext) {\n      }\n      parent = parent.parent;\n    }\n    return result;\n  };\n\n  @computed\n  get signalsWithMemory() {\n    return this.signalsInCondition.filter((s) =>\n      this.savedSignalsWithMemory.has(s)\n    );\n  }\n\n  ConnectionView = observer(() => {\n    return (\n      <>\n        <PropertiesTable key=\"table\">\n          <tr key=\"priority\">\n            <td>Priority</td>\n            <td>\n              <ChoiceField\n                keys={this.priorityChoices}\n                value={\"\" + this.priority}\n                setValue={this.setPriority}\n              />\n            </td>\n          </tr>\n          <tr key=\"condition\">\n            <td>Condition</td>\n            <td>{<ConditionInput m={this} />}</td>\n          </tr>\n          {(this.from.type === StepType.MACRO ||\n            this.from.type === StepType.ENCLOSING) && (\n            <tr key=\"isNegated\">\n              <td>Negated</td>\n              <td>\n                {\n                  <Switch\n                    checked={this.isNegated}\n                    onChange={() => {\n                      this.isNegated = !this.isNegated;\n                    }}\n                    color=\"primary\"\n                  />\n                }\n              </td>\n            </tr>\n          )}\n        </PropertiesTable>\n        <div className=\"row\">\n          <div style={{ flex: 1 }}>\n            <h4 style={{ margin: \"0\" }}>Errors</h4>\n            {this.parsedExpression?.errors.length === 0 && \"No errors\"}\n            <ul\n              style={{\n                color: \"indianred\",\n                marginTop: \"0\",\n                paddingLeft: \"20px\",\n              }}\n              key=\"errors\"\n            >\n              {this.parsedExpression?.errors.map((err, index) => (\n                <li key={index}>{err}</li>\n              ))}\n            </ul>\n          </div>\n          {((this.from.type === StepType.MACRO && !this.isNegated) ||\n            (this.from.type === StepType.ENCLOSING && this.isNegated)) && (\n            <>\n              <div style={{ width: \"10px\" }} />\n              <div style={{ flex: 1 }}>\n                <h4 key=\"title\" style={{ margin: \"0\" }}>\n                  With Memory\n                </h4>\n                {this.signalsInCondition.length === 0 &&\n                  \"No signals in transition\"}\n                {this.signalsInCondition.map((token) => {\n                  const withMemory = this.savedSignalsWithMemory.has(token);\n                  const MemCheckbox = observer(() => (\n                    <div className=\"row\" style={{ alignItems: \"center\" }}>\n                      <div>\n                        <Checkbox\n                          checked={withMemory}\n                          size=\"small\"\n                          color=\"primary\"\n                          onChange={() => {\n                            if (withMemory) {\n                              this.savedSignalsWithMemory.delete(token);\n                            } else {\n                              this.savedSignalsWithMemory.add(token);\n                            }\n                          }}\n                        />\n                      </div>\n                      <div style={{ flex: 1 }}>{token}</div>\n                    </div>\n                  ));\n                  return <MemCheckbox key={token} />;\n                })}\n              </div>\n            </>\n          )}\n        </div>\n      </>\n    );\n  });\n}\n\nconst ConditionInput = observer(\n  ({\n    m,\n  }: {\n    m: {\n      conditionExpression: string;\n      expressionTokens: [CustomToken, number][];\n    };\n  }) => {\n    let prevIndex = 0;\n    let _spanStyleRef = useRef<HTMLSpanElement>(null);\n    const font = \"400 15px monospace\";\n\n    return (\n      <div style={{ width: \"206px\", position: \"relative\" }} className=\"center\">\n        <span\n          style={{\n            font,\n            position: \"absolute\",\n            top: 0,\n            padding: \"3px\",\n            textAlign: \"initial\",\n            whiteSpace: \"pre-line\",\n          }}\n          ref={_spanStyleRef}\n        >\n          {m.expressionTokens.map(([c, textIndex], index) => {\n            let color: string;\n            if (c instanceof VarId) {\n              color = \"black\";\n            } else if ([\"AND\", \"NOT\", \"OR\"].includes(c)) {\n              color = \"blue\";\n            } else {\n              color = \"brown\";\n            }\n            const whiteSpace = textIndex - prevIndex;\n            const text = \" \".repeat(whiteSpace) + c.toString();\n            prevIndex = textIndex + c.toString().length;\n            return (\n              <span key={index} style={{ color }}>\n                {text}\n              </span>\n            );\n          })}\n        </span>\n        <textarea\n          onScroll={(s) => {\n            _spanStyleRef.current!.scrollTo(0, s.currentTarget.scrollTop);\n          }}\n          className=\"multiline-input\"\n          style={{\n            font,\n            background: \"transparent\",\n            color: \"transparent\",\n            caretColor: \"black\",\n            position: \"relative\",\n          }}\n          spellCheck={false}\n          value={m.conditionExpression}\n          onChange={(e) => {\n            const value = e.currentTarget.value;\n            if (value.match(/^\\s$/) === null) {\n              m.conditionExpression = value.replace(/\\s[^\\S\\r\\n]/g, \" \");\n            }\n          }}\n        ></textarea>\n      </div>\n    );\n  }\n);\n","\nexport abstract class SourceItem {\n  constructor(public name: string) {}\n\n  when(f: {file: (f: SourceFile) => void, dir: (f: SourceDirectory) => void}) {\n    if (this instanceof SourceFile) {\n      f.file(this)\n    } else if (this instanceof SourceDirectory) {\n      f.dir(this)\n    }\n  }\n}\n\nexport class SourceFile extends SourceItem {\n  constructor(name: string, public content: string) {\n    super(name);\n  }\n}\n\nexport class SourceDirectory extends SourceItem {\n  constructor(name: string, public items: SourceItem[]) {\n    super(name);\n  }\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Draggable, { DraggableData, DraggableEvent } from \"react-draggable\";\nimport styled from \"styled-components\";\nimport { NodeModel } from \"./node-model\";\nimport { useStore } from \"../App\";\n\nexport type Shape = (number | undefined)[];\n\nconst StyledNode = styled.div`\n  z-index: 1;\n  cursor: pointer;\n  position: absolute;\n  box-shadow: 0 1px 4px 1px #eee;\n  background: #fff;\n  border-radius: 6;\n  border: 1.5px solid;\n`;\n\ntype NodeViewProps = { node: NodeModel<any, any, any> };\nexport const NodeView: React.FC<NodeViewProps> = observer((params) => {\n  const { node, children } = params;\n  const rootStore = useStore();\n  const onDrag = React.useCallback(\n    (_: DraggableEvent, data: DraggableData) => {\n      node.move(data.deltaX, data.deltaY);\n    },\n    [node]\n  );\n  const selectingInput = rootStore.selectingInputFor !== undefined;\n  const isValidInput =\n    selectingInput && rootStore.selectingInputFor!.data.isValidInput(node);\n  const isSelected = rootStore.selectedNode === node;\n\n  const onClick = React.useCallback(\n    (_: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      console.log(node);\n      if (selectingInput) {\n        if (isValidInput) {\n          rootStore.assignInput(node);\n        }\n      } else {\n        rootStore.selectNode(node);\n      }\n    },\n    [rootStore, node, selectingInput, isValidInput]\n  );\n\n  if (node.isHidden && !rootStore.showHidden) {\n    return <></>;\n  }\n  // const [_, setDivRef] = React.useState<HTMLDivElement | null>(null);\n  const { x, y } = node;\n\n  let style: React.CSSProperties = {};\n  if (isSelected) {\n    style[\"boxShadow\"] = \"rgb(110 110 110) 1px 1.5px 3px 1px\";\n  }\n  if (selectingInput) {\n    style[\"cursor\"] = isValidInput ? \"pointer\" : \"not-allowed\";\n  }\n  if (node.isHidden) {\n    style[\"opacity\"] = 0.1;\n  }\n\n  return (\n    <Draggable\n      onDrag={onDrag}\n      position={{\n        // TODO: improve x, y with support for nested children\n        x: x - (node.data.parent?.x ?? 0),\n        y: y - (node.data.parent?.y ?? 0),\n      }}\n      bounds=\"parent\"\n    >\n      <StyledNode\n        ref={(e) => {\n          if (e === null) return;\n          node.setElement(e);\n        }}\n        onClick={onClick}\n        style={style}\n      >\n        <node.data.View children={children} />\n      </StyledNode>\n    </Draggable>\n  );\n});\n","import { JsonType } from \"../canvas/store\";\nimport { action, computed, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { GemmaGrafcet } from \"./gemma\";\n\nenum SignalTypeBase {\n  bool = \"bool\",\n  int = \"int\",\n  uint = \"uint\",\n  real = \"real\",\n}\n\nexport enum SignalType {\n  bool = \"bool\",\n\n  sint = \"sint\",\n  int = \"int\",\n  lint = \"lint\",\n  dint = \"dint\",\n\n  usint = \"usint\",\n  uint = \"uint\",\n  ulint = \"ulint\",\n  udint = \"udint\",\n\n  real = \"real\",\n  lreal = \"lreal\",\n}\n\nenum SignalTypeSize {\n  s = \"s\",\n  i = \"i\",\n  l = \"l\",\n  d = \"d\",\n}\n\nconst signalTypeToPrimitives = (\n  type?: SignalType\n): { base: SignalTypeBase; size: SignalTypeSize } | undefined => {\n  if (type === undefined) {\n    return undefined;\n  }\n  switch (type) {\n    case SignalType.bool:\n      return { base: SignalTypeBase.bool, size: SignalTypeSize.i };\n    case SignalType.real:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.i };\n    case SignalType.lreal:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.l };\n  }\n  let base: SignalTypeBase;\n  let index: number;\n  if (type.startsWith(\"u\")) {\n    base = SignalTypeBase.uint;\n    index = 1;\n  } else {\n    base = SignalTypeBase.int;\n    index = 0;\n  }\n\n  const size = type.charAt(index) as SignalTypeSize;\n\n  if (!Object.keys(SignalTypeSize).includes(size)) {\n    return undefined;\n  }\n\n  return { base, size };\n};\n\nconst signalSizeMap: { [key in SignalTypeBase]: SignalTypeSize[] } = {\n  [SignalType.bool]: [SignalTypeSize.i],\n  [SignalType.int]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.uint]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.real]: [SignalTypeSize.i, SignalTypeSize.l],\n};\n\nexport const SignalRow = observer(\n  ({\n    signal: s,\n    showDelete,\n    removeSignal,\n  }: {\n    signal: Signal;\n    showDelete: boolean;\n    removeSignal: (s: Signal) => void;\n  }) => {\n    return (\n      <TableRow>\n        <TableCell>\n          <Tooltip\n            title={s.errors[\"Name\"] !== undefined ? s.errors[\"Name\"] : \"\"}\n          >\n            <TextField\n              type=\"text\"\n              value={s.name}\n              onChange={(e) => (s.name = e.target.value)}\n              style={{ width: \"145px\" }}\n              error={s.errors[\"Name\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={Object.keys(SignalTypeBase)}\n            setValue={(v) => s.setTypeBase(v as any)}\n            value={s.typeBase}\n          />\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={signalSizeMap[s.typeBase]}\n            setValue={(v) => (s.typeSize = v as any)}\n            value={s.typeSize}\n            maxButton={0}\n          />\n        </TableCell>\n        <TableCell>\n          <Tooltip\n            title={\n              s.errors[\"Default Value\"] !== undefined\n                ? s.errors[\"Default Value\"]\n                : \"\"\n            }\n            open={true}\n          >\n            <TextField\n              type={s.typeBase === SignalTypeBase.bool ? \"text\" : \"number\"}\n              value={s.defaultValue}\n              onChange={(e) => {\n                s.defaultValue = e.target.value.replace(/\\s/g, \"\");\n              }}\n              style={{ width: \"70px\" }}\n              error={s.errors[\"Default Value\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        {showDelete && (\n          <TableCell align=\"center\">\n            <IconButton onClick={(_) => removeSignal(s)} size=\"small\">\n              <FontAwesomeIcon icon={\"trash-alt\"} color={\"#000\"} />\n            </IconButton>\n          </TableCell>\n        )}\n      </TableRow>\n    );\n  }\n);\n\nconst regexSignalDefaultValid = {\n  [SignalTypeBase.bool]: {\n    regex: /^(TRUE|FALSE)$/,\n    message: 'should be \"TRUE\" or \"FALSE\"',\n  },\n  [SignalTypeBase.int]: {\n    regex: /^(-?[1-9][0-9]*|0)$/,\n    message: \"should be an integer\",\n  },\n  [SignalTypeBase.uint]: {\n    regex: /^([1-9][0-9]*|0)$/,\n    message: \"should be a positive integer\",\n  },\n  [SignalTypeBase.real]: {\n    regex: /^-?[0-9]*\\.?[0-9]+$/,\n    message: \"should be a number\",\n  },\n};\n\nexport class Signal {\n  @observable\n  didBlur: boolean = false;\n\n  @observable\n  name: string;\n  @observable\n  defaultValue: string;\n  @observable\n  typeSize: SignalTypeSize;\n  @observable\n  typeBase: SignalTypeBase;\n  @computed\n  get type(): SignalType {\n    if (this.typeBase === SignalTypeBase.bool) {\n      return SignalType.bool;\n    }\n    const sizeStr = this.typeSize === SignalTypeSize.i ? \"\" : this.typeSize!;\n    if (this.typeBase.startsWith(\"u\")) {\n      return (\"u\" + sizeStr + this.typeBase.substring(1)) as SignalType;\n    } else {\n      return (sizeStr + this.typeBase) as SignalType;\n    }\n  }\n\n  @action.bound\n  setTypeBase = (base: SignalTypeBase) => {\n    this.typeBase = base;\n    if (!signalSizeMap[base].includes(this.typeSize)) {\n      this.typeSize = signalSizeMap[base][0];\n    }\n  };\n\n  @computed\n  get errors() {\n    const name =\n      this.automationSystem.signals.findIndex(\n        (s2) => s2.name === this.name && this !== s2\n      ) !== -1\n        ? \"Duplicate name\"\n        : undefined;\n\n    const validator = regexSignalDefaultValid[this.typeBase];\n    const hasError =\n      this.defaultValue.length !== 0 &&\n      !validator.regex.test(this.defaultValue);\n    const defaultValueError = hasError ? validator.message : undefined;\n\n    return { Name: name, \"Default Value\": defaultValueError };\n  }\n\n  description?: string;\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      name: this.name,\n      type: this.type,\n      defaultValue: this.defaultValue,\n    };\n  }\n\n  static fromJson(\n    automationSystem: GemmaGrafcet,\n    json: JsonType\n  ): Signal | undefined {\n    if (\n      typeof json[\"name\"] === \"string\" &&\n      Object.keys(SignalType).includes(json[\"type\"] as any)\n    ) {\n      return new Signal(automationSystem, json);\n    } else {\n      return undefined;\n    }\n  }\n\n  constructor(\n    private automationSystem: GemmaGrafcet,\n    d?: {\n      name?: string;\n      description?: string;\n      type?: SignalType;\n      defaultValue?: string;\n    }\n  ) {\n    this.name = d?.name ?? \"\";\n    this.description = d?.description;\n    const typePrim = signalTypeToPrimitives(d?.type);\n    this.typeBase = typePrim?.base ?? SignalTypeBase.bool;\n    this.typeSize = typePrim?.size ?? SignalTypeSize.i;\n    this.defaultValue = d?.defaultValue ?? \"\";\n  }\n}\n","import { templateGemmaGrafcet, templateGlobals } from \"./gemma-templates\";\nimport {\n  GlobalData,\n  RootStoreModel,\n  DataBuilder,\n  JsonType,\n  GraphWarnings,\n} from \"../canvas/store\";\nimport { computed, IObservableArray, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Transition } from \"./transition\";\nimport { Step, StepType, ProcedureType, BaseStep } from \"./step\";\nimport { NodeModel } from \"../node/node-model\";\nimport { IndexedDB } from \"../canvas/persistence\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { SourceDirectory, SourceFile } from \"../codegen/file-system\";\nimport { macroStepTemplate } from \"./macro-step\";\nimport { NodeView } from \"../node/node\";\nimport { Signal, SignalRow, SignalType } from \"./signal\";\n\nexport class GemmaGrafcet implements GlobalData<Step> {\n  constructor(\n    private graph: RootStoreModel<Step, GemmaGrafcet, Transition>,\n    json?: JsonType\n  ) {\n    let signals: Signal[] = [];\n    if (Array.isArray(json?.signals)) {\n      signals = json?.signals\n        .map((s) =>\n          typeof s === \"object\" ? Signal.fromJson(this, s) : undefined\n        )\n        .filter((s) => s !== undefined) as Signal[];\n    }\n    this.signals = observable.array<Signal>(signals);\n  }\n\n  canAddNode = (nodeType: string): boolean => {\n    return true;\n  };\n\n  initState(): void {\n    const nodes = [...this.graph.nodes.values()];\n    const _selected = nodes.find(\n      (n) => n.data.type !== StepType.CONTAINER && !n.isHidden\n    );\n    if (_selected !== undefined) {\n      this.graph.selectNode(_selected);\n    }\n    const _selectedTrans = nodes\n      .flatMap((n) => n.inputs)\n      .find((t) => !t.isHidden);\n    if (_selectedTrans !== undefined) {\n      this.graph.selectConnection(_selectedTrans);\n    }\n\n    this.fFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.F\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 600, y: 0 })!;\n    this.fFamily.setName(\"F family\");\n    this.fFamily.data.family = ProcedureType.F;\n\n    this.aFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.A\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 0 })!;\n    this.aFamily.setName(\"A family\");\n    this.aFamily.data.family = ProcedureType.A;\n\n    this.dFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.D\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 500 })!;\n    this.dFamily.setName(\"D family\");\n    this.dFamily.data.family = ProcedureType.D;\n  }\n\n  fFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  aFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  dFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n\n  @computed\n  get steps(): Step[] {\n    return [...this.graph.nodes.values()]\n      .filter((node) => !node.isHidden && node.data.type !== StepType.CONTAINER)\n      .sort((a, b) => a.data.id - b.data.id)\n      .map((node) => node.data);\n  }\n\n  readonly signals: IObservableArray<Signal>;\n\n  @computed\n  get numSignals(): Signal[] {\n    return this.signals.filter((s) => s.type !== SignalType.bool);\n  }\n\n  @computed\n  get boolSignals(): Signal[] {\n    return this.signals.filter((s) => s.type === SignalType.bool);\n  }\n\n  @computed\n  get initialStep(): Step | undefined {\n    return this.steps.find((s) => s.isInitial);\n  }\n\n  @computed\n  get generateMainFile(): string {\n    return templateGemmaGrafcet(this);\n  }\n\n  @computed\n  get generateSourceCode(): SourceDirectory {\n    const main = templateGemmaGrafcet(this);\n    const globals = templateGlobals(this.signals);\n    const files = [\n      new SourceFile(\"GEMMA.txt\", main),\n      new SourceFile(\"GVL.txt\", globals),\n    ];\n\n    for (const s of this.steps.values()) {\n      // if (s.type === StepType.ENCLOSING) {\n      //   files.push(\n      //     new SourceFile(s.name + \"_FB.txt\", enclosingStepTemplate(s))\n      //   );\n      // } else\n      if (s.type === StepType.ENCLOSING || s.type === StepType.MACRO) {\n        files.push(new SourceFile(s.name + \"_FB.txt\", macroStepTemplate(s)));\n      }\n    }\n\n    return new SourceDirectory(\"gemma_grafcet\", files);\n  }\n\n  @computed\n  get warnings(): GraphWarnings {\n    const signalsErrors = [];\n    for (const s of this.signals) {\n      if (!!s.errors.Name) {\n        signalsErrors.push(`${s.name}. Name: ${s.errors[\"Name\"]}.`);\n      }\n      if (!!s.errors[\"Default Value\"]) {\n        signalsErrors.push(\n          `${s.name}. Default value: ${s.errors[\"Default Value\"]}.`\n        );\n      }\n    }\n\n    const hasInitialStep = this.steps.some((s) => s.isInitial);\n    const stepsWithNoInputTransitions = this.steps.filter(\n      (s) => !s.node.inputs.some((n) => !n.isHidden)\n    );\n    const stepsWithNoOutputTransitions = this.steps.filter(\n      (s) => !s.node.outputs.some((n) => !n.isHidden)\n    );\n    const stepsErrors = [];\n    if (!hasInitialStep) {\n      stepsErrors.push(\"No initial step.\");\n    }\n    if (stepsWithNoOutputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no output transitions: ${stepsWithNoOutputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n    if (stepsWithNoInputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no input transitions: ${stepsWithNoInputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n\n    const transitionErrors = this.steps\n      .flatMap((s) => s.transitions)\n      .filter(\n        (t) =>\n          t.parsedExpression?.errors !== undefined &&\n          t.parsedExpression?.errors.length > 0\n      )\n      .map((t) => [\n        `${t.from.name} -> ${t.to.name}`,\n        t.parsedExpression?.errors,\n      ]);\n\n    return {\n      Steps: stepsErrors,\n      Transitions: transitionErrors as any,\n      Signals: signalsErrors,\n    };\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      signals: this.signals.map((s) => s.toJson),\n    };\n  }\n\n  View = observer(() => {\n    const [showDelete, setShowDelete] = useState(false);\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h3 style={{ margin: \"5px 0 10px 5px\" }}>Signals</h3>\n          <Button onClick={(_) => setShowDelete(!showDelete)}>\n            {showDelete ? \"Hide Delete\" : \"Show Delete\"}\n            <FontAwesomeIcon\n              style={{ paddingLeft: \"7px\" }}\n              icon={\"trash-alt\"}\n              color={\"#000\"}\n            />\n          </Button>\n        </div>\n        <Table\n          id=\"signals-table\"\n          size=\"small\"\n          aria-label=\"a dense table\"\n          stickyHeader={true}\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Size</TableCell>\n              <TableCell>Default</TableCell>\n              {showDelete && <TableCell>Delete</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.signals.map((s, index) => (\n              <SignalRow\n                signal={s}\n                key={index}\n                showDelete={showDelete}\n                removeSignal={(s) => this.signals.remove(s)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n        <Button\n          style={{ alignSelf: \"flex-end\" }}\n          onClick={(_) => this.signals.push(new Signal(this))}\n        >\n          Add Signal\n        </Button>\n      </div>\n    );\n  });\n\n  CanvasView = observer(() => {\n    const nodes = [...this.graph.nodes.values()];\n    const _nodesFromFamily = (family: ProcedureType) => {\n      return nodes\n        .filter(\n          (n) => n.data.family === family && n.data.type !== StepType.CONTAINER\n        )\n        .map((n) => {\n          return <NodeView node={n} key={n.key} />;\n        });\n    };\n\n    const _color = {\n      [ProcedureType.A]: { color: \"#ecf5ff\", size: { w: 600, h: 500 } },\n      [ProcedureType.D]: { color: \"#ffd6d6\", size: { w: 600, h: 500 } },\n      [ProcedureType.F]: { color: \"#ebffec\", size: { w: 600, h: 1000 } },\n    };\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}>\n        {nodes\n          .filter((n) => n.data.type === StepType.CONTAINER)\n          .map((n) => {\n            const _d = _color[n.data.family]!;\n            return (\n              <div\n                style={{\n                  background: _d.color,\n                  width: _d.size.w,\n                  height: _d.size.h,\n                  position: \"absolute\",\n                  top: n.y,\n                  left: n.x,\n                }}\n                key={n.key}\n                ref={(e) => {\n                  if (e === null) return;\n                  n.setSize(e.getBoundingClientRect());\n                }}\n              >\n                {_nodesFromFamily(n.data.family)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  });\n}\n\nexport const gemmaBuilders: DataBuilder<Step, GemmaGrafcet, Transition> = {\n  graphBuilder: (g, json) => new GemmaGrafcet(g, json),\n  nodeBuilder: (n, json) => {\n    console.log(json);\n    const type = json !== undefined ? json[\"type\"] : undefined;\n    if (typeof type === \"string\" && Object.keys(StepType).includes(type)) {\n      return new BaseStep(n, json);\n    }\n\n    return new BaseStep(n);\n  },\n  connectionBuilder: (c, json) => new Transition(c, json),\n};\n\nexport const make5NodesGraph = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n  });\n\n  const s1 = rootStore.addNode(StepType.SIMPLE, { x: 72, y: 60 });\n  if (s1 !== undefined) {\n    s1.data.isInitial = true;\n  }\n  const s2 = rootStore.addNode(StepType.MACRO, { x: 261, y: 170 });\n\n  [\n    s1,\n    s2,\n    rootStore.addNode(StepType.ENCLOSING, { x: 441, y: 316 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 211, y: 410 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 441, y: 500 }),\n  ].forEach((s, index) => s?.setName(`S${index + 1}`));\n\n  s1!.data.family = ProcedureType.A;\n  s2!.data.family = ProcedureType.D;\n  rootStore.selectNode(s1!);\n\n  rootStore.selectingInput(s1!);\n  const conn = rootStore.assignInput(s2!);\n\n  rootStore.selectConnection(conn);\n  rootStore.globalData.signals.push(\n    new Signal(rootStore.globalData, { name: \"\" })\n  );\n  return rootStore;\n};\n\nexport const makeBaseGemmaTemplate = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n    hideOnDelete: true,\n  });\n\n  const nodesRaw: {\n    [key in ProcedureType]: {\n      [key: string]: { type: StepType; x: number; y: number };\n    };\n  } = {\n    [ProcedureType.A]: {\n      A1: { type: StepType.SIMPLE, x: 517, y: 142 },\n      A2: { type: StepType.SIMPLE, x: 240, y: 417 },\n      A3: { type: StepType.SIMPLE, x: 418, y: 406 },\n      A4: { type: StepType.SIMPLE, x: 479, y: 314 },\n      A5: { type: StepType.MACRO, x: 86, y: 325 },\n      A6: { type: StepType.SIMPLE, x: 156, y: 31 },\n      A7: { type: StepType.MACRO, x: 239, y: 176 },\n    },\n    [ProcedureType.F]: {\n      F1: { type: StepType.MACRO, x: 743, y: 709 },\n      F2: { type: StepType.MACRO, x: 966, y: 683 },\n      F3: { type: StepType.MACRO, x: 704, y: 171 },\n      F4: { type: StepType.ENCLOSING, x: 848, y: 29 },\n      F5: { type: StepType.ENCLOSING, x: 979, y: 478 },\n      F6: { type: StepType.ENCLOSING, x: 729, y: 876 },\n    },\n    [ProcedureType.D]: {\n      D1: { type: StepType.MACRO, x: 75, y: 895 },\n      D2: { type: StepType.SIMPLE, x: 221, y: 573 },\n      D3: { type: StepType.ENCLOSING, x: 309, y: 735 },\n    },\n  };\n\n  const nodes: {\n    [key: string]: NodeModel<Step, GemmaGrafcet, Transition>;\n  } = {};\n\n  for (const [family, nn] of Object.entries(nodesRaw)) {\n    for (const [k, v] of Object.entries(nn)) {\n      const n = rootStore.addNode(v.type, { x: v.x, y: v.y });\n      n?.setName(k);\n      n!.data.family = family as ProcedureType;\n      nodes[k] = n!;\n      if (k === \"A6\") {\n        n!.data.isInitial = true;\n      }\n    }\n  }\n\n  const connections = {\n    A1: [\"F2\", \"F1\", \"F5\", \"F4\"],\n    A2: [\"A1\"],\n    A3: [\"A4\"],\n    A4: [\"F1\"],\n    A5: [\"A6\", \"A7\"],\n    A6: [\"A1\"],\n    A7: [\"A4\"],\n    F1: [\"F3\", \"F4\", \"F5\", \"F6\", \"A2\", \"A3\", \"D1\", \"D2\", \"D3\"],\n    F2: [\"F1\"],\n    F3: [\"A1\"],\n    F4: [\"A6\"],\n    F5: [\"F1\", \"F4\"],\n    F6: [\"F1\", \"D1\"],\n    D1: [\"D2\", \"A5\"],\n    D2: [\"A5\"],\n    D3: [\"A2\", \"A3\"],\n  };\n\n  for (const [from, v] of Object.entries(connections)) {\n    for (const to of v) {\n      rootStore.addConnection(nodes[from], nodes[to]);\n    }\n  }\n\n  rootStore.addConnection(rootStore.globalData.fFamily!, nodes[\"D1\"]!, {\n    conditionExpression: \"I1 AND I2\",\n  });\n\n  const a1 = nodes[\"A1\"]!;\n  rootStore.selectNode(a1);\n  rootStore.selectConnection(a1.outputs[0]);\n\n  return rootStore;\n};\n","import { MacroStep, EnclosingStep } from \"./step\";\n\nexport const macroStepTemplate = (model: MacroStep | EnclosingStep) =>\n  `\\\nFUNCTION_BLOCK ${model.name}_FB\n\n// Variable declaration\nVAR_INPUT\n  Initialization:BOOL;\nEND_VAR\n\nVAR_OUTPUT\n  Complete:BOOL;\nEND_VAR\n\n// FB behavior\nIF Initialization THEN\n  Complete:=FALSE;\n  //Initialization actions\n\nEND_IF\n\n//Nested behavior\n\n//Termination of the nested behavior\nComplete:=TRUE;\n`;\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, { useCallback, useState } from \"react\";\nimport { MainCanvas } from \"./canvas/canvas\";\nimport { ConfigView } from \"./canvas/config-view\";\nimport { createIndexedDB, IndexedDB } from \"./canvas/persistence\";\nimport { RootStoreModel, GlobalData, GraphWarnings } from \"./canvas/store\";\nimport { NodeData, ConnectionData } from \"./node/node-model\";\nimport { PropertiesView } from \"./properties/properties-view\";\nimport { gemmaBuilders, makeBaseGemmaTemplate } from \"./step/gemma\";\nimport { importJson } from \"./utils\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const storeContext = React.createContext<RootStoreModel<\n  any,\n  any,\n  any\n> | null>(null);\n\nexport function useStore<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>() {\n  const store = React.useContext<RootStoreModel<D, G, C> | null>(storeContext);\n  if (!store) {\n    throw Error(\"useStore should be used inside a Store provider.\");\n  }\n  return store;\n}\n\ntype RootStore = RootStoreModel<any, any, any>;\n\nexport function App() {\n  const [globalDB, setDB] = React.useState<IndexedDB | null>(null);\n  const [store, setStore] = React.useState<RootStore | null>(null);\n  const _isReset = store && store.resetStore;\n  React.useEffect(() => {\n    if (!store) {\n      createIndexedDB().then(async (db) => {\n        setDB(db);\n        const graphs = await db.fetchGraphs();\n\n        let _store: RootStore;\n        const graph = graphs[0];\n        if (graph !== undefined) {\n          const graphExt = await db.loadGraph(graph.key);\n          _store = new RootStoreModel({\n            db,\n            json: { graph, ...graphExt },\n            hideOnDelete: true,\n            builders: gemmaBuilders,\n          });\n        } else {\n          _store = makeBaseGemmaTemplate(db);\n        }\n\n        (window as any).store = _store;\n        setStore(_store);\n      });\n    } else if (store.resetStore) {\n      setStore(null);\n    }\n  }, [store, _isReset]);\n\n  if (!store) {\n    return <div className=\"center\">Loading...</div>;\n  }\n\n  return (\n    <storeContext.Provider value={store}>\n      <div\n        className=\"row\"\n        style={{ background: \"rgba(250,250,250,0.7)\", height: \"100%\" }}\n      >\n        {/* <div className=\"col\">\n          <MainMenu items={Object.keys(rootStore.builders.nodeBuilder)} />\n        </div> */}\n        <div\n          className=\"col\"\n          style={{\n            width: \"0px\",\n            background: \"rgba(250,250,250,0.7)\",\n            flex: \"1 0 auto\",\n          }}\n        >\n          <div className=\"row\" style={{ minHeight: 0, flex: 1 }}>\n            <div className=\"col\" style={{ flex: 1 }}>\n              <TopMenu store={store} globalDB={globalDB!} setStore={setStore} />\n              <MainCanvas />\n            </div>\n            <ConfigView />\n          </div>\n          <PropertiesView />\n        </div>\n      </div>\n    </storeContext.Provider>\n  );\n}\n\nconst ToggleShowHidden = observer(({ store }: { store: RootStore }) => (\n  <Button\n    onClick={(_) => {\n      store.showHidden = !store.showHidden;\n    }}\n  >\n    {store.showHidden ? \"Hide Deleted\" : \"Show Deleted\"}\n  </Button>\n));\n\nfunction TopMenu<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>({\n  store,\n  setStore,\n  globalDB,\n}: {\n  store: RootStoreModel<D, G, C>;\n  globalDB: IndexedDB;\n  setStore: (store: RootStore) => void;\n}) {\n  const [isResetDialogOpen, setIsResetDialogOpen] = useState(false);\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState(false);\n  const toggleDialog = useCallback(() => {\n    setIsResetDialogOpen(!isResetDialogOpen);\n  }, [isResetDialogOpen]);\n\n  return (\n    <div\n      className=\"row\"\n      style={{\n        justifyContent: \"space-between\",\n        borderBottom: \"rgb(221 220 220) solid 1.5px\",\n      }}\n    >\n      <ToggleShowHidden store={store} />\n      <div\n        className=\"row\"\n        style={{\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          onClick={(_) => {\n            store.saveModel();\n          }}\n        >\n          Save\n        </Button>\n        <Button onClick={toggleDialog}>Reset</Button>\n        <Dialog\n          open={isResetDialogOpen}\n          onClose={toggleDialog}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            Reset Diagram State\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Are you sure you want to reset the diagram state? All changes will\n              be lost.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={toggleDialog} color=\"primary\">\n              Close\n            </Button>\n            <Button\n              onClick={async (_) => {\n                const _store = makeBaseGemmaTemplate(globalDB);\n                setStore(_store);\n                toggleDialog();\n              }}\n              color=\"primary\"\n            >\n              Reset Diagram\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button\n          onClick={(_) => {\n            const hasWarnings = Object.values(store.globalData.warnings).some(\n              (v) => v.length > 0\n            );\n            if (hasWarnings) {\n              setIsWarningsDialogOpen(true);\n            } else {\n              store.downloadModel();\n            }\n          }}\n        >\n          Export\n        </Button>\n        <WarningsDialog\n          open={isWarningsDialogOpen}\n          toggleDialog={() => setIsWarningsDialogOpen(!isWarningsDialogOpen)}\n          warnings={store.globalData.warnings}\n          accept={store.downloadModel}\n        />\n        <Button>\n          <label\n            htmlFor=\"import-file-input\"\n            style={{ margin: 0, width: \"100%\", cursor: \"pointer\" }}\n          >\n            Import\n          </label>\n          <input\n            type=\"file\"\n            id=\"import-file-input\"\n            accept=\"application/json\"\n            style={{ display: \"none\" }}\n            onChange={async (e) => {\n              const json = await importJson(e);\n              if (typeof json === \"string\") {\n                try {\n                  const val = JSON.parse(json);\n                  const _store = new RootStoreModel({\n                    db: globalDB,\n                    json: val,\n                    builders: gemmaBuilders,\n                    hideOnDelete: true,\n                  });\n                  setStore(_store);\n                } catch (e) {\n                  console.log(e);\n                }\n              }\n            }}\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport const WarningsDialog = ({\n  open,\n  toggleDialog,\n  warnings,\n  accept,\n}: {\n  open: boolean;\n  toggleDialog: () => void;\n  warnings: GraphWarnings;\n  accept: () => void;\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">Download Diagram</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          There are some warnings in the diagram configuration. Do you want to\n          continue with the download?\n        </DialogContentText>\n        {Object.entries(warnings).map(([title, warnings]) => {\n          if (warnings.length === 0) {\n            return <></>;\n          }\n          return (\n            <div key={title} className=\"warning-list\">\n              <h3>{title}</h3>\n              <ul>\n                {warnings[0].length === 2 && Array.isArray(warnings[0][1]) ? (\n                  <>\n                    {(warnings as [string, string[]][]).map(\n                      ([sectionTitle, warnings], index) => (\n                        <>\n                          <h5 key={sectionTitle}>{sectionTitle}</h5>\n                          {warnings.map((w, index) => (\n                            <li key={`${sectionTitle}${index}`}>{w}</li>\n                          ))}\n                        </>\n                      )\n                    )}\n                  </>\n                ) : (\n                  <>\n                    {(warnings as string[]).map((w, index) => (\n                      <li key={index}>{w}</li>\n                    ))}\n                  </>\n                )}\n              </ul>\n            </div>\n          );\n        })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleDialog} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={accept} color=\"primary\">\n          Continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlibrary.add(faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}