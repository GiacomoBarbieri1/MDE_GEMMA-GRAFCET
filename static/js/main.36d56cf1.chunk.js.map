{"version":3,"sources":["canvas/arrow.tsx","fields/choice-field.tsx","utils.ts","step/step.tsx","fields/primitive-field.tsx","node/custom-node.tsx","canvas/canvas.tsx","canvas/persistence.ts","canvas/config-view.tsx","node/node-model.tsx","canvas/store.tsx","properties/properties-table.tsx","properties/properties-view.tsx","step/custom_parser.ts","step/gemma-templates.ts","grammar/SimpleBooleanLexer.ts","grammar/SimpleBooleanParser.ts","step/signal.tsx","step/antlr_parser.ts","step/transition.tsx","codegen/file-system.ts","node/node.tsx","step/gemma.tsx","step/macro-step.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["triangleFromCenter","x","y","height","width","y0","ArrowView","observer","connection","rootStore","useStore","isHidden","showHidden","from","to","isSelected","connectionStartPosition","data","undefined","b","top","bottom","left","right","getStartPositionConnection","x1","y1","x2","y2","addInnerPoint","event","index","innerPoints","splice","canvasScrollBbox","document","getElementsByClassName","getBoundingClientRect","clientX","clientY","getRelative","points","map","p","push","cx","cy","r","fill","key","onClick","_","graph","selectedConnection","selectedPointIndex","lineAndPoint","style","strokeWidth","stroke","opacity","d","shiftKey","selectConnection","changeX","changeY","dy","dx","m","Math","abs","deltaX","deltaY","xa","ya","xm","ym","degrees","atan2","PI","RectAndText","texts","connectionText","rectFill","transform","padding","React","useState","textRefs","setTextRefs","curr","reduce","c","text","prev","setPrev","fullbbox","getBBox","max","useEffect","id","setTimeout","clearTimeout","xPrev","cursor","t","bbox","ref","e","nn","ButtonsDiv","styled","div","ChoiceFieldSpec","v","choices","default","onChange","isObservableMap","keys","size","Symbol","toStringTag","mobxProp","types","optional","string","plotField","name","model","Array","Object","value","setValue","this","get","Error","ChoiceField","maxButton","length","Select","target","autoWidth","minHeight","marginBottom","disabled","k","MenuItem","ButtonGroup","color","aria-label","buttonStyle","background","Button","defaultResizeEnable","topRight","bottomRight","bottomLeft","topLeft","resizableEnable","f","entries","downloadToClient","content","fileName","contentType","a","createElement","file","Blob","type","href","URL","createObjectURL","download","click","importJson","files","Promise","resolve","window","alert","reader","FileReader","onload","result","onabort","onerror","readAsText","StepType","ProcedureType","StrFieldSpec","maxLength","minLength","multiline","errors","set","delete","className","TextField","fullWidth","margin","inputProps","textAlign","error","BoolFieldSpec","required","boolean","Switch","checked","BaseStep","node","l","nInputs","Number","POSITIVE_INFINITY","observable","CONTAINER","spec","isInitial","SIMPLE","values","filter","toString","View","children","_color","A","D","F","position","border","family","flex","innerStyle","wrapper","nodeHeight","ENCLOSING","display","MACRO","borderTop","borderBottom","borderRight","borderLeft","description","reaction","otherInitial","automationSystem","steps","find","s","n","inputNodes","every","aFamily","dFamily","fFamily","globalData","outputs","sort","priority","_transitions","transitions","concat","delta","parseInt","computed","EnclosingDecoration","customPortFactory","cb","initialConfig","AbstractModelFactory","config","CustomPortModel","PortModelAlignment","LEFT","alignment","DefaultLinkModel","PortModel","CustomNodeFactory","CustomNode","engine","CustomNodeModel","AbstractReactFactory","step","addPort","TOP","BOTTOM","RIGHT","NodeModel","Ports","port","getPort","Port","S","DefaultPortModel","DBStores","MainCanvas","ops","nodes","useMemo","createEngine","registerDefaultZoomCanvasAction","registerDefaultDeleteItemsAction","getLinkFactories","registerFactory","RightAngleLinkFactory","getPortFactories","getNodeFactories","DiagramModel","node1","setPosition","node2","DefaultNodeModel","port2","node3","port3","node4","port4","pathfinding","getFactory","PathFindingLinkFactory","NAME","link1","link","addLabel","DefaultLabelModel","label","link2","addAll","setModel","console","log","overflow","outline","tabIndex","onMouseMove","getElementById","focus","onKeyUp","CanvasView","flatMap","op","inputs","ConfigView","isWarningsDialogOpen","setIsWarningsDialogOpen","connections","forEach","Map","orderedOps","counts","withDependencies","numProcessed","slice","outs","dep","minWidth","defaultSize","boxShadow","enable","warnings","some","downloadSourceCode","open","toggleDialog","accept","generateMainFile","openDB","upgrade","db","createObjectStore","keyPath","autoIncrement","createIndex","IndexedDB","getKeyFromConnection","conn","connectionWithKey","graphKey","assign","getAll","put","tx","transaction","objectStore","dbKey","openCursor","continue","done","all","getAllFromIndex","_g","store","add","path","updateMany","close","clear","items","val","item","ConnModel","dataBuilder","json","toJson","array","resizeObserver","element","setElement","setSize","disconnect","ResizeObserver","observe","action","rect","RootStoreModel","builders","hideOnDelete","saveModel","clearDB","updateGraph","addNodes","addConnections","downloadModel","JSON","stringify","_addToZip","root","dir","newRoot","folder","when","zip","JSZip","sourceCode","generateSourceCode","generateAsync","graphBuilder","v4","nodeBuilder","addConnection","selectedNode","next","_n","initState","addEventListener","mouseMoveEvent","nodeType","pos","canAddNode","_in","remove","_out","selectingInputFor","_selectingInputKeyListener","connectionBuilder","addOutput","removeEventListener","ev","PropertiesTable","PropertiesTableStyled","PropertiesTableNode","self","alignItems","variant","table","PropertiesView","inner","maxHeight","maxWidth","justifyContent","backgroundColor","IconButton","activateNode","removeNode","icon","activateConnection","removeConnection","ConnectionView","VarId","H","textOrEmpty","cond","memoryTransitionSuffix","templateCondition","expressionTokens","tok","savedSignalsWithMemory","has","join","templateGemmaGrafcetSimpleStep","isNested","templateTransitions","templateGemmaGrafcetNestedStep","signalsWithMemory","sm","behaviour","templateFBEntry","condition","_isInner","innerTransitionsLength","isNegated","_evaluateComplete","templateGemmaGrafcet","initialStep","replace","prefix","SimpleBooleanLexer","input","_interp","LexerATNSimulator","_ATN","VOCABULARY","ruleNames","_serializedATN","channelNames","modeNames","__ATN","ATNDeserializer","deserialize","Utils","Lexer","AND","OR","NOT","TRUE","FALSE","GT","GE","LT","LE","EQ","LPAREN","RPAREN","DECIMAL","IDENTIFIER","WS","_LITERAL_NAMES","_SYMBOLIC_NAMES","VocabularyImpl","SimpleBooleanParser","ParserATNSimulator","_localctx","ParseContext","_ctx","state","enterRule","RULE_parse","enterOuterAlt","expression","match","EOF","re","RecognitionException","exception","_errHandler","reportError","recover","exitRule","ExpressionContext","RULE_expression","sync","interpreter","adaptivePredict","_input","NotExpressionContext","OrExpressionContext","_left","expressionAnd","_right","AndParentExpressionContext","ExpressionAndContext","RULE_expressionAnd","AndExpressionContext","expressionSimple","SimpleExpressionContext","ExpressionSimpleContext","RULE_expressionSimple","ComparatorExpressionContext","numExpression","_op","comparator","IdentifierExpressionContext","ParenExpressionContext","NumExpressionContext","RULE_numExpression","LA","IdentifierNumExpressionContext","DecimalExpressionContext","NoViableAltException","_la","ComparatorContext","RULE_comparator","recoverInline","Token","matchedEOF","reportMatch","consume","Parser","SignalTypeBase","SignalType","SignalTypeSize","parent","invokingState","getRuleContext","getToken","listener","enterParse","exitParse","visitor","visitParse","visitChildren","ParserRuleContext","ctx","copyFrom","enterNotExpression","exitNotExpression","visitNotExpression","enterOrExpression","exitOrExpression","visitOrExpression","enterAndParentExpression","exitAndParentExpression","visitAndParentExpression","enterAndExpression","exitAndExpression","visitAndExpression","enterSimpleExpression","exitSimpleExpression","visitSimpleExpression","i","getRuleContexts","enterComparatorExpression","exitComparatorExpression","visitComparatorExpression","enterIdentifierExpression","exitIdentifierExpression","visitIdentifierExpression","enterParenExpression","exitParenExpression","visitParenExpression","enterIdentifierNumExpression","exitIdentifierNumExpression","visitIdentifierNumExpression","enterDecimalExpression","exitDecimalExpression","visitDecimalExpression","tryGetToken","enterComparator","exitComparator","visitComparator","ErrorVisitor","signals","isInvalid","boolSignals","aggregate","nextResult","valid","includes","numSignals","AbstractParseTreeVisitor","signalSizeMap","bool","int","uint","real","SignalRow","signal","showDelete","removeSignal","TableRow","TableCell","Tooltip","title","setTypeBase","typeBase","typeSize","defaultValue","align","regexSignalDefaultValid","regex","message","Signal","bound","typePrim","base","lreal","startsWith","charAt","signalTypeToPrimitives","sizeStr","substring","findIndex","s2","validator","Name","test","Transition","conditionExpression","priorityChoices","setPriority","ConditionInput","parsedExpression","marginTop","paddingLeft","err","signalsInCondition","token","MemCheckbox","ObservableMap","hasNegation","textDecoration","_jsonSignals","omit","addSignal","prevToken","strPrev","getCustomTokens","gemma","inputStream","CharStreams","fromString","lexer","tokenStream","CommonTokenStream","tree","parse","countFunctionsVisitor","visit","toProcess","pop","childCount","getChild","parseBoolExpression","_signals","Set","withMemory","_update","Checkbox","paddingRight","prevIndex","_spanStyleRef","useRef","font","whiteSpace","textIndex","repeat","onScroll","current","scrollTo","currentTarget","scrollTop","caretColor","spellCheck","SourceItem","SourceFile","SourceDirectory","StyledNode","NodeView","params","onDrag","useCallback","move","selectingInput","isValidInput","assignInput","selectNode","bounds","GemmaGrafcet","setShowDelete","flexDirection","Table","stickyHeader","TableHead","TableBody","alignSelf","w","h","_d","isArray","fromJson","_selected","_selectedTrans","addNode","setName","main","globals","trim","toUpperCase","signalsErrors","hasInitialStep","stepsWithNoInputTransitions","stepsWithNoOutputTransitions","stepsErrors","Steps","Transitions","Signals","gemmaBuilders","g","makeBaseGemmaTemplate","nodesRaw","A1","A2","A3","A4","A5","A6","A7","F1","F2","F3","F4","F5","F6","D1","D2","D3","a1","storeContext","createContext","useContext","App","globalDB","setDB","setStore","_isReset","resetStore","createIndexedDB","then","fetchGraphs","graphs","loadGraph","graphExt","_store","Provider","TopMenu","ToggleShowHidden","isResetDialogOpen","setIsResetDialogOpen","Dialog","onClose","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","htmlFor","WarningsDialog","sectionTitle","Boolean","location","hostname","library","faChevronDown","faChevronUp","faTrashAlt","faEye","faEyeSlash","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.36d56cf1.chunk.js","sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { NodeModel, ConnModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\n\nexport type ArrowModel = {\n  from: NodeModel<any, any, any>;\n  to: NodeModel<any, any, any>;\n};\n\ntype ArrowViewProps = { connection: ConnModel<any, any, any> };\n\nconst triangleFromCenter = (\n  x: number,\n  y: number,\n  height: number = 14,\n  width: number = 14\n) => {\n  const y0 = y + height;\n  return `M${x} ${y} L${x - width / 2} ${y0} L${x + width / 2} ${y0} Z`;\n};\n\nconst getStartPositionConnection = (\n  from: NodeModel<any, any, any>\n): { x: number; y: number } => {\n  const connectionStartPosition = (from.data as NodeData<any, any, any>)\n    .connectionStartPosition;\n\n  if (connectionStartPosition !== undefined) {\n    const b = connectionStartPosition();\n    if (b !== undefined) {\n      let x = from.x;\n      let y = from.y;\n      if (\"top\" in b) {\n        y += b.top;\n      } else {\n        y += from.height - b.bottom;\n      }\n\n      if (\"left\" in b) {\n        x += b.left;\n      } else {\n        y += from.width - b.right;\n      }\n      return { x, y };\n    }\n  }\n  return { x: from.x + from.width / 2, y: from.y + from.height / 2 };\n};\n\nexport const ArrowView: React.FC<ArrowViewProps> = observer(\n  ({ connection }: ArrowViewProps) => {\n    const rootStore = useStore();\n\n    if (connection.isHidden && !rootStore.showHidden) {\n      return <></>;\n    }\n    const { from, to, isSelected } = connection;\n    let { x: x1, y: y1 } = getStartPositionConnection(from);\n\n    const [x2, y2] = [to.x + to.width / 2, to.y + to.height / 2];\n\n    const getRelative = (event: {\n      clientX: number;\n      clientY: number;\n    }): { x: number; y: number } => {\n      const canvasScrollBbox = document\n        .getElementsByClassName(\"canvas-wrapper\")[0]!\n        .getBoundingClientRect();\n      return {\n        x: event.clientX - canvasScrollBbox.left,\n        y: event.clientY - canvasScrollBbox.top,\n      };\n    };\n\n    const addInnerPoint = (\n      event: { clientX: number; clientY: number },\n      index: number\n    ) => {\n      connection.innerPoints.splice(index, 0, getRelative(event));\n    };\n\n    const points: JSX.Element[] = [];\n\n    return (\n      <>\n        <>\n          {connection.innerPoints.map((p, index) => {\n            points.push(\n              <circle\n                cx={p.x}\n                cy={p.y}\n                r=\"7\"\n                fill=\"RoyalBlue\"\n                key={`${connection.from.key}${connection.to.key}${index}`}\n                // onMouseDown={(_) => {\n                //   connection.graph.selectedConnection = connection;\n                //   connection.graph.selectedPointIndex = index;\n                // }}\n                onClick={(_) => {\n                  connection.graph.selectedConnection = connection;\n                  if (connection.graph.selectedPointIndex !== undefined) {\n                    connection.graph.selectedPointIndex = undefined;\n                  } else {\n                    connection.graph.selectedPointIndex = index;\n                  }\n                }}\n              />\n            );\n\n            const lineAndPoint = (\n              <path\n                key={`${connection.from.key}${connection.to.key}${\n                  index - 1\n                }${index}`}\n                style={{\n                  strokeWidth: 3,\n                  stroke: \"black\",\n                  opacity: connection.isHidden ? 0.07 : 1,\n                }}\n                d={`M${x1} ${y1} L${p.x} ${p.y}`}\n                onClick={(event) => {\n                  if (event.shiftKey) {\n                    addInnerPoint(event, index);\n                  } else {\n                    rootStore.selectConnection(connection);\n                  }\n                }}\n              />\n            );\n            x1 = p.x;\n            y1 = p.y;\n            return lineAndPoint;\n          })}\n        </>\n        <path\n          style={{\n            strokeWidth: 3,\n            stroke: \"black\",\n            opacity: connection.isHidden ? 0.07 : 1,\n          }}\n          d={`M${x1} ${y1} L${x2} ${y2}`}\n          onClick={(event) => {\n            if (event.shiftKey) {\n              addInnerPoint(event, 0);\n            } else {\n              rootStore.selectConnection(connection);\n            }\n          }}\n        />\n        {points}\n        {!connection.isHidden &&\n          (() => {\n            const dy = y2 - y1;\n            const dx = x2 - x1;\n\n            let changeX;\n            let changeY;\n            if (dx === 0) {\n              changeX = 0;\n              changeY = ((y2 > y1 ? 1 : -1) * to.height) / 2;\n            } else if (dy === 0) {\n              changeY = 0;\n              changeX = ((x2 > x1 ? 1 : -1) * to.width) / 2;\n            } else {\n              const m = Math.abs(dy / dx);\n              const [deltaX, deltaY] =\n                m > to.height / to.width\n                  ? [to.height / 2 / m, to.height / 2]\n                  : [to.width / 2, (to.width / 2) * m];\n              changeY = (y2 > y1 ? 1 : -1) * deltaY;\n              changeX = (x2 > x1 ? 1 : -1) * deltaX;\n            }\n            const xa = x2 - changeX;\n            const ya = y2 - changeY;\n\n            const [xm, ym] = [(x1 + x2) / 2, (y1 + y2) / 2];\n            const degrees = 90 + (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI;\n            return (\n              <>\n                <RectAndText\n                  connection={connection}\n                  texts={connection.data.connectionText}\n                  x={xm}\n                  rectFill={isSelected ? \"#eeedff\" : \"#eee\"}\n                  y={ym}\n                  onClick={(_) => rootStore.selectConnection(connection)}\n                />\n                <path\n                  d={triangleFromCenter(xa, ya)}\n                  transform={`rotate(${degrees} ${xa} ${ya})`}\n                />\n              </>\n            );\n          })()}\n      </>\n    );\n  }\n);\n\nconst RectAndText: React.FC<{\n  texts: { text: string; style?: React.CSSProperties }[];\n  connection: ConnModel<any, any, any>;\n  x: number;\n  y: number;\n  rectFill?: string;\n  padding?: number;\n  onClick: (event: React.MouseEvent<any, MouseEvent>) => void;\n}> = observer(\n  ({\n    texts,\n    x: xm,\n    y: ym,\n    rectFill = \"#eee\",\n    padding = 3,\n    onClick,\n    connection,\n  }) => {\n    const [textRefs, setTextRefs] = React.useState<SVGTextElement[]>([]);\n    const curr = texts.reduce((p, c) => p + c.text, \"\");\n    const [prev, setPrev] = React.useState(curr);\n    const fullbbox = textRefs.reduce(\n      (p, c) => {\n        if (c === undefined) {\n          return p;\n        }\n        const b = c.getBBox();\n\n        return {\n          width: p.width + b.width,\n          height: Math.max(p.height, b.height),\n        };\n      },\n      { width: 0, height: 0 }\n    );\n    React.useEffect(() => {\n      if (prev !== curr) {\n        const id = setTimeout(() => setPrev(curr), 0);\n        return () => clearTimeout(id);\n      }\n    });\n    let xPrev = 0;\n    return (\n      <>\n        <rect\n          width={fullbbox.width + padding * 2}\n          height={fullbbox.height + padding * 2}\n          x={xm - fullbbox.width / 2 - padding}\n          y={ym - fullbbox.height + padding}\n          fill={rectFill}\n          onClick={onClick}\n          style={{ cursor: \"pointer\" }}\n        ></rect>\n        {texts.map((t, index) => {\n          const bbox = textRefs[index]?.getBBox();\n          const x =\n            (fullbbox !== undefined ? xm - fullbbox.width / 2 : xm) + xPrev;\n          xPrev += bbox !== undefined ? bbox.width : 0;\n          return (\n            <text\n              key={`${connection.from.key}${connection.to.key}${index}`}\n              x={x}\n              y={ym + 2}\n              fill=\"black\"\n              ref={(e) => {\n                if (e === null || e === undefined || !!textRefs[index]) return;\n                const nn = [...textRefs];\n                nn[index] = e;\n                setTextRefs(nn);\n              }}\n              onClick={onClick}\n              style={{ cursor: \"pointer\", ...(t.style ?? {}) }}\n            >\n              {t.text}\n            </text>\n          );\n        })}\n      </>\n    );\n  }\n);\n\n// const getBoxIntersection = (from: OperationModelT, to: OperationModelT) => {\n//   const fwidth = from.width || 60;\n//   const fheight = from.width || 60;\n//   const twidth = to.width || 60;\n//   const theight = to.width || 60;\n\n//   const [x1, y1, x2, y2] = [\n//     from.x + fwidth / 2,\n//     from.y + fheight / 2,\n//     to.x + twidth / 2,\n//     to.y + theight / 2\n//   ];\n//   const dy = y2 - y1;\n//   const dx = x2 - x1;\n//   if (dx === 0 || dy === 0) {\n//   }\n//   const m = dy / dx;\n\n//   const degrees = 90 + (Math.atan2(dy, dx) * 180) / Math.PI;\n//   let xpos = x2 > x1 ? 1 : -1;\n//   const interY = (y2 - y1) / m;\n//   const interX = x2 * m + y1;\n// };\n","import Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { observer } from \"mobx-react-lite\";\nimport { IAnyType, IMSTMap, types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FieldSpec, PP2 } from \"./\";\n\nconst ButtonsDiv = styled.div`\n  min-height: 38px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport class ChoiceFieldSpec<\n  V,\n  K extends C extends IMSTMap<M> ? string : string & keyof C,\n  C extends { [key: string]: V } | IMSTMap<M>,\n  M extends IAnyType,\n  MM extends { [key: string]: FieldSpec }\n> {\n  choices: C;\n  default: K;\n  onChange?: (n: V) => void;\n\n  constructor(v: { choices: C; default: K; onChange?: (n: V) => void }) {\n    this.choices = v.choices;\n    this.default = v.default;\n    this.onChange = v.onChange;\n    if (this.isObservableMap()) {\n      if ((this.choices as any).get(this.default) === null) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  isObservableMap = () => {\n    return (\n      typeof this.choices.keys === \"function\" &&\n      typeof this.choices.size === \"number\" &&\n      Symbol.toStringTag in this.choices\n    );\n  };\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.string, this.default)\n      : types.string;\n\n  plotField: React.FC<PP2<MM, string>> = observer(({ name, model }) => {\n    let keys;\n    if (this.isObservableMap()) {\n      keys = Array.from(\n        (this.choices as any).keys() as IterableIterator<string>\n      );\n    } else {\n      keys = Object.keys(this.choices);\n    }\n    return (\n      <ChoiceField\n        value={model[name]}\n        setValue={(v) => {\n          model[name] = v as any;\n          if (this.onChange !== undefined) this.onChange(v as any);\n        }}\n        keys={keys}\n      />\n    );\n  });\n}\n\nexport const ChoiceField = <V extends string>({\n  keys,\n  value,\n  setValue,\n  maxButton,\n}: {\n  keys: V[];\n  value: V;\n  setValue: (v: V) => void;\n  maxButton?: number;\n}) => {\n  if (keys.length > (maxButton ?? 3)) {\n    return (\n      <Select\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value as any);\n        }}\n        autoWidth={true}\n        style={{ minHeight: \"35px\", marginBottom: \"3px\" }}\n        disabled={keys.length <= 1}\n      >\n        {keys.map((k) => {\n          return (\n            <MenuItem key={k} value={k}>\n              {k}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  } else {\n    return (\n      <ButtonsDiv>\n        <ButtonGroup\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n        >\n          {keys.map((k) => {\n            const buttonStyle =\n              k === value ? { background: \"#3f51b5\", color: \"white\" } : {};\n\n            return (\n              <Button\n                key={k}\n                onClick={() => {\n                  setValue(k);\n                }}\n                style={buttonStyle}\n              >\n                {k}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n      </ButtonsDiv>\n    );\n  }\n};\n","export function listToMap<T extends number | string>(l: Array<T>) {\n  return l.reduce((p, c) => {\n    p[c.toString()] = c;\n    return p;\n  }, {} as { [key: string]: T });\n}\n\nconst defaultResizeEnable = {\n  top: false,\n  right: false,\n  bottom: false,\n  left: false,\n  topRight: false,\n  bottomRight: false,\n  bottomLeft: false,\n  topLeft: false,\n};\n\nexport function resizableEnable(f: {\n  top?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n  left?: boolean;\n  topRight?: boolean;\n  bottomRight?: boolean;\n  bottomLeft?: boolean;\n  topLeft?: boolean;\n}) {\n  return Object.entries(f).reduce(\n    (p, [k, v]) => {\n      if (v !== undefined) {\n        p[k as keyof typeof defaultResizeEnable] = v;\n      }\n      return p;\n    },\n    { ...defaultResizeEnable }\n  );\n}\n\nexport function downloadToClient(\n  content: BlobPart,\n  fileName: string,\n  contentType: string\n) {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}\n\nexport function importJson(\n  event: React.ChangeEvent<HTMLInputElement>\n): Promise<string | ArrayBuffer | null | undefined> {\n  const files = event.target.files;\n  return new Promise((resolve, _) => {\n    if (files !== null) {\n      const file = files[0];\n      if (file.type !== \"application/json\") {\n        window.alert(\n          \"Debes seleccionar un archivo válido, la extensión debe ser '.json'.\"\n        );\n        return resolve(undefined);\n      }\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          resolve(e.target?.result);\n        };\n        reader.onabort = (e) => {\n          resolve(undefined);\n        };\n        reader.onerror = (e) => {\n          resolve(undefined);\n        };\n        reader.readAsText(file);\n    } else {\n      resolve(undefined);\n    }\n  });\n}\n","import React from \"react\";\nimport { computed, observable, reaction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { ChoiceFieldSpec } from \"../fields/choice-field\";\nimport { ConnectionPosition, NodeData, NodeModel } from \"../node/node-model\";\nimport { listToMap } from \"../utils\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { Transition } from \"./transition\";\nimport { JsonType } from \"../canvas/store\";\nimport { BoolFieldSpec } from \"../fields/primitive-field\";\n\nexport enum StepType {\n  ENCLOSING = \"ENCLOSING\",\n  MACRO = \"MACRO\",\n  SIMPLE = \"SIMPLE\",\n  CONTAINER = \"CONTAINER\",\n}\n\ntype GemmaNode = NodeModel<Step, GemmaGrafcet, Transition>;\n\nexport enum ProcedureType {\n  F = \"F\", // Operational\n  D = \"D\", // Failure\n  A = \"A\", // Stop\n}\n\nexport type Step = SimpleStep | EnclosingStep | MacroStep | ContainerStep;\n\nexport class BaseStep implements NodeData<Step, GemmaGrafcet, Transition> {\n  @observable\n  type: StepType;\n\n  nInputs = Number.POSITIVE_INFINITY;\n  errors = observable.map<string, string>();\n\n  constructor(\n    public node: GemmaNode,\n    d?: {\n      description?: string;\n      family?: ProcedureType;\n      isInitial?: boolean;\n      type?: StepType;\n    }\n  ) {\n    this.description = d?.description ?? \"\";\n    this.family = d?.family ?? ProcedureType.F;\n    this.isInitial = d?.isInitial ?? false;\n    this.type = d?.type ?? StepType.SIMPLE;\n    reaction(\n      (_) => this.isInitial,\n      (isInitial, _) => {\n        if (isInitial) {\n          const otherInitial = this.automationSystem.steps.find(\n            (s) => s.isInitial && s !== this\n          );\n          if (otherInitial !== undefined) {\n            otherInitial.isInitial = false;\n          }\n        }\n      }\n    );\n  }\n\n  @computed\n  get name(): string {\n    return this.node.name;\n  }\n  @observable\n  description: string;\n  @observable\n  isInitial: boolean;\n  @observable\n  family: ProcedureType;\n  @computed\n  get parent(): GemmaNode | undefined {\n    if (this.type === StepType.CONTAINER) {\n      return undefined;\n    }\n    switch (this.family) {\n      case ProcedureType.A:\n        return this.automationSystem.aFamily;\n      case ProcedureType.D:\n        return this.automationSystem.dFamily;\n      case ProcedureType.F:\n        return this.automationSystem.fFamily;\n    }\n    throw new Error(\"\");\n  }\n\n  get automationSystem(): GemmaGrafcet {\n    return this.node.graph.globalData;\n  }\n\n  connectionStartPosition = (): undefined | ConnectionPosition => {\n    if (this.type === StepType.CONTAINER) {\n      return { bottom: 40, left: 50 };\n    }\n    return undefined;\n  };\n\n  @computed\n  private get _transitions(): Transition[] {\n    return this.node.outputs\n      .filter((t) => !t.isHidden)\n      .map((t) => t.data)\n      .sort((a, b) => a.priority - b.priority);\n  }\n  @computed\n  get innerTransitionsLength(): number {\n    return this._transitions.length;\n  }\n  @computed\n  get transitions(): Transition[] {\n    if (this === this.automationSystem.fFamily!.data) {\n      return this._transitions;\n    }\n    return this.family === ProcedureType.F\n      ? this.automationSystem.fFamily!.data.transitions.concat(\n          this._transitions\n        )\n      : this._transitions;\n  }\n  @computed\n  get id(): number {\n    if (this.name.length === 2) {\n      let delta: number;\n      switch (this.family) {\n        case ProcedureType.A:\n          delta = 0;\n          break;\n        case ProcedureType.F:\n          delta = 7;\n          break;\n        case ProcedureType.D:\n          delta = 7 + 6;\n          break;\n      }\n      return delta + Number.parseInt(this.name[1]);\n    }\n    return 0;\n  }\n\n  spec = {\n    isInitial: new BoolFieldSpec({ default: false, required: true }),\n    type: new ChoiceFieldSpec({\n      default: StepType.SIMPLE,\n      choices: listToMap(\n        Object.values(StepType).filter((t) => t !== StepType.CONTAINER)\n      ),\n    }),\n  };\n\n  isValidInput(n: GemmaNode): boolean {\n    return this.node.inputNodes.every((t) => t.data !== n.data);\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      family: this.family,\n      description: this.description,\n      type: this.type,\n      isInitial: this.isInitial,\n    };\n  }\n\n  View = observer(({ children }) => {\n    const _color = {\n      [ProcedureType.A]: \"#ecf5ff\",\n      [ProcedureType.D]: \"#ffd6d6\",\n      [ProcedureType.F]: \"#ebffec\",\n    };\n\n    if (this.type === StepType.CONTAINER) {\n      return (\n        <div\n          style={{\n            position: \"relative\",\n            border: \"1px solid #eee\",\n            background: _color[this.family],\n            flex: 1,\n            width: 400,\n            height: 400,\n          }}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    let style: React.CSSProperties = {};\n    let innerStyle: React.CSSProperties = { padding: \"12px\" };\n    let wrapper: (p: React.ReactElement) => React.ReactElement = (p) => p;\n\n    if (this.isInitial) {\n      wrapper = (p) => (\n        <div style={{ padding: \"5px\" }}>\n          <div\n            style={{\n              border: \"1.5px solid\",\n            }}\n          >\n            {p}\n          </div>\n        </div>\n      );\n    }\n\n    const nodeHeight = this.node.height - 2 - (this.isInitial ? 12 : 0);\n    switch (this.type) {\n      case StepType.ENCLOSING:\n        style = { padding: \"0 0\", display: \"flex\" };\n        return wrapper(\n          <div style={{ ...style, position: \"relative\" }}>\n            <EnclosingDecoration left={true} nodeHeight={nodeHeight} />\n            <div style={{ ...innerStyle, padding: \"12px 18px\" }}>\n              {this.node.name}\n            </div>\n            <EnclosingDecoration left={false} nodeHeight={nodeHeight} />\n          </div>\n        );\n      case StepType.MACRO:\n        style = { padding: \"5px 0\" };\n        innerStyle = {\n          borderTop: \"1.5px solid\",\n          borderBottom: \"1.5px solid\",\n          borderRight: \"0\",\n          borderLeft: \"0\",\n          padding: \"5px 12px\",\n        };\n        break;\n    }\n\n    return wrapper(\n      <div style={style}>\n        <div style={innerStyle}>{this.node.name}</div>\n      </div>\n    );\n  });\n}\n\nexport type SimpleStep = BaseStep & {\n  type: StepType.SIMPLE;\n};\n\nexport type ContainerStep = BaseStep & {\n  type: StepType.CONTAINER;\n};\n\nexport type EnclosingStep = BaseStep & {\n  type: StepType.ENCLOSING;\n};\n\nexport type MacroStep = BaseStep & {\n  type: StepType.MACRO;\n};\n\nexport const EnclosingDecoration = ({\n  nodeHeight,\n  left,\n}: {\n  nodeHeight: number;\n  left: boolean;\n}) => {\n  return (\n    <svg\n      style={{\n        width: \"10px\",\n        height: \"\" + nodeHeight + \"px\",\n        position: \"absolute\",\n        right: left ? undefined : 0,\n      }}\n    >\n      <path\n        d={\n          left\n            ? `M 10 0 L 0 ${nodeHeight / 2} L 10 ${nodeHeight}`\n            : `M 0 0 L 10 ${nodeHeight / 2} L 0 ${nodeHeight}`\n        }\n        stroke=\"black\"\n        fill=\"transparent\"\n      ></path>\n    </svg>\n  );\n};\n","import Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { observer } from \"mobx-react-lite\";\nimport { types } from \"mobx-state-tree\";\nimport React from \"react\";\nimport { FieldSpec, FieldSpecI, PP2 } from \"./\";\n\nexport class StrFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, string> {\n  default: string;\n  maxLength?: number;\n  minLength?: number;\n  multiline: boolean;\n\n  constructor(v: {\n    default: string;\n    maxLength?: number;\n    minLength?: number;\n    multiline?: boolean;\n  }) {\n    this.default = v.default;\n    this.maxLength = v.maxLength;\n    this.minLength = v.minLength;\n    this.multiline = v.multiline ?? false;\n\n    if (typeof this.default === \"string\") {\n      if (\n        this.minLength !== undefined &&\n        this.default.length < this.minLength\n      ) {\n        throw Error(\"\");\n      } else if (\n        this.maxLength !== undefined &&\n        this.default.length > this.maxLength\n      ) {\n        throw Error(\"\");\n      }\n    }\n  }\n\n  mobxProp = () => {\n    if (this.default !== undefined) {\n      return types.optional(types.string, this.default);\n    } else {\n      return types.string;\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, string>) => {\n    const [value, setValue] = React.useState(model[name]);\n    const errors = model.errors;\n    const onChange = (\n      e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n      let value = e.target.value;\n      setValue(value as any);\n\n      if (this.maxLength !== undefined && value.length > this.maxLength) {\n        errors.set(name, \"Max length exceded.\");\n      } else if (\n        this.minLength !== undefined &&\n        value.length < this.minLength\n      ) {\n        errors.set(name, \"Min length exceded.\");\n      } else {\n        errors.delete(name);\n        model[name] = value as any;\n      }\n    };\n\n    if (this.multiline) {\n      return (\n        <textarea\n          key={name}\n          className=\"multiline-input\"\n          value={value}\n          onChange={onChange}\n        ></textarea>\n      );\n    } else {\n      return (\n        <TextField\n          key={name}\n          value={value}\n          fullWidth={true}\n          margin=\"dense\"\n          inputProps={{ style: { textAlign: \"center\" } }}\n          error={errors.get(name) !== undefined}\n          style={{ width: \"140px\" }}\n          onChange={onChange}\n        />\n      );\n    }\n  });\n}\n\nexport class BoolFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, boolean> {\n  default: boolean;\n  required?: boolean;\n\n  constructor(v: { default: boolean; required?: boolean }) {\n    this.default = v.default;\n    this.required = v.required !== undefined ? v.required : true;\n  }\n\n  mobxProp = () => {\n    if (this[\"default\"] === undefined) {\n      return types.boolean;\n    } else {\n      return types.optional(types.boolean, this.default);\n    }\n  };\n\n  plotField = observer(({ name, model }: PP2<M, boolean>) => {\n    return (\n      <Switch\n        checked={model[name]}\n        onChange={() => {\n          model[name] = !model[name] as any;\n        }}\n        color=\"primary\"\n      />\n    );\n  });\n}\n\nexport class NumFieldSpec<M extends { [key: string]: FieldSpec }>\n  implements FieldSpecI<M, number> {\n  default: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  isInt: boolean;\n\n  constructor(v: {\n    default: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    isInt?: boolean;\n  }) {\n    this.default = v.default;\n    this.min = v.min;\n    this.max = v.max;\n    this.step = v.step;\n    this.isInt = v.isInt !== undefined ? v.isInt : false;\n    if (this.min !== undefined && this.default < this.min) {\n      throw Error(\"\");\n    } else if (this.max !== undefined && this.default > this.max) {\n      throw Error(\"\");\n    }\n    if (this.isInt) {\n      this.default = Math.round(this.default);\n      if (this.step === undefined) {\n        this.step = 1;\n      } else {\n        this.step = Math.round(this.step);\n      }\n    }\n  }\n\n  mobxProp = () =>\n    this.default !== undefined\n      ? types.optional(types.number, this.default)\n      : types.number;\n\n  plotField = observer(({ name, model }: PP2<M, number>) => {\n    const [value, setValue] = React.useState(\n      ((model[name] as any) as number).toString()\n    );\n    const errors = model.errors;\n    const error = errors.get(name);\n\n    return (\n      <TextField\n        key={name}\n        value={value}\n        inputProps={{\n          min: this.min,\n          max: this.max,\n          step: this.step,\n          style: { textAlign: \"center\" },\n        }}\n        type=\"number\"\n        error={error !== undefined}\n        fullWidth={true}\n        style={{ width: \"80px\" }}\n        onChange={(e) => {\n          let value = e.target.value;\n          if (this.min !== undefined && this.min >= 0) {\n            value = value.replace(/-/g, \"\");\n          }\n          if (this.isInt) {\n            value = value.replace(/\\./g, \"\");\n          }\n          setValue(value);\n\n          let num: number;\n          if (this.isInt) {\n            num = parseInt(value, 10);\n          } else {\n            num = parseFloat(value);\n          }\n\n          if (Number.isNaN(num)) {\n            errors.set(name, \"Invalid\");\n          } else if (this.min !== undefined && this.min > num) {\n            errors.set(name, `Smaller than minimum ${this.min}`);\n          } else if (this.max !== undefined && this.max < num) {\n            errors.set(name, `Greater than maximum ${this.max}`);\n          } else {\n            errors.delete(name);\n            model[name] = num as any;\n          }\n        }}\n      />\n    );\n  });\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { StepType, Step, EnclosingDecoration } from \"../step/step\";\nimport {\n  AbstractReactFactory,\n  AbstractModelFactory,\n} from \"@projectstorm/react-canvas-core\";\nimport { DiagramEngine } from \"@projectstorm/react-diagrams-core\";\nimport {\n  LinkModel,\n  PortModel,\n  DefaultLinkModel,\n  PortModelAlignment,\n  NodeModel,\n  NodeModelGenerics,\n  PortWidget,\n} from \"@projectstorm/react-diagrams\";\nimport styled from \"styled-components\";\n\nexport const CUSTOM_NODE_TYPE = \"CUSTOM_NODE_TYPE\";\n\nclass SimplePortFactory extends AbstractModelFactory<PortModel, DiagramEngine> {\n  cb: (initialConfig?: any) => PortModel;\n\n  constructor(type: string, cb: (initialConfig?: any) => PortModel) {\n    super(type);\n    this.cb = cb;\n  }\n\n  generateModel(event: any): PortModel {\n    return this.cb(event.initialConfig);\n  }\n}\n\nexport const customPortFactory = new SimplePortFactory(\n  CUSTOM_NODE_TYPE,\n  (config: any) => new CustomPortModel(PortModelAlignment.LEFT)\n);\n\nexport class CustomPortModel extends PortModel {\n  constructor(alignment: PortModelAlignment) {\n    super({\n      type: CUSTOM_NODE_TYPE,\n      name: alignment,\n      alignment: alignment,\n    });\n  }\n\n  createLinkModel(): LinkModel {\n    return new DefaultLinkModel();\n  }\n}\n\nexport class CustomNodeFactory extends AbstractReactFactory<\n  CustomNodeModel,\n  DiagramEngine\n> {\n  constructor() {\n    super(CUSTOM_NODE_TYPE);\n  }\n\n  generateReactWidget(event: any): JSX.Element {\n    return <CustomNode engine={this.engine} node={event.model} />;\n  }\n\n  generateModel(event: any) {\n    return new CustomNodeModel(null as any);\n  }\n}\n\nexport interface CustomNodeModelGenerics {\n  PORT: CustomPortModel;\n}\n\nexport class CustomNodeModel extends NodeModel<\n  NodeModelGenerics & CustomNodeModelGenerics\n> {\n  constructor(public readonly step: Step) {\n    super({\n      type: CUSTOM_NODE_TYPE,\n    });\n    this.addPort(new CustomPortModel(PortModelAlignment.TOP));\n    this.addPort(new CustomPortModel(PortModelAlignment.LEFT));\n    this.addPort(new CustomPortModel(PortModelAlignment.BOTTOM));\n    this.addPort(new CustomPortModel(PortModelAlignment.RIGHT));\n  }\n}\n\nexport const CustomNode = observer(\n  ({ node, engine }: { node: CustomNodeModel; engine: DiagramEngine }) => {\n    let style: React.CSSProperties = {};\n    let innerStyle: React.CSSProperties = { padding: \"12px\" };\n    let wrapper: (p: React.ReactElement) => React.ReactElement = (p) => p;\n    const step = node.step;\n\n    if (step.isInitial) {\n      wrapper = (p) => (\n        <div style={{ padding: \"5px\", border: \"1.5px solid\" }}>\n          <div\n            style={{\n              border: \"1.5px solid\",\n            }}\n          >\n            {p}\n          </div>\n        </div>\n      );\n    }\n\n    const nodeHeight = step.node.height - 2 - (step.isInitial ? 12 : 0);\n    switch (step.type) {\n      case StepType.ENCLOSING:\n        style = { padding: \"0 0\", display: \"flex\" };\n        return wrapper(\n          <div\n            style={{ ...style, border: \"1.5px solid\", position: \"relative\" }}\n          >\n            <Ports node={node} engine={engine} size={step.node.height} />\n            <EnclosingDecoration left={true} nodeHeight={nodeHeight} />\n            <div style={{ ...innerStyle, padding: \"12px 18px\" }}>\n              {step.node.name}\n            </div>\n            <EnclosingDecoration left={false} nodeHeight={nodeHeight} />\n          </div>\n        );\n      case StepType.MACRO:\n        style = { padding: \"5px 0\" };\n        innerStyle = {\n          borderTop: \"1.5px solid\",\n          borderBottom: \"1.5px solid\",\n          borderRight: \"0\",\n          borderLeft: \"0\",\n          padding: \"5px 12px\",\n        };\n        break;\n    }\n\n    return wrapper(\n      <div style={{ ...style, border: \"1.5px solid\", position: \"relative\" }}>\n        <Ports node={node} engine={engine} size={step.node.height} />\n        <div style={innerStyle}>{step.node.name}</div>\n      </div>\n    );\n  }\n);\n\nconst Ports = ({\n  engine,\n  node,\n  size,\n}: {\n  engine: DiagramEngine;\n  node: CustomNodeModel;\n  size: number;\n}) => {\n  return (\n    <>\n      <PortWidget\n        style={{\n          top: size / 2 - 8,\n          left: -8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.LEFT)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size / 2 - 8,\n          top: -8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.TOP)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size - 8,\n          top: size / 2 - 8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.RIGHT)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n      <PortWidget\n        style={{\n          left: size / 2 - 8,\n          top: size - 8,\n          position: \"absolute\",\n        }}\n        port={node.getPort(PortModelAlignment.BOTTOM)!}\n        engine={engine}\n      >\n        <S.Port />\n      </PortWidget>\n    </>\n  );\n};\n\nclass S {\n  static Port = styled.div`\n    width: 16px;\n    height: 16px;\n    z-index: 10;\n    background: rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n    cursor: pointer;\n    &:hover {\n      background: rgba(0, 0, 0, 1);\n    }\n  `;\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useStore } from \"../App\";\nimport { ArrowView } from \"./arrow\";\nimport \"./canvas.css\";\nimport createEngine, {\n  DiagramModel,\n  DefaultNodeModel,\n  DefaultPortModel,\n  RightAngleLinkFactory,\n  LinkModel,\n  RightAngleLinkModel,\n  DefaultLabelModel,\n  PathFindingLinkFactory,\n  PortModelAlignment,\n} from \"@projectstorm/react-diagrams\";\nimport { AbstractModelFactory } from \"@projectstorm/react-canvas-core\";\nimport {\n  CustomNodeFactory,\n  CustomNodeModel,\n  customPortFactory,\n} from \"../node/custom-node\";\nimport { Step } from \"../step/step\";\n\ntype Props = {};\n\n// When new link is created by clicking on port the RightAngleLinkModel needs to be returned.\nexport class RightAnglePortModel extends DefaultPortModel {\n  createLinkModel(factory?: AbstractModelFactory<LinkModel>) {\n    return new RightAngleLinkModel();\n  }\n}\n\nexport const MainCanvas: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n  const ops = [...rootStore.nodes.values()];\n\n  const engine = React.useMemo(() => {\n    const engine = createEngine({\n      registerDefaultZoomCanvasAction: false,\n      registerDefaultDeleteItemsAction: false,\n    });\n    engine.getLinkFactories().registerFactory(new RightAngleLinkFactory());\n    engine.getPortFactories().registerFactory(customPortFactory);\n    engine.getNodeFactories().registerFactory(new CustomNodeFactory());\n    // setup the diagram model\n\n    const model = new DiagramModel();\n    // create four nodes in a way that straight links wouldn't work\n    const node1 = new CustomNodeModel(ops[10].data as Step);\n    node1.setPosition(340, 350);\n\n    const node2 = new DefaultNodeModel(\"Node B\", \"rgb(255,255,0)\");\n    const port2 = node2.addPort(new DefaultPortModel(false, \"out-1\", \"Out\"));\n    node2.setPosition(240, 80);\n    const node3 = new DefaultNodeModel(\"Node C\", \"rgb(192,255,255)\");\n    const port3 = node3.addPort(new DefaultPortModel(true, \"in-1\", \"In\"));\n    node3.setPosition(540, 180);\n    const node4 = new DefaultNodeModel(\"Node D\", \"rgb(192,0,255)\");\n    const port4 = node4.addPort(new DefaultPortModel(true, \"in-1\", \"In\"));\n    node4.setPosition(95, 185);\n    const pathfinding = engine\n      .getLinkFactories()\n      .getFactory<PathFindingLinkFactory>(PathFindingLinkFactory.NAME);\n\n    // linking things together\n    const link1 = port4.link(\n      node1.getPort(PortModelAlignment.LEFT)!,\n      pathfinding\n    );\n    link1.addLabel(new DefaultLabelModel({ label: \"dwdw\" }));\n\n    const link2 = port2.link(port3, pathfinding);\n\n    // add all to the main model\n    model.addAll(node1, node2, node3, node4, link1, link2);\n\n    // load model into engine and render\n    engine.setModel(model);\n    return engine;\n  }, [ops]);\n  console.log(engine);\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        flex: \"1\",\n        outline: \"none\",\n        background: \"white\",\n      }}\n      id=\"canvas-scroll\"\n      tabIndex={0}\n      onMouseMove={(_) => {\n        if (rootStore.selectedPointIndex !== undefined) {\n          const target = document.getElementById(\n            \"canvas-scroll\"\n          )! as HTMLElement;\n          target.focus();\n        }\n      }}\n      onKeyUp={(event) => {\n        if (\n          event.key === \"Escape\" &&\n          rootStore.selectedPointIndex !== undefined &&\n          rootStore.selectedConnection !== undefined\n        ) {\n          rootStore.selectedConnection.innerPoints.splice(\n            rootStore.selectedPointIndex,\n            1\n          );\n          rootStore.selectedPointIndex = undefined;\n        }\n      }}\n    >\n      <div className=\"canvas-wrapper\" style={{ background: \"white\" }}>\n        {/* <CanvasWidget engine={engine} className=\"canvas-widget\" /> */}\n        <rootStore.globalData.CanvasView />\n        <svg\n          style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}\n          id=\"canvas-svg\"\n        >\n          {ops\n            .flatMap((op) => op.inputs)\n            .map((connection) => (\n              <ArrowView\n                connection={connection}\n                key={connection.from.key + connection.to.key}\n              />\n            ))}\n        </svg>\n      </div>\n    </div>\n  );\n});\n","import { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { JsonType } from \"./store\";\n\nconst DB_NAME = \"GemmaGrafcet\";\nenum DBStores {\n  graph = \"graph\",\n  node = \"node\",\n  connection = \"connection\",\n}\n\nexport type GraphJson = {\n  key: string;\n  data: JsonType;\n};\n\nexport type NodeJson = {\n  key: string;\n  name: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isHidden: boolean;\n  data: JsonType;\n};\n\ntype _NodeJson = NodeJson & {\n  graphKey: string;\n};\n\nexport type ConnectionJson = {\n  from: string;\n  to: string;\n  isHidden: boolean;\n  data: JsonType;\n};\n\ntype _ConnectionJson = ConnectionJson & {\n  key: string;\n  graphKey: string;\n};\n\ninterface MyDB extends DBSchema {\n  [DBStores.graph]: {\n    key: string;\n    value: GraphJson;\n  };\n  [DBStores.node]: {\n    key: string;\n    value: _NodeJson;\n    indexes: { \"by-graph\": string };\n  };\n  [DBStores.connection]: {\n    key: string;\n    value: _ConnectionJson;\n    indexes: { \"by-graph\": string };\n  };\n}\n\nexport async function createIndexedDB() {\n  const db = await openDB<MyDB>(DB_NAME, 1, {\n    upgrade(db) {\n      db.createObjectStore(DBStores.graph, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n\n      const nodeStore = db.createObjectStore(DBStores.node, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      nodeStore.createIndex(\"by-graph\", \"graphKey\");\n\n      const connStore = db.createObjectStore(DBStores.connection, {\n        keyPath: \"key\",\n        autoIncrement: false,\n      });\n      connStore.createIndex(\"by-graph\", \"graphKey\");\n    },\n  });\n  return new IndexedDB(db);\n}\n\nexport function sameKeys(conn: ConnectionJson, conn2: ConnectionJson) {\n  return getKeyFromConnection(conn) === getKeyFromConnection(conn2);\n}\n\nexport function getKeyFromConnection(conn: ConnectionJson) {\n  return `${conn.from}_${conn.to}`;\n}\n\nexport function connectionWithKey(\n  graphKey: string,\n  conn: ConnectionJson\n): _ConnectionJson {\n  return Object.assign(conn, { key: getKeyFromConnection(conn), graphKey });\n}\n\nexport class IndexedDB {\n  constructor(private db: IDBPDatabase<MyDB>) {}\n\n  //\n  // GRAPHS\n  //\n\n  fetchGraphs() {\n    return this.db.getAll(DBStores.graph);\n  }\n\n  updateGraph(value: GraphJson) {\n    return this.db.put(DBStores.graph, value);\n  }\n\n  async deleteGraph(graphKey: string) {\n    const tx = this.db.transaction(\n      [DBStores.graph, DBStores.node, DBStores.connection],\n      \"readwrite\"\n    );\n    tx.objectStore(DBStores.graph).delete(graphKey);\n    for (const dbKey of [DBStores.node, DBStores.connection] as Array<\n      DBStores.node | DBStores.connection\n    >) {\n      let cursor = await tx\n        .objectStore(dbKey)\n        .index(\"by-graph\")\n        .openCursor(graphKey);\n      while (cursor) {\n        cursor.delete();\n        cursor = await cursor.continue();\n      }\n    }\n    await tx.done;\n  }\n\n  async loadGraph(graphKey: string) {\n    const [nodes, connections] = await Promise.all([\n      this.db.getAllFromIndex(DBStores.node, \"by-graph\", graphKey),\n      this.db.getAllFromIndex(DBStores.connection, \"by-graph\", graphKey),\n    ]);\n\n    return { nodes, connections };\n  }\n\n  //\n  // NODES\n  //\n\n  async addNodes(graphKey: string, nodes: NodeJson[]) {\n    const tx = this.db.transaction(DBStores.node, \"readwrite\");\n\n    const _g = { graphKey };\n    for (const n of nodes) {\n      tx.store.add(Object.assign(n, _g));\n    }\n    return await tx.done;\n  }\n\n  deleteNode(path: NodeJson) {\n    return this.db.delete(DBStores.node, path.key);\n  }\n\n  async updateNode(graphKey: string, path: NodeJson) {\n    return this.db.put(DBStores.node, Object.assign(path, { graphKey }));\n  }\n\n  async updateNodes(graphKey: string, nodes: Array<NodeJson>) {\n    const _g = { graphKey };\n    return this.updateMany(\n      DBStores.node,\n      nodes.map((n) => n.key),\n      nodes.map((p) => Object.assign(p, _g))\n    );\n  }\n\n  //\n  // CONNECTIONS\n  //\n\n  async addConnections(graphKey: string, connections: ConnectionJson[]) {\n    const tx = this.db.transaction(DBStores.connection, \"readwrite\");\n\n    for (const p of connections) {\n      tx.store.add(connectionWithKey(graphKey, p));\n    }\n    return await tx.done;\n  }\n\n  deleteConnection(path: ConnectionJson) {\n    return this.db.delete(DBStores.connection, getKeyFromConnection(path));\n  }\n\n  async updateConnection(graphKey: string, connection: ConnectionJson) {\n    return this.db.put(\n      DBStores.connection,\n      connectionWithKey(graphKey, connection)\n    );\n  }\n\n  async updateConnections(\n    graphKey: string,\n    connections: Array<ConnectionJson>\n  ) {\n    return this.updateMany(\n      DBStores.connection,\n      connections.map(getKeyFromConnection),\n      connections.map((p) => connectionWithKey(graphKey, p))\n    );\n  }\n\n  //\n  // OTHER\n  //\n\n  async closeDB() {\n    this.db.close();\n  }\n\n  async clearDB() {\n    await Promise.all([\n      this.db.clear(DBStores.graph),\n      this.db.clear(DBStores.connection),\n      this.db.clear(DBStores.node),\n    ]);\n  }\n\n  private async updateMany<T>(dbKey: DBStores, keys: string[], items: T[]) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    await Promise.all(\n      items.map(async (path, index) => {\n        const key = keys[index];\n        const val = await tx.store.get(key);\n\n        if (!val) {\n          throw new Error();\n        }\n        return tx.store.put({ ...val, ...path });\n      })\n    );\n    return await tx.done;\n  }\n\n  private async updateIncrementalSingle<T>(\n    dbKey: DBStores,\n    key: string,\n    item: T\n  ) {\n    const tx = this.db.transaction(dbKey, \"readwrite\");\n    const val = await tx.store.get(key);\n\n    if (!val) {\n      throw new Error();\n    }\n    tx.store.put({ ...val, ...item });\n    await tx.done;\n  }\n}\n","import Button from \"@material-ui/core/Button\";\nimport { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React, { useState } from \"react\";\nimport { useStore, WarningsDialog } from \"../App\";\nimport { NodeModel } from \"../node/node-model\";\nimport { resizableEnable } from \"../utils\";\nimport { GlobalData } from \"./store\";\n\ntype Props = {};\n\nexport const ConfigView: React.FC<Props> = observer(<\n  G extends GlobalData<any>\n>() => {\n  const rootStore = useStore<any, G, any>();\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState(false);\n\n  const ops = [...rootStore.nodes.values()];\n  const connections = ops.reduce((p, c) => {\n    c.inputs.forEach((v) => {\n      let m = p.get(v.to);\n      if (m === undefined) {\n        m = [];\n        p.set(v.to, m);\n      }\n      m.push(c);\n    });\n    return p;\n  }, new Map<NodeModel<any, any, any>, NodeModel<any, any, any>[]>());\n\n  const orderedOps: NodeModel<any, any, any>[] = [];\n  const counts = new Map(\n    ops\n      .filter((op) => {\n        const withDependencies = op.data.length !== 0;\n        if (!withDependencies) {\n          orderedOps.push(op);\n        }\n        return withDependencies;\n      })\n      .map((op) => [op, op.data.length])\n  );\n  let numProcessed = 0;\n  while (counts.size !== 0 && orderedOps.length !== numProcessed) {\n    for (let k of orderedOps.slice(numProcessed)) {\n      numProcessed += 1;\n      const outs = connections.get(k);\n      if (outs === undefined) continue;\n\n      for (let dep of outs) {\n        const m = counts.get(dep)!;\n        if (m === 1) {\n          counts.delete(dep);\n          orderedOps.push(dep);\n        } else {\n          counts.set(dep, m - 1);\n        }\n      }\n    }\n  }\n\n  if (counts.size !== 0) {\n    // CICLE ?\n  }\n\n  return (\n    <Resizable\n      minWidth={200}\n      defaultSize={{ height: \"auto\", width: 350 }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ left: true })}\n    >\n      <div className=\"col\" style={{ height: \"100%\" }}>\n        <div style={{ borderBottom: \"rgb(221 220 220) solid 1.5px\" }}>\n          <Button\n            onClick={(_) => {\n              const hasWarnings = Object.values(\n                rootStore.globalData.warnings\n              ).some((v) => v.length > 0);\n              if (hasWarnings) {\n                setIsWarningsDialogOpen(true);\n              } else {\n                rootStore.downloadSourceCode();\n              }\n            }}\n          >\n            Download Code\n          </Button>\n          <WarningsDialog\n            open={isWarningsDialogOpen}\n            toggleDialog={() => setIsWarningsDialogOpen(!isWarningsDialogOpen)}\n            warnings={rootStore.globalData.warnings}\n            accept={rootStore.downloadSourceCode}\n          />\n        </div>\n        <div\n          style={{\n            overflow: \"auto\",\n            height: \"100%\",\n            padding: \"0 10px\",\n            flex: 1,\n          }}\n        >\n          <pre>{rootStore.globalData.generateMainFile}</pre>\n        </div>\n      </div>\n    </Resizable>\n  );\n});\n","import { action, computed, observable, ObservableMap } from \"mobx\";\nimport { SnapshotIn } from \"mobx-state-tree\";\nimport { FieldSpec } from \"../fields\";\nimport { GlobalData, RootStoreModel, JsonType } from \"../canvas/store\";\nimport { ConnectionJson, NodeJson } from \"../canvas/persistence\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nexport type OperationI<\n  V extends { [key: string]: FieldSpec },\n  D extends NodeData<D, G, any>,\n  G extends GlobalData<D>\n> = {\n  [key in keyof V]: SnapshotIn<ReturnType<V[key][\"mobxProp\"]>>;\n} & {\n  NAME: string;\n  spec: V;\n  nInputs: number;\n  errors: ObservableMap<keyof V, string>;\n};\n\nexport const mobxDecorators = <V extends { [key: string]: FieldSpec }>(\n  spec: V\n) => {\n  return {\n    ...Object.keys(spec).reduce((p, c) => {\n      p[c as keyof V] = observable;\n      return p;\n    }, {} as { [key in keyof V]: PropertyDecorator }),\n    errors: observable,\n  };\n};\n\nexport type ConnectionPosition =\n  | { top: number; left: number }\n  | { top: number; right: number }\n  | { bottom: number; left: number }\n  | { bottom: number; right: number };\n\nexport interface NodeData<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  isValidInput(input: NodeModel<D, G, C>): boolean;\n  nInputs: number;\n  spec: { [key: string]: FieldSpec };\n  // TODO: ObservableMap<keyof V, string>\n  errors: ObservableMap<string, string>;\n  View: React.FC;\n  toJson: JsonType;\n  parent?: NodeModel<D, G, C>;\n  connectionStartPosition?: () => undefined | ConnectionPosition;\n}\n\nexport type ConnectionData<D> = {\n  ConnectionView: React.FunctionComponent;\n  connectionText: { text: string; style?: React.CSSProperties }[];\n  toJson: JsonType;\n};\n\nexport class ConnModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public from: NodeModel<D, G, C>,\n    public to: NodeModel<D, G, C>,\n\n    dataBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C,\n    json?: JsonType,\n    isHidden?: boolean\n  ) {\n    this.data = dataBuilder(this, json);\n    this.isHidden = isHidden ?? false;\n    // this.lines.push(\n    //   { axis: \"hori\", length: to.x - from.x },\n    //   { axis: \"vert\", length: to.y - from.y }\n    // );\n    // const disposer = autorun((r) => {\n    //   const { dx, dy } = this.lines.reduce(\n    //     (p, c) =>\n    //       c.axis === \"vert\"\n    //         ? { dx: p.dx, dy: p.dy + c.length }\n    //         : { dx: p.dx + c.length, dy: p.dy },\n    //     { dx: 0, dy: 0 }\n    //   );\n    //   if (Math.abs(dx - (this.to.x - this.from.x)) > 1){\n\n    //   }\n    //   if (Math.abs(dy - (this.to.y - this.from.y)) > 1){\n\n    //   }\n    // });\n  }\n\n  data: C;\n  @observable\n  isHidden: boolean;\n  get graph(): RootStoreModel<D, G, any> {\n    return this.from.graph;\n  }\n\n  @computed\n  get isSelected(): boolean {\n    return this.from.graph.selectedConnection === this;\n  }\n\n  @computed\n  get toJson(): ConnectionJson {\n    return {\n      from: this.from.key,\n      to: this.to.key,\n      data: this.data.toJson,\n      isHidden: this.isHidden,\n    };\n  }\n\n  @observable\n  innerPoints = observable.array<{ x: number; y: number }>([]);\n}\n\nexport type LineData = {\n  length: number;\n  axis: \"vert\" | \"hori\";\n};\n\nexport class NodeModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<G>\n> {\n  constructor(\n    public graph: RootStoreModel<D, G, any>,\n    d: {\n      key: string;\n      name: string;\n      x: number;\n      y: number;\n      isHidden?: boolean;\n      dataBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n      data?: JsonType;\n    }\n  ) {\n    this.key = d.key;\n    this.name = d.name;\n    this.x = d.x;\n    this.y = d.y;\n    this.isHidden = d.isHidden ?? false;\n    this.data = d.dataBuilder(this, d.data);\n  }\n\n  resizeObserver?: ResizeObserver;\n  element?: HTMLElement;\n  @observable\n  key: string;\n  @observable\n  name: string;\n  @observable\n  x: number;\n  @observable\n  y: number;\n  @observable\n  width: number = 60;\n  @observable\n  height: number = 60;\n  @observable\n  data: D;\n  @observable\n  isHidden: boolean;\n  @observable\n  inputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get inputNodes(): NodeModel<D, G, C>[] {\n    return this.inputs.map((c) => c.from);\n  }\n  @observable\n  outputs = observable.array<ConnModel<D, G, C>>();\n  @computed\n  get outputNodes(): NodeModel<D, G, C>[] {\n    return this.outputs.map((c) => c.to);\n  }\n\n  @action\n  addInput(conn: ConnModel<D, G, C>) {\n    this.inputs.push(conn);\n    conn.from.outputs.push(conn);\n  }\n\n  @action\n  addOutput(conn: ConnModel<D, G, C>) {\n    this.outputs.push(conn);\n    conn.to.inputs.push(conn);\n  }\n\n  @action\n  move = (dx: number, dy: number) => {\n    this.x += dx;\n    this.y += dy;\n  };\n  @action\n  setSize = (rect: DOMRect) => {\n    this.width = rect.width;\n    this.height = rect.height;\n  };\n  @action\n  setName = (name: string) => {\n    this.name = name;\n  };\n  setElement = (element: HTMLElement) => {\n    this.setSize(element.getBoundingClientRect());\n\n    if (this.element !== element) {\n      if (this.resizeObserver !== undefined) {\n        this.resizeObserver.disconnect();\n      }\n      this.element = element;\n      this.resizeObserver = new ResizeObserver((entries, observer) => {\n        this.setSize(element.getBoundingClientRect());\n      });\n      this.resizeObserver.observe(element);\n    }\n  };\n\n  @computed\n  get toJson(): NodeJson {\n    return {\n      key: this.key,\n      name: this.name,\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      isHidden: this.isHidden,\n      data: this.data.toJson,\n    };\n  }\n}\n","import {\n  action,\n  computed,\n  IKeyValueMap,\n  IMapEntries,\n  observable,\n  ObservableMap,\n  reaction,\n} from \"mobx\";\nimport { v4 } from \"uuid\";\nimport { SourceDirectory } from \"../codegen/file-system\";\nimport {\n  NodeModel,\n  NodeData,\n  ConnModel,\n  ConnectionData,\n} from \"../node/node-model\";\nimport { downloadToClient } from \"../utils\";\nimport JSZip from \"jszip\";\nimport { ConnectionJson, GraphJson, IndexedDB, NodeJson } from \"./persistence\";\n\nexport type DataBuilder<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  connectionBuilder: (connection: ConnModel<D, G, C>, json?: JsonType) => C;\n  nodeBuilder: (node: NodeModel<D, G, C>, json?: JsonType) => D;\n  graphBuilder: (graph: RootStoreModel<D, G, C>, json?: JsonType) => G;\n};\n\ntype JsonTypeItem = number | string | boolean | JsonType;\nexport type JsonType = { [key: string]: JsonTypeItem | JsonTypeItem[] };\n\nexport type GraphWarnings = {\n  [key: string]: string[] | Array<[string, Array<string>]>;\n};\n\nexport interface GlobalData<D extends NodeData<D, any, any>> {\n  generateMainFile: string;\n  generateSourceCode: SourceDirectory;\n  canAddNode(nodeType: string): boolean;\n  View: React.FunctionComponent;\n  CanvasView: React.FunctionComponent;\n  toJson: JsonType;\n  warnings: GraphWarnings;\n  initState?: () => void;\n}\n\ntype FullGraphJson = {\n  graph: GraphJson;\n  nodes: NodeJson[];\n  connections: ConnectionJson[];\n};\n\ntype ConstructParams<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> = {\n  builders: DataBuilder<D, G, C>;\n  data?: G;\n  key?: string;\n  nodes?:\n    | IMapEntries<string, NodeModel<D, G, C>>\n    | IKeyValueMap<NodeModel<D, G, C>>;\n};\n\nexport class RootStoreModel<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n> {\n  constructor(d: {\n    db: IndexedDB;\n    builders: DataBuilder<D, G, C>;\n    hideOnDelete?: boolean;\n    json?: FullGraphJson;\n  }) {\n    this.db = d.db;\n    this.builders = d.builders;\n    this.hideOnDelete = d.hideOnDelete ?? false;\n    this.globalData = d.builders.graphBuilder(this, d.json?.graph.data);\n    this.key = d.json?.graph.key ?? v4();\n\n    const nodes = d.json?.nodes.reduce((m, n) => {\n      const node = new NodeModel(this, {\n        ...n,\n        dataBuilder: d.builders.nodeBuilder,\n      });\n\n      m[n.key] = node;\n      return m;\n    }, {} as { [key: string]: NodeModel<D, G, C> });\n\n    this.nodes = observable.map(nodes ?? {});\n\n    d.json?.connections.forEach((c) => {\n      const from = this.nodes.get(c.from);\n      const to = this.nodes.get(c.to);\n      if (from !== undefined && to !== undefined) {\n        this.addConnection(from, to, c.data, c.isHidden);\n      }\n    });\n    if (this.nodes.size !== 0) {\n      this.selectedNode = this.nodes.values().next().value;\n      if (this.selectedNode!.outputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.outputs[0];\n      } else if (this.selectedNode!.inputs.length !== 0) {\n        this.selectedConnection = this.selectedNode!.inputs[0];\n      } else {\n        for (const _n of this.nodes.values()) {\n          if (_n.outputs.length !== 0) {\n            this.selectedConnection = _n.outputs[0];\n            break;\n          }\n        }\n      }\n    }\n    if (this.globalData.initState !== undefined) {\n      this.globalData.initState();\n    }\n\n    document.addEventListener(\"mousemove\", (e) => {\n      this.mouseMoveEvent = e;\n    });\n\n    reaction(\n      (_) => ({\n        selectedPointIndex: this.selectedPointIndex,\n        mouseMoveEvent: this.mouseMoveEvent,\n      }),\n      (d) => {\n        if (\n          d.mouseMoveEvent !== undefined &&\n          d.selectedPointIndex !== undefined &&\n          this.selectedConnection !== undefined\n        ) {\n          const target = document\n            .getElementsByClassName(\"canvas-wrapper\")[0]!\n            .getBoundingClientRect();\n          const x = d.mouseMoveEvent.clientX - target.left;\n          const y = d.mouseMoveEvent.clientY - target.top;\n          this.selectedConnection.innerPoints[d.selectedPointIndex] = { x, y };\n        }\n      }\n    );\n  }\n\n  key: string;\n  // Builders to create graph, node and transition instances\n  builders: DataBuilder<D, G, C>;\n  hideOnDelete: boolean;\n  // Global generic data\n  globalData: G;\n  db: IndexedDB;\n\n  @observable\n  resetStore: boolean = false;\n  // All nodes\n  @observable\n  nodes: ObservableMap<string, NodeModel<D, G, C>>;\n  // Selected node\n  @observable\n  selectedNode?: NodeModel<D, G, C>;\n  // Selected connection\n  @observable\n  selectedConnection?: ConnModel<D, G, C>;\n\n  @observable\n  selectedPointIndex?: number;\n  @observable\n  mouseMoveEvent?: MouseEvent;\n\n  // Selected input for connection\n  @observable\n  selectingInputFor?: NodeModel<D, G, C>;\n\n  @observable\n  showHidden = true;\n\n  // Select a node\n  @action\n  selectNode = (node: NodeModel<D, G, C>) => {\n    this.selectedNode = node;\n  };\n\n  // Select a connection\n  @action\n  selectConnection = (connection: ConnModel<D, G, C>) => {\n    this.selectedConnection = connection;\n  };\n\n  // Add a node\n  @action\n  addNode = (\n    nodeType: string,\n    pos?: { x: number; y: number }\n  ): NodeModel<D, G, C> | undefined => {\n    if (this.globalData.canAddNode(nodeType)) {\n      const op = new NodeModel(this, {\n        dataBuilder: this.builders.nodeBuilder,\n        key: v4(),\n        name: nodeType,\n        x: pos?.x ?? 100,\n        y: pos?.y ?? 100,\n        data: { type: nodeType },\n      });\n      this.nodes.set(op.key, op);\n      return op;\n    }\n  };\n\n  // Remove a node\n  @action\n  removeNode = (node: NodeModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      node.isHidden = true;\n      for (const _in of node.inputs) {\n        _in.isHidden = true;\n      }\n      for (const _out of node.outputs) {\n        _out.isHidden = true;\n      }\n    } else {\n      if (node === this.selectedNode) {\n        this.selectedNode = undefined;\n      }\n      if (this.nodes.delete(node.key)) {\n        for (const _in of node.inputs) {\n          _in.from.outputs.remove(_in);\n        }\n        for (const _out of node.outputs) {\n          _out.to.inputs.remove(_out);\n        }\n      }\n    }\n  };\n\n  @action\n  activateNode = (node: NodeModel<D, G, C>) => {\n    node.isHidden = false;\n    for (const _in of node.inputs) {\n      if (!_in.from.isHidden) _in.isHidden = false;\n    }\n    for (const _out of node.outputs) {\n      if (!_out.to.isHidden) _out.isHidden = false;\n    }\n  };\n\n  @action\n  removeConnection = (connection: ConnModel<D, G, C>): void => {\n    if (this.hideOnDelete) {\n      connection.isHidden = true;\n    } else {\n      if (connection === this.selectedConnection) {\n        this.selectedConnection = undefined;\n      }\n      connection.from.outputs.remove(connection);\n      connection.to.inputs.remove(connection);\n    }\n  };\n\n  @action\n  activateConnection = (connection: ConnModel<D, G, C>): void => {\n    if (!connection.from.isHidden && !connection.to.isHidden) {\n      connection.isHidden = false;\n    }\n  };\n\n  // Select input-output / add connection\n\n  @action\n  selectingInput = (from: NodeModel<D, G, C>) => {\n    this.selectingInputFor = from;\n    window.addEventListener(\"keyup\", this._selectingInputKeyListener);\n  };\n\n  @action\n  assignInput = (to: NodeModel<D, G, C>): ConnModel<D, G, C> => {\n    const conn = new ConnModel(\n      this.selectingInputFor!,\n      to,\n      this.builders.connectionBuilder\n    );\n    conn.from.addOutput(conn);\n    this.selectingInputFor = undefined;\n    this.selectedConnection = conn;\n    window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    return conn;\n  };\n\n  @action\n  private _selectingInputKeyListener = (ev: KeyboardEvent) => {\n    if (ev.key === \"Escape\") {\n      this.selectingInputFor = undefined;\n      window.removeEventListener(\"keyup\", this._selectingInputKeyListener);\n    }\n  };\n\n  @action\n  addConnection = (\n    from: NodeModel<D, G, C>,\n    to: NodeModel<D, G, C>,\n    json?: JsonType,\n    isHidden?: boolean\n  ): ConnModel<D, G, C> => {\n    const conn = new ConnModel(\n      from,\n      to,\n      this.builders.connectionBuilder,\n      json,\n      isHidden\n    );\n    conn.from.addOutput(conn);\n    return conn;\n  };\n\n  // Serialization\n\n  @computed\n  get toJson(): GraphJson {\n    return { data: this.globalData.toJson, key: this.key };\n  }\n\n  saveModel = async () => {\n    const nodes = [...this.nodes.entries()];\n    await this.db.clearDB();\n    await Promise.all([\n      this.db.updateGraph(this.toJson),\n      this.db.addNodes(\n        this.key,\n        nodes.map(([_, value]) => value.toJson)\n      ),\n      this.db.addConnections(\n        this.key,\n        nodes.flatMap(([_, value]) => value.outputs).map((t) => t.toJson)\n      ),\n    ]);\n  };\n\n  downloadModel = (): FullGraphJson => {\n    const nodes = [...this.nodes.entries()];\n    const json = {\n      graph: this.toJson,\n      nodes: nodes.map(([_, value]) => value.toJson),\n      connections: nodes\n        .flatMap(([_, value]) => value.outputs)\n        .map((t) => t.toJson),\n    };\n\n    downloadToClient(\n      JSON.stringify(json),\n      \"gemma-model.json\",\n      \"application/json\"\n    );\n    return json;\n  };\n\n  downloadSourceCode = async () => {\n    const _addToZip = (root: JSZip, dir: SourceDirectory) => {\n      const newRoot = root.folder(dir.name)!;\n\n      for (const item of dir.items) {\n        item.when({\n          file: (f) => newRoot.file(f.name, f.content),\n          dir: (d) => _addToZip(newRoot, d),\n        });\n      }\n    };\n\n    const zip = new JSZip();\n    const sourceCode = this.globalData.generateSourceCode;\n    _addToZip(zip, sourceCode);\n\n    const content = await zip.generateAsync({ type: \"blob\" });\n\n    downloadToClient(\n      content,\n      \"gemma-grafcet-source-code.zip\",\n      \"application/zip\"\n    );\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeModel, NodeData } from \"../node/node-model\";\nimport { useStore } from \"../App\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props2 = {\n  children: React.ReactNode;\n};\n\nexport const PropertiesTable = observer(({ children }: Props2) => {\n  return (\n    <PropertiesTableStyled>\n      <thead>\n        <tr>\n          <td>Property</td>\n          <td>Value</td>\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </PropertiesTableStyled>\n  );\n});\n\ntype Props<D extends NodeData<D, any, any>> = {\n  self: NodeModel<D, any, any>;\n};\n\nexport const PropertiesTableNode = observer(\n  <D extends NodeData<D, any, any>>({ self }: Props<D>) => {\n    const rootStore = useStore();\n    return (\n      <div className=\"col\">\n        <PropertiesTable>\n          {Object.entries(self.data.spec).map(([k, v]) => (\n            <tr key={k}>\n              <td>{k}</td>\n              <td>\n                <v.plotField name={k} model={self.data as any} />\n              </td>\n            </tr>\n          ))}\n        </PropertiesTable>\n        <div style={{ margin: \"0 3px\" }}>\n          {self.data.nInputs !== 0 && (\n            <div className=\"row\" key=\"inputs\" style={{ alignItems: \"center\" }}>\n              <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Inputs:</h4>\n              <div style={{ flex: 1 }}>\n                {self.inputs.map((v) => (\n                  <Button\n                    onClick={() => rootStore.selectConnection(v as any)}\n                    key={v.from.key}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    style={{ minWidth: \"39px\" }}\n                  >\n                    {v.from.name}\n                  </Button>\n                ))}\n                {self.inputs.length === 0 && \"No inputs\"}\n              </div>\n            </div>\n          )}\n          <div className=\"row\" key=\"outputs\" style={{ alignItems: \"center\" }}>\n            <h4 style={{ margin: \"3px 0 5px 0\", width: \"90px\" }}>Outputs:</h4>\n            <div style={{ flex: 1 }}>\n              {self.outputs.map((v) => (\n                <Button\n                  onClick={() => rootStore.selectConnection(v as any)}\n                  key={v.to.key}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  style={{ minWidth: \"39px\" }}\n                >\n                  {v.to.name}\n                </Button>\n              ))}\n              {self.outputs.length === 0 && \"No outputs\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nconst PropertiesTableStyled = styled.table`\n  padding-bottom: 10px;\n  thead {\n    font-size: 1.1em;\n    font-weight: bolder;\n    tr td:last-child {\n      padding: 4px 0px 4px 10px;\n    }\n  }\n  tr td {\n    padding: 0;\n  }\n  tr td:first-child {\n    padding-right: 15px;\n    height: 32px;\n  }\n  tr td:last-child {\n    margin: auto auto;\n    padding-left: 10px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-self: center;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { Resizable } from \"re-resizable\";\nimport React from \"react\";\nimport { resizableEnable } from \"../utils\";\nimport { PropertiesTableNode } from \"./properties-table\";\nimport { useStore } from \"../App\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./properties-view.css\";\n\ntype Props = {};\n\nexport const PropertiesView: React.FC<Props> = observer(() => {\n  const rootStore = useStore();\n\n  let inner;\n  if (rootStore.selectedNode != null) {\n    const selectedNode = rootStore.selectedNode;\n    const selectedConnection = rootStore.selectedConnection;\n    inner = (\n      <div\n        style={{\n          overflow: \"auto\",\n          maxHeight: \"100%\",\n          maxWidth: \"100%\",\n          justifyContent: \"space-around\",\n          backgroundColor: \"#fafafa\",\n          display: \"flex\",\n        }}\n        className=\"row\"\n      >\n        <div\n          className=\"properties-view\"\n          key=\"node-properties\"\n          id=\"node-properties\"\n        >\n          <div\n            className=\"row\"\n            style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n          >\n            <h3 style={{ margin: \"5px 0px 10px 5px\" }}>\n              {`Step: ${selectedNode.name}`}\n            </h3>\n            <IconButton\n              onClick={(_) => {\n                if (selectedNode.isHidden) {\n                  rootStore.activateNode(selectedNode);\n                } else {\n                  rootStore.removeNode(selectedNode);\n                }\n              }}\n            >\n              <FontAwesomeIcon\n                icon={selectedNode.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                color={\"#000\"}\n              />\n            </IconButton>\n          </div>\n          <PropertiesTableNode self={rootStore.selectedNode} />\n        </div>\n        <div\n          className=\"properties-view\"\n          key=\"connection-properties\"\n          id=\"connection-properties\"\n        >\n          {selectedConnection !== undefined && (\n            <div className=\"col\">\n              <div\n                className=\"row\"\n                style={{\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3 style={{ margin: \"5px 0 10px 5px\" }}>\n                  {`Transition: ${selectedConnection.from.name} -> ${selectedConnection.to.name}`}\n                </h3>\n                <IconButton\n                  onClick={(_) => {\n                    if (selectedConnection.isHidden) {\n                      rootStore.activateConnection(selectedConnection);\n                    } else {\n                      rootStore.removeConnection(selectedConnection);\n                    }\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={selectedConnection.isHidden ? \"eye\" : \"eye-slash\"} //trash-alt\n                    color={\"#000\"}\n                  />\n                </IconButton>\n              </div>\n              <selectedConnection.data.ConnectionView />\n            </div>\n          )}\n        </div>\n        <div\n          style={{ minWidth: \"270px\" }}\n          className=\"properties-view\"\n          key=\"graph-properties\"\n          id=\"graph-properties\"\n        >\n          <rootStore.globalData.View />\n        </div>\n      </div>\n    );\n  } else {\n    inner = (\n      <div style={{ width: \"150px\" }} className=\"row\">\n        <div style={{ width: \"150px\" }} className=\"center\">\n          Not selected\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Resizable\n      minHeight={200}\n      defaultSize={{ height: 295, width: \"auto\" }}\n      style={{\n        position: \"relative\",\n        background: \"white\",\n        boxShadow: \"0 1px 4px 1px #eee\",\n        border: \"1px solid #eee\",\n      }}\n      enable={resizableEnable({ top: true })}\n    >\n      {inner}\n    </Resizable>\n  );\n});\n","export class VarId {\n  constructor(public text: string) {}\n\n  toString(): string {\n    return this.text;\n  }\n}\n\nexport type CustomToken =\n  | \"(\"\n  | \")\"\n  | \"AND\"\n  | \"OR\"\n  | \"NOT\"\n  | \"<\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"\\n\"\n  | VarId;\n\nexport const getCustomTokens = (t: string): [CustomToken, number][] => {\n  const l: [CustomToken, number][] = [];\n  let i = -1;\n  let omit = 0;\n  let signal = \"\";\n  const addSignal = () => {\n    if (signal.length !== 0) {\n      l.push([new VarId(signal), i - signal.length]);\n      signal = \"\";\n    }\n  };\n  const add = (v: CustomToken) => {\n    addSignal();\n    l.push([v, i]);\n  };\n\n  for (const c of t) {\n    i++;\n    if (omit !== 0) {\n      omit--;\n      continue;\n    }\n    switch (c) {\n      case \" \":\n        addSignal();\n        break;\n      case \"\\n\":\n      case \")\":\n      case \"(\":\n      case \"<\":\n      case \">\":\n        add(c);\n        break;\n      case \"=\":\n        const prevToken = l[l.length - 1];\n        const prev = prevToken[0];\n        const strPrev = prev instanceof VarId ? prev.text : prev;\n        if ([\"<\", \">\"].includes(strPrev) && prevToken[1] === i - 1) {\n          l[l.length - 1][0] = (prev + \"=\") as any;\n        } else {\n          add(c);\n        }\n        break;\n      case \"A\":\n        if (t.substring(i, i + 3) === \"AND\") {\n          omit = 2;\n          add(\"AND\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"O\":\n        if (t.substring(i, i + 2) === \"OR\") {\n          omit = 1;\n          add(\"OR\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      case \"N\":\n        if (t.substring(i, i + 3) === \"NOT\") {\n          omit = 2;\n          add(\"NOT\");\n          continue;\n        }\n      // ignore: no-fallthrough\n      default:\n        signal += c;\n        break;\n    }\n  }\n  if (signal.length !== 0) {\n    l.push([new VarId(signal), i - signal.length + 1]);\n  }\n  return l;\n};\n\ntype ParseR = { ok: boolean };\n\n// type Conv = (tokens: Token[]) => ParseR;\n\n// const _union = (fs: Array<Conv>) => {};\n\n// const _find = (token: Token): Conv => {\n//   return (ts) => {\n//     return { ok: ts[0] == token };\n//   };\n// };\n\ntype Item = (CustomToken | Union)[];\n\ntype ExpType = \"VarId\" | \"comp\" | \"and\" | \"simpleExp\" | \"numOP\";\n\nclass Union {\n  constructor(\n    items: Partial<{ [key in ExpType]: (CustomToken | \"SELF\" | Union)[] }>\n  ) {\n    this.variants = Object.values(items).map((l) => {\n      return l!.map((v) => (v === \"SELF\" ? this : v));\n    });\n  }\n  variants: Item[];\n}\n\n// type Val = Item | Union;\n\n// type Expression<V extends { [key: string]: Token }> = {\n//   name: ExpType;\n//   tokens: Item;\n//   p: (t: Token[]) => V;\n// };\n\n// export const getCustomParse = (tokens: Token[]) => {\n//   const varId: Expression<{ varId: VarId }> = {\n//     name: \"VarId\",\n//     p: (t) => ({ varId: t[0] as VarId }),\n//     tokens: [new VarId(\"\")],\n//   };\n\n//   const numSimple = new Union({\n//     VarId: [new VarId(\"\")], //TODO: decimal\n//   });\n\n//   const comparator = new Union([[\"<\"], [\">\"], [\"=\"], [\"<=\"], [\">=\"]]);\n\n//   const expSimple = new Union([\n//     [numSimple, comparator, numSimple],\n//     [new VarId(\"\")],\n//   ]);\n\n//   const expAnd = new Union([[expSimple, \"AND\", \"SELF\"], [expSimple]]);\n\n//   const exp = new Union([\n//     [\"(\", \"SELF\", \")\"],\n//     [\"NOT\", \"SELF\"],\n//     [expAnd, \"OR\", \"SELF\"],\n//     [expAnd],\n//   ]);\n\n//   for (const t of tokens) {\n//     matchPossibilities(t, exp);\n//   }\n// };\n\n// const matchPossibilities = (t: Token, possibilities: Union): void => {\n//   let i = -1;\n//   for (const variant of possibilities.variants) {\n//     i++;\n\n//     const curr = variant.pop();\n//     if (curr === undefined) {\n//     } else if (typeof curr == \"string\") {\n//       if (t == curr) {\n//       }\n//     } else if (curr instanceof Union) {\n//       matchPossibilities(t, curr);\n//     } else {\n//       if (t instanceof VarId) {\n//       } else {\n//       }\n//     }\n//   }\n// };\n","import { VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { EnclosingStep, MacroStep, SimpleStep, StepType } from \"./step\";\nimport { Transition } from \"./transition\";\nimport { Signal } from \"./signal\";\n\nexport class H {\n  static textOrEmpty = (cond: boolean, text: string) => (cond ? text : \"\");\n}\n\nconst memoryTransitionSuffix = (t: Transition): string => {\n  return `_${t.from.name}_${t.priority}_MEM`;\n};\n\nconst templateCondition = (t: Transition): string => {\n  return t.expressionTokens\n    .map(([tok, _]) => {\n      if (tok instanceof VarId) {\n        // Is signal\n        return (\n          \"GVL.\" +\n          tok.text +\n          (t.savedSignalsWithMemory.has(tok.text)\n            ? memoryTransitionSuffix(t)\n            : \"\")\n        );\n      } else {\n        return tok;\n      }\n    })\n    .join(\" \");\n};\n\nconst templateTransitions = (\n  transitions: Transition[],\n  { isNested }: { isNested: boolean }\n) => {\n  return `\\\n${transitions\n  .map((t, index) => {\n    return `\n${index === 0 ? \"IF\" : \"ELSIF\"} ${templateCondition(t)} THEN\n  State:=${t.to.id};\\\n  ${isNested ? \"\\n  Entry:=TRUE;\" : \"\"}`;\n  })\n  .join(\"\\n\")}\\\n${transitions.length === 0 ? \"\" : \"\\nEND_IF\"}`;\n};\n\nconst templateGemmaGrafcetSimpleStep = (model: SimpleStep): string => {\n  return templateTransitions(model.transitions, { isNested: false });\n};\n\nconst templateFBEntry = (model: MacroStep | EnclosingStep): string => `\\\nIF Entry THEN\n  ${model.name}(Initialization:=ENTRY);\n  Entry:=FALSE;\n${model.transitions\n  .flatMap((t) =>\n    t.signalsWithMemory.map(\n      (sm) =>\n        `  ${sm.value}${memoryTransitionSuffix(t)} := ${\n          sm.behaviour === \"NO\" ? \"FALSE\" : \"TRUE\"\n        };`\n    )\n  )\n  .join(\"\\n\")}\nEND_IF\n${model.name}(Initialization:=ENTRY);`;\n\nconst templateGemmaGrafcetNestedStep = (\n  model: MacroStep | EnclosingStep\n): string => {\n  const transitions = model.transitions;\n  const _evaluateComplete = (t: Transition, index: number): boolean => {\n    const _isInner = transitions.length - model.innerTransitionsLength <= index;\n    switch (model.type) {\n      case StepType.MACRO:\n        return _isInner && !t.isNegated;\n      case StepType.ENCLOSING:\n        return _isInner && t.isNegated;\n    }\n    throw new Error(\"\");\n  };\n\n  return `\n${templateFBEntry(model)}\n\n${transitions\n  .map((t, index) => {\n    const condition = `${templateCondition(t)}${\n      _evaluateComplete(t, index) ? ` AND ${model.name}.Complete` : \"\"\n    }`;\n    return `\\\n${index === 0 ? \"IF\" : \"ELSIF\"} ${condition} THEN\n  State:=${t.to.id};\n  Entry:=TRUE;\n`;\n  })\n  .join(\"\\n\")}\\\n${H.textOrEmpty(transitions.length !== 0, \"\\nEND_IF\")}`;\n};\n\nexport const templateGlobals = (signals: Array<Signal>): string => {\n  return `\\\nVAR_GLOBAL\n    ${signals\n      .map((s) => {\n        const defaultValue =\n          s.defaultValue.trim().length === 0 ? \"\" : \" :=\" + s.defaultValue;\n        return `${s.name} : ${s.type.toUpperCase()}${defaultValue};`;\n      })\n      .join(\"\\n    \")}\nEND_VAR\n`;\n};\n\nexport const templateGemmaGrafcet = (model: GemmaGrafcet): string => {\n  return `\n// Variable declaration\nVAR\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .map((s) => `  ${s.name}:${s.name}_FB;`)\n  .join(\"\\n\")}\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map((sm) => {\n      const assign = sm.behaviour === \"NO\" ? \"FALSE\" : \"TRUE\";\n      return `  ${sm.value}${memoryTransitionSuffix(t)}:BOOL:=${assign};`;\n    })\n  )\n  .join(\"    \\n\")}\n\n  State:UINT:=${model.initialStep?.id};\n  Entry:BOOL:=TRUE;\nEND_VAR\n\n// Program behavior\nCASE State OF\n  ${model.steps\n    .map((step) => {\n      return `\n  ${step.id}: //State ${step.name}\n    ${(() => {\n      switch (step.type) {\n        case StepType.SIMPLE:\n          return templateGemmaGrafcetSimpleStep(step);\n        case StepType.ENCLOSING:\n        case StepType.MACRO:\n          return templateGemmaGrafcetNestedStep(step);\n        default:\n          throw new Error(\"\");\n      }\n    })().replace(/\\n/g, \"\\n    \")}\n  `;\n    })\n    .join(\"\\n\")}\nEND_CASE\n\n${model.steps\n  .filter((s) => s.type === StepType.ENCLOSING || s.type === StepType.MACRO)\n  .flatMap((s) => s.transitions)\n  .flatMap((t) =>\n    t.signalsWithMemory.map((sm) => {\n      const prefix = sm.behaviour === \"NC\" ? \"NOT \" : \"\";\n      const assign = sm.behaviour === \"NO\" ? \"TRUE\" : \"FALSE\";\n      return `\\\nIF State = ${t.from.id} AND ${prefix}GVL.${sm.value} THEN\n  ${sm.value}${memoryTransitionSuffix(t)} := ${assign};\nEND_IF\n`;\n    })\n  )\n  .join(\"\\n\")}\n`;\n};\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { CharStream } from \"antlr4ts/CharStream\";\nimport { Lexer } from \"antlr4ts/Lexer\";\nimport { LexerATNSimulator } from \"antlr4ts/atn/LexerATNSimulator\";\nimport { NotNull } from \"antlr4ts/Decorators\";\nimport { Override } from \"antlr4ts/Decorators\";\nimport { RuleContext } from \"antlr4ts/RuleContext\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\n\nexport class SimpleBooleanLexer extends Lexer {\n\tpublic static readonly AND = 1;\n\tpublic static readonly OR = 2;\n\tpublic static readonly NOT = 3;\n\tpublic static readonly TRUE = 4;\n\tpublic static readonly FALSE = 5;\n\tpublic static readonly GT = 6;\n\tpublic static readonly GE = 7;\n\tpublic static readonly LT = 8;\n\tpublic static readonly LE = 9;\n\tpublic static readonly EQ = 10;\n\tpublic static readonly LPAREN = 11;\n\tpublic static readonly RPAREN = 12;\n\tpublic static readonly DECIMAL = 13;\n\tpublic static readonly IDENTIFIER = 14;\n\tpublic static readonly WS = 15;\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly channelNames: string[] = [\n\t\t\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\n\t];\n\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly modeNames: string[] = [\n\t\t\"DEFAULT_MODE\",\n\t];\n\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \"EQ\", \"LPAREN\", \n\t\t\"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, \"'AND'\", \"'OR'\", \"'NOT'\", \"'TRUE'\", \"'FALSE'\", \"'>'\", \"'>='\", \n\t\t\"'<'\", \"'<='\", \"'='\", \"'('\", \"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \n\t\t\"EQ\", \"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleBooleanLexer._LITERAL_NAMES, SimpleBooleanLexer._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn SimpleBooleanLexer.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\n\tconstructor(input: CharStream) {\n\t\tsuper(input);\n\t\tthis._interp = new LexerATNSimulator(SimpleBooleanLexer._ATN, this);\n\t}\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"SimpleBoolean.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return SimpleBooleanLexer.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return SimpleBooleanLexer._serializedATN; }\n\n\t// @Override\n\tpublic get channelNames(): string[] { return SimpleBooleanLexer.channelNames; }\n\n\t// @Override\n\tpublic get modeNames(): string[] { return SimpleBooleanLexer.modeNames; }\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02\\x11e\\b\\x01\\x04\" +\n\t\t\"\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\" +\n\t\t\"\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\" +\n\t\t\"\\x04\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x03\\x02\\x03\\x02\\x03\\x02\\x03\" +\n\t\t\"\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x05\\x03\" +\n\t\t\"\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\" +\n\t\t\"\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\n\\x03\\n\\x03\\n\\x03\" +\n\t\t\"\\v\\x03\\v\\x03\\f\\x03\\f\\x03\\r\\x03\\r\\x03\\x0E\\x05\\x0EI\\n\\x0E\\x03\\x0E\\x06\\x0E\" +\n\t\t\"L\\n\\x0E\\r\\x0E\\x0E\\x0EM\\x03\\x0E\\x03\\x0E\\x06\\x0ER\\n\\x0E\\r\\x0E\\x0E\\x0ES\\x05\" +\n\t\t\"\\x0EV\\n\\x0E\\x03\\x0F\\x03\\x0F\\x07\\x0FZ\\n\\x0F\\f\\x0F\\x0E\\x0F]\\v\\x0F\\x03\\x10\" +\n\t\t\"\\x06\\x10`\\n\\x10\\r\\x10\\x0E\\x10a\\x03\\x10\\x03\\x10\\x02\\x02\\x02\\x11\\x03\\x02\" +\n\t\t\"\\x03\\x05\\x02\\x04\\x07\\x02\\x05\\t\\x02\\x06\\v\\x02\\x07\\r\\x02\\b\\x0F\\x02\\t\\x11\" +\n\t\t\"\\x02\\n\\x13\\x02\\v\\x15\\x02\\f\\x17\\x02\\r\\x19\\x02\\x0E\\x1B\\x02\\x0F\\x1D\\x02\\x10\" +\n\t\t\"\\x1F\\x02\\x11\\x03\\x02\\x06\\x03\\x022;\\x05\\x02C\\\\aac|\\x06\\x022;C\\\\aac|\\x05\" +\n\t\t\"\\x02\\v\\f\\x0E\\x0F\\\"\\\"\\x02j\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x02\\x07\\x03\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\r\\x03\\x02\\x02\\x02\\x02\\x0F\\x03\\x02\\x02\\x02\\x02\\x11\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x13\\x03\\x02\\x02\\x02\\x02\\x15\\x03\\x02\\x02\\x02\\x02\\x17\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x19\\x03\\x02\\x02\\x02\\x02\\x1B\\x03\\x02\\x02\\x02\\x02\\x1D\\x03\\x02\\x02\\x02\" +\n\t\t\"\\x02\\x1F\\x03\\x02\\x02\\x02\\x03!\\x03\\x02\\x02\\x02\\x05%\\x03\\x02\\x02\\x02\\x07\" +\n\t\t\"(\\x03\\x02\\x02\\x02\\t,\\x03\\x02\\x02\\x02\\v1\\x03\\x02\\x02\\x02\\r7\\x03\\x02\\x02\" +\n\t\t\"\\x02\\x0F9\\x03\\x02\\x02\\x02\\x11<\\x03\\x02\\x02\\x02\\x13>\\x03\\x02\\x02\\x02\\x15\" +\n\t\t\"A\\x03\\x02\\x02\\x02\\x17C\\x03\\x02\\x02\\x02\\x19E\\x03\\x02\\x02\\x02\\x1BH\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x1DW\\x03\\x02\\x02\\x02\\x1F_\\x03\\x02\\x02\\x02!\\\"\\x07C\\x02\\x02\\\"#\" +\n\t\t\"\\x07P\\x02\\x02#$\\x07F\\x02\\x02$\\x04\\x03\\x02\\x02\\x02%&\\x07Q\\x02\\x02&\\'\\x07\" +\n\t\t\"T\\x02\\x02\\'\\x06\\x03\\x02\\x02\\x02()\\x07P\\x02\\x02)*\\x07Q\\x02\\x02*+\\x07V\\x02\" +\n\t\t\"\\x02+\\b\\x03\\x02\\x02\\x02,-\\x07V\\x02\\x02-.\\x07T\\x02\\x02./\\x07W\\x02\\x02/\" +\n\t\t\"0\\x07G\\x02\\x020\\n\\x03\\x02\\x02\\x0212\\x07H\\x02\\x0223\\x07C\\x02\\x0234\\x07\" +\n\t\t\"N\\x02\\x0245\\x07U\\x02\\x0256\\x07G\\x02\\x026\\f\\x03\\x02\\x02\\x0278\\x07@\\x02\" +\n\t\t\"\\x028\\x0E\\x03\\x02\\x02\\x029:\\x07@\\x02\\x02:;\\x07?\\x02\\x02;\\x10\\x03\\x02\\x02\" +\n\t\t\"\\x02<=\\x07>\\x02\\x02=\\x12\\x03\\x02\\x02\\x02>?\\x07>\\x02\\x02?@\\x07?\\x02\\x02\" +\n\t\t\"@\\x14\\x03\\x02\\x02\\x02AB\\x07?\\x02\\x02B\\x16\\x03\\x02\\x02\\x02CD\\x07*\\x02\\x02\" +\n\t\t\"D\\x18\\x03\\x02\\x02\\x02EF\\x07+\\x02\\x02F\\x1A\\x03\\x02\\x02\\x02GI\\x07/\\x02\\x02\" +\n\t\t\"HG\\x03\\x02\\x02\\x02HI\\x03\\x02\\x02\\x02IK\\x03\\x02\\x02\\x02JL\\t\\x02\\x02\\x02\" +\n\t\t\"KJ\\x03\\x02\\x02\\x02LM\\x03\\x02\\x02\\x02MK\\x03\\x02\\x02\\x02MN\\x03\\x02\\x02\\x02\" +\n\t\t\"NU\\x03\\x02\\x02\\x02OQ\\x070\\x02\\x02PR\\t\\x02\\x02\\x02QP\\x03\\x02\\x02\\x02RS\" +\n\t\t\"\\x03\\x02\\x02\\x02SQ\\x03\\x02\\x02\\x02ST\\x03\\x02\\x02\\x02TV\\x03\\x02\\x02\\x02\" +\n\t\t\"UO\\x03\\x02\\x02\\x02UV\\x03\\x02\\x02\\x02V\\x1C\\x03\\x02\\x02\\x02W[\\t\\x03\\x02\" +\n\t\t\"\\x02XZ\\t\\x04\\x02\\x02YX\\x03\\x02\\x02\\x02Z]\\x03\\x02\\x02\\x02[Y\\x03\\x02\\x02\" +\n\t\t\"\\x02[\\\\\\x03\\x02\\x02\\x02\\\\\\x1E\\x03\\x02\\x02\\x02][\\x03\\x02\\x02\\x02^`\\t\\x05\" +\n\t\t\"\\x02\\x02_^\\x03\\x02\\x02\\x02`a\\x03\\x02\\x02\\x02a_\\x03\\x02\\x02\\x02ab\\x03\\x02\" +\n\t\t\"\\x02\\x02bc\\x03\\x02\\x02\\x02cd\\b\\x10\\x02\\x02d \\x03\\x02\\x02\\x02\\t\\x02HMS\" +\n\t\t\"U[a\\x03\\b\\x02\\x02\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!SimpleBooleanLexer.__ATN) {\n\t\t\tSimpleBooleanLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleBooleanLexer._serializedATN));\n\t\t}\n\n\t\treturn SimpleBooleanLexer.__ATN;\n\t}\n\n}\n\n","/* eslint-disable */\n// Generated from ./src/step/SimpleBoolean.g4 by ANTLR 4.7.3-SNAPSHOT\n// @ts-nocheck\n// @ts-ignore\n\nimport { ATN } from \"antlr4ts/atn/ATN\";\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\nimport { Parser } from \"antlr4ts/Parser\";\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\nimport { Token } from \"antlr4ts/Token\";\nimport { TokenStream } from \"antlr4ts/TokenStream\";\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\n\nimport * as Utils from \"antlr4ts/misc/Utils\";\n\nimport { SimpleBooleanListener } from \"./SimpleBooleanListener\";\nimport { SimpleBooleanVisitor } from \"./SimpleBooleanVisitor\";\n\n\nexport class SimpleBooleanParser extends Parser {\n\tpublic static readonly AND = 1;\n\tpublic static readonly OR = 2;\n\tpublic static readonly NOT = 3;\n\tpublic static readonly TRUE = 4;\n\tpublic static readonly FALSE = 5;\n\tpublic static readonly GT = 6;\n\tpublic static readonly GE = 7;\n\tpublic static readonly LT = 8;\n\tpublic static readonly LE = 9;\n\tpublic static readonly EQ = 10;\n\tpublic static readonly LPAREN = 11;\n\tpublic static readonly RPAREN = 12;\n\tpublic static readonly DECIMAL = 13;\n\tpublic static readonly IDENTIFIER = 14;\n\tpublic static readonly WS = 15;\n\tpublic static readonly RULE_parse = 0;\n\tpublic static readonly RULE_expression = 1;\n\tpublic static readonly RULE_expressionAnd = 2;\n\tpublic static readonly RULE_expressionSimple = 3;\n\tpublic static readonly RULE_numExpression = 4;\n\tpublic static readonly RULE_comparator = 5;\n\t// tslint:disable:no-trailing-whitespace\n\tpublic static readonly ruleNames: string[] = [\n\t\t\"parse\", \"expression\", \"expressionAnd\", \"expressionSimple\", \"numExpression\", \n\t\t\"comparator\",\n\t];\n\n\tprivate static readonly _LITERAL_NAMES: Array<string | undefined> = [\n\t\tundefined, \"'AND'\", \"'OR'\", \"'NOT'\", \"'TRUE'\", \"'FALSE'\", \"'>'\", \"'>='\", \n\t\t\"'<'\", \"'<='\", \"'='\", \"'('\", \"')'\",\n\t];\n\tprivate static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\n\t\tundefined, \"AND\", \"OR\", \"NOT\", \"TRUE\", \"FALSE\", \"GT\", \"GE\", \"LT\", \"LE\", \n\t\t\"EQ\", \"LPAREN\", \"RPAREN\", \"DECIMAL\", \"IDENTIFIER\", \"WS\",\n\t];\n\tpublic static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SimpleBooleanParser._LITERAL_NAMES, SimpleBooleanParser._SYMBOLIC_NAMES, []);\n\n\t// @Override\n\t// @NotNull\n\tpublic get vocabulary(): Vocabulary {\n\t\treturn SimpleBooleanParser.VOCABULARY;\n\t}\n\t// tslint:enable:no-trailing-whitespace\n\n\t// @Override\n\tpublic get grammarFileName(): string { return \"SimpleBoolean.g4\"; }\n\n\t// @Override\n\tpublic get ruleNames(): string[] { return SimpleBooleanParser.ruleNames; }\n\n\t// @Override\n\tpublic get serializedATN(): string { return SimpleBooleanParser._serializedATN; }\n\n\tconstructor(input: TokenStream) {\n\t\tsuper(input);\n\t\tthis._interp = new ParserATNSimulator(SimpleBooleanParser._ATN, this);\n\t}\n\t// @RuleVersion(0)\n\tpublic parse(): ParseContext {\n\t\tlet _localctx: ParseContext = new ParseContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 0, SimpleBooleanParser.RULE_parse);\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 12;\n\t\t\tthis.expression();\n\t\t\tthis.state = 13;\n\t\t\tthis.match(SimpleBooleanParser.EOF);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expression(): ExpressionContext {\n\t\tlet _localctx: ExpressionContext = new ExpressionContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 2, SimpleBooleanParser.RULE_expression);\n\t\ttry {\n\t\t\tthis.state = 22;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 0, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new NotExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 15;\n\t\t\t\tthis.match(SimpleBooleanParser.NOT);\n\t\t\t\tthis.state = 16;\n\t\t\t\tthis.expression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new OrExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 17;\n\t\t\t\t(_localctx as OrExpressionContext)._left = this.expressionAnd();\n\t\t\t\tthis.state = 18;\n\t\t\t\tthis.match(SimpleBooleanParser.OR);\n\t\t\t\tthis.state = 19;\n\t\t\t\t(_localctx as OrExpressionContext)._right = this.expression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_localctx = new AndParentExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\n\t\t\t\t{\n\t\t\t\tthis.state = 21;\n\t\t\t\tthis.expressionAnd();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\tlet _localctx: ExpressionAndContext = new ExpressionAndContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 4, SimpleBooleanParser.RULE_expressionAnd);\n\t\ttry {\n\t\t\tthis.state = 29;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 1, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new AndExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 24;\n\t\t\t\t(_localctx as AndExpressionContext)._left = this.expressionSimple();\n\t\t\t\tthis.state = 25;\n\t\t\t\tthis.match(SimpleBooleanParser.AND);\n\t\t\t\tthis.state = 26;\n\t\t\t\t(_localctx as AndExpressionContext)._right = this.expressionAnd();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new SimpleExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 28;\n\t\t\t\tthis.expressionSimple();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\tlet _localctx: ExpressionSimpleContext = new ExpressionSimpleContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 6, SimpleBooleanParser.RULE_expressionSimple);\n\t\ttry {\n\t\t\tthis.state = 40;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch ( this.interpreter.adaptivePredict(this._input, 2, this._ctx) ) {\n\t\t\tcase 1:\n\t\t\t\t_localctx = new ComparatorExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 31;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._left = this.numExpression();\n\t\t\t\tthis.state = 32;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._op = this.comparator();\n\t\t\t\tthis.state = 33;\n\t\t\t\t(_localctx as ComparatorExpressionContext)._right = this.numExpression();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_localctx = new IdentifierExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 35;\n\t\t\t\tthis.match(SimpleBooleanParser.IDENTIFIER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_localctx = new ParenExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 3);\n\t\t\t\t{\n\t\t\t\tthis.state = 36;\n\t\t\t\tthis.match(SimpleBooleanParser.LPAREN);\n\t\t\t\tthis.state = 37;\n\t\t\t\tthis.expression();\n\t\t\t\tthis.state = 38;\n\t\t\t\tthis.match(SimpleBooleanParser.RPAREN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic numExpression(): NumExpressionContext {\n\t\tlet _localctx: NumExpressionContext = new NumExpressionContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 8, SimpleBooleanParser.RULE_numExpression);\n\t\ttry {\n\t\t\tthis.state = 44;\n\t\t\tthis._errHandler.sync(this);\n\t\t\tswitch (this._input.LA(1)) {\n\t\t\tcase SimpleBooleanParser.IDENTIFIER:\n\t\t\t\t_localctx = new IdentifierNumExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tthis.state = 42;\n\t\t\t\tthis.match(SimpleBooleanParser.IDENTIFIER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SimpleBooleanParser.DECIMAL:\n\t\t\t\t_localctx = new DecimalExpressionContext(_localctx);\n\t\t\t\tthis.enterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tthis.state = 43;\n\t\t\t\tthis.match(SimpleBooleanParser.DECIMAL);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\t// @RuleVersion(0)\n\tpublic comparator(): ComparatorContext {\n\t\tlet _localctx: ComparatorContext = new ComparatorContext(this._ctx, this.state);\n\t\tthis.enterRule(_localctx, 10, SimpleBooleanParser.RULE_comparator);\n\t\tlet _la: number;\n\t\ttry {\n\t\t\tthis.enterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tthis.state = 46;\n\t\t\t_la = this._input.LA(1);\n\t\t\tif (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << SimpleBooleanParser.GT) | (1 << SimpleBooleanParser.GE) | (1 << SimpleBooleanParser.LT) | (1 << SimpleBooleanParser.LE) | (1 << SimpleBooleanParser.EQ))) !== 0))) {\n\t\t\tthis._errHandler.recoverInline(this);\n\t\t\t} else {\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis.matchedEOF = true;\n\t\t\t\t}\n\n\t\t\t\tthis._errHandler.reportMatch(this);\n\t\t\t\tthis.consume();\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (re) {\n\t\t\tif (re instanceof RecognitionException) {\n\t\t\t\t_localctx.exception = re;\n\t\t\t\tthis._errHandler.reportError(this, re);\n\t\t\t\tthis._errHandler.recover(this, re);\n\t\t\t} else {\n\t\t\t\tthrow re;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.exitRule();\n\t\t}\n\t\treturn _localctx;\n\t}\n\n\tpublic static readonly _serializedATN: string =\n\t\t\"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03\\x113\\x04\\x02\" +\n\t\t\"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\n\t\t\"\\t\\x07\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\" +\n\t\t\"\\x03\\x03\\x03\\x03\\x05\\x03\\x19\\n\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\" +\n\t\t\"\\x04\\x05\\x04 \\n\\x04\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\" +\n\t\t\"\\x05\\x03\\x05\\x03\\x05\\x05\\x05+\\n\\x05\\x03\\x06\\x03\\x06\\x05\\x06/\\n\\x06\\x03\" +\n\t\t\"\\x07\\x03\\x07\\x03\\x07\\x02\\x02\\x02\\b\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\\x02\" +\n\t\t\"\\f\\x02\\x02\\x03\\x03\\x02\\b\\f\\x022\\x02\\x0E\\x03\\x02\\x02\\x02\\x04\\x18\\x03\\x02\" +\n\t\t\"\\x02\\x02\\x06\\x1F\\x03\\x02\\x02\\x02\\b*\\x03\\x02\\x02\\x02\\n.\\x03\\x02\\x02\\x02\" +\n\t\t\"\\f0\\x03\\x02\\x02\\x02\\x0E\\x0F\\x05\\x04\\x03\\x02\\x0F\\x10\\x07\\x02\\x02\\x03\\x10\" +\n\t\t\"\\x03\\x03\\x02\\x02\\x02\\x11\\x12\\x07\\x05\\x02\\x02\\x12\\x19\\x05\\x04\\x03\\x02\\x13\" +\n\t\t\"\\x14\\x05\\x06\\x04\\x02\\x14\\x15\\x07\\x04\\x02\\x02\\x15\\x16\\x05\\x04\\x03\\x02\\x16\" +\n\t\t\"\\x19\\x03\\x02\\x02\\x02\\x17\\x19\\x05\\x06\\x04\\x02\\x18\\x11\\x03\\x02\\x02\\x02\\x18\" +\n\t\t\"\\x13\\x03\\x02\\x02\\x02\\x18\\x17\\x03\\x02\\x02\\x02\\x19\\x05\\x03\\x02\\x02\\x02\\x1A\" +\n\t\t\"\\x1B\\x05\\b\\x05\\x02\\x1B\\x1C\\x07\\x03\\x02\\x02\\x1C\\x1D\\x05\\x06\\x04\\x02\\x1D\" +\n\t\t\" \\x03\\x02\\x02\\x02\\x1E \\x05\\b\\x05\\x02\\x1F\\x1A\\x03\\x02\\x02\\x02\\x1F\\x1E\\x03\" +\n\t\t\"\\x02\\x02\\x02 \\x07\\x03\\x02\\x02\\x02!\\\"\\x05\\n\\x06\\x02\\\"#\\x05\\f\\x07\\x02#$\" +\n\t\t\"\\x05\\n\\x06\\x02$+\\x03\\x02\\x02\\x02%+\\x07\\x10\\x02\\x02&\\'\\x07\\r\\x02\\x02\\'\" +\n\t\t\"(\\x05\\x04\\x03\\x02()\\x07\\x0E\\x02\\x02)+\\x03\\x02\\x02\\x02*!\\x03\\x02\\x02\\x02\" +\n\t\t\"*%\\x03\\x02\\x02\\x02*&\\x03\\x02\\x02\\x02+\\t\\x03\\x02\\x02\\x02,/\\x07\\x10\\x02\" +\n\t\t\"\\x02-/\\x07\\x0F\\x02\\x02.,\\x03\\x02\\x02\\x02.-\\x03\\x02\\x02\\x02/\\v\\x03\\x02\" +\n\t\t\"\\x02\\x0201\\t\\x02\\x02\\x021\\r\\x03\\x02\\x02\\x02\\x06\\x18\\x1F*.\";\n\tpublic static __ATN: ATN;\n\tpublic static get _ATN(): ATN {\n\t\tif (!SimpleBooleanParser.__ATN) {\n\t\t\tSimpleBooleanParser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SimpleBooleanParser._serializedATN));\n\t\t}\n\n\t\treturn SimpleBooleanParser.__ATN;\n\t}\n\n}\n\nexport class ParseContext extends ParserRuleContext {\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tpublic EOF(): TerminalNode { return this.getToken(SimpleBooleanParser.EOF, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_parse; }\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterParse) {\n\t\t\tlistener.enterParse(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitParse) {\n\t\t\tlistener.exitParse(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitParse) {\n\t\t\treturn visitor.visitParse(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expression; }\n\tpublic copyFrom(ctx: ExpressionContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class NotExpressionContext extends ExpressionContext {\n\tpublic NOT(): TerminalNode { return this.getToken(SimpleBooleanParser.NOT, 0); }\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterNotExpression) {\n\t\t\tlistener.enterNotExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitNotExpression) {\n\t\t\tlistener.exitNotExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitNotExpression) {\n\t\t\treturn visitor.visitNotExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class OrExpressionContext extends ExpressionContext {\n\tpublic _left: ExpressionAndContext;\n\tpublic _right: ExpressionContext;\n\tpublic OR(): TerminalNode { return this.getToken(SimpleBooleanParser.OR, 0); }\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterOrExpression) {\n\t\t\tlistener.enterOrExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitOrExpression) {\n\t\t\tlistener.exitOrExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitOrExpression) {\n\t\t\treturn visitor.visitOrExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class AndParentExpressionContext extends ExpressionContext {\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tconstructor(ctx: ExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterAndParentExpression) {\n\t\t\tlistener.enterAndParentExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitAndParentExpression) {\n\t\t\tlistener.exitAndParentExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitAndParentExpression) {\n\t\t\treturn visitor.visitAndParentExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionAndContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expressionAnd; }\n\tpublic copyFrom(ctx: ExpressionAndContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class AndExpressionContext extends ExpressionAndContext {\n\tpublic _left: ExpressionSimpleContext;\n\tpublic _right: ExpressionAndContext;\n\tpublic AND(): TerminalNode { return this.getToken(SimpleBooleanParser.AND, 0); }\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\treturn this.getRuleContext(0, ExpressionSimpleContext);\n\t}\n\tpublic expressionAnd(): ExpressionAndContext {\n\t\treturn this.getRuleContext(0, ExpressionAndContext);\n\t}\n\tconstructor(ctx: ExpressionAndContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterAndExpression) {\n\t\t\tlistener.enterAndExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitAndExpression) {\n\t\t\tlistener.exitAndExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitAndExpression) {\n\t\t\treturn visitor.visitAndExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class SimpleExpressionContext extends ExpressionAndContext {\n\tpublic expressionSimple(): ExpressionSimpleContext {\n\t\treturn this.getRuleContext(0, ExpressionSimpleContext);\n\t}\n\tconstructor(ctx: ExpressionAndContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterSimpleExpression) {\n\t\t\tlistener.enterSimpleExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitSimpleExpression) {\n\t\t\tlistener.exitSimpleExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitSimpleExpression) {\n\t\t\treturn visitor.visitSimpleExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ExpressionSimpleContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_expressionSimple; }\n\tpublic copyFrom(ctx: ExpressionSimpleContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class ComparatorExpressionContext extends ExpressionSimpleContext {\n\tpublic _left: NumExpressionContext;\n\tpublic _op: ComparatorContext;\n\tpublic _right: NumExpressionContext;\n\tpublic numExpression(): NumExpressionContext[];\n\tpublic numExpression(i: number): NumExpressionContext;\n\tpublic numExpression(i?: number): NumExpressionContext | NumExpressionContext[] {\n\t\tif (i === undefined) {\n\t\t\treturn this.getRuleContexts(NumExpressionContext);\n\t\t} else {\n\t\t\treturn this.getRuleContext(i, NumExpressionContext);\n\t\t}\n\t}\n\tpublic comparator(): ComparatorContext {\n\t\treturn this.getRuleContext(0, ComparatorContext);\n\t}\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterComparatorExpression) {\n\t\t\tlistener.enterComparatorExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitComparatorExpression) {\n\t\t\tlistener.exitComparatorExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitComparatorExpression) {\n\t\t\treturn visitor.visitComparatorExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class IdentifierExpressionContext extends ExpressionSimpleContext {\n\tpublic IDENTIFIER(): TerminalNode { return this.getToken(SimpleBooleanParser.IDENTIFIER, 0); }\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterIdentifierExpression) {\n\t\t\tlistener.enterIdentifierExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitIdentifierExpression) {\n\t\t\tlistener.exitIdentifierExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitIdentifierExpression) {\n\t\t\treturn visitor.visitIdentifierExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class ParenExpressionContext extends ExpressionSimpleContext {\n\tpublic LPAREN(): TerminalNode { return this.getToken(SimpleBooleanParser.LPAREN, 0); }\n\tpublic expression(): ExpressionContext {\n\t\treturn this.getRuleContext(0, ExpressionContext);\n\t}\n\tpublic RPAREN(): TerminalNode { return this.getToken(SimpleBooleanParser.RPAREN, 0); }\n\tconstructor(ctx: ExpressionSimpleContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterParenExpression) {\n\t\t\tlistener.enterParenExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitParenExpression) {\n\t\t\tlistener.exitParenExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitParenExpression) {\n\t\t\treturn visitor.visitParenExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class NumExpressionContext extends ParserRuleContext {\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_numExpression; }\n\tpublic copyFrom(ctx: NumExpressionContext): void {\n\t\tsuper.copyFrom(ctx);\n\t}\n}\nexport class IdentifierNumExpressionContext extends NumExpressionContext {\n\tpublic IDENTIFIER(): TerminalNode { return this.getToken(SimpleBooleanParser.IDENTIFIER, 0); }\n\tconstructor(ctx: NumExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterIdentifierNumExpression) {\n\t\t\tlistener.enterIdentifierNumExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitIdentifierNumExpression) {\n\t\t\tlistener.exitIdentifierNumExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitIdentifierNumExpression) {\n\t\t\treturn visitor.visitIdentifierNumExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\nexport class DecimalExpressionContext extends NumExpressionContext {\n\tpublic DECIMAL(): TerminalNode { return this.getToken(SimpleBooleanParser.DECIMAL, 0); }\n\tconstructor(ctx: NumExpressionContext) {\n\t\tsuper(ctx.parent, ctx.invokingState);\n\t\tthis.copyFrom(ctx);\n\t}\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterDecimalExpression) {\n\t\t\tlistener.enterDecimalExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitDecimalExpression) {\n\t\t\tlistener.exitDecimalExpression(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitDecimalExpression) {\n\t\t\treturn visitor.visitDecimalExpression(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\nexport class ComparatorContext extends ParserRuleContext {\n\tpublic GT(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.GT, 0); }\n\tpublic GE(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.GE, 0); }\n\tpublic LT(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.LT, 0); }\n\tpublic LE(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.LE, 0); }\n\tpublic EQ(): TerminalNode | undefined { return this.tryGetToken(SimpleBooleanParser.EQ, 0); }\n\tconstructor(parent: ParserRuleContext | undefined, invokingState: number) {\n\t\tsuper(parent, invokingState);\n\t}\n\t// @Override\n\tpublic get ruleIndex(): number { return SimpleBooleanParser.RULE_comparator; }\n\t// @Override\n\tpublic enterRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.enterComparator) {\n\t\t\tlistener.enterComparator(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic exitRule(listener: SimpleBooleanListener): void {\n\t\tif (listener.exitComparator) {\n\t\t\tlistener.exitComparator(this);\n\t\t}\n\t}\n\t// @Override\n\tpublic accept<Result>(visitor: SimpleBooleanVisitor<Result>): Result {\n\t\tif (visitor.visitComparator) {\n\t\t\treturn visitor.visitComparator(this);\n\t\t} else {\n\t\t\treturn visitor.visitChildren(this);\n\t\t}\n\t}\n}\n\n\n","import { JsonType } from \"../canvas/store\";\nimport { action, computed, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { GemmaGrafcet } from \"./gemma\";\n\nenum SignalTypeBase {\n  bool = \"bool\",\n  int = \"int\",\n  uint = \"uint\",\n  real = \"real\",\n}\n\nexport enum SignalType {\n  bool = \"bool\",\n\n  sint = \"sint\",\n  int = \"int\",\n  lint = \"lint\",\n  dint = \"dint\",\n\n  usint = \"usint\",\n  uint = \"uint\",\n  ulint = \"ulint\",\n  udint = \"udint\",\n\n  real = \"real\",\n  lreal = \"lreal\",\n}\n\nenum SignalTypeSize {\n  s = \"s\",\n  i = \"i\",\n  l = \"l\",\n  d = \"d\",\n}\n\nconst signalTypeToPrimitives = (\n  type?: SignalType\n): { base: SignalTypeBase; size: SignalTypeSize } | undefined => {\n  if (type === undefined) {\n    return undefined;\n  }\n  switch (type) {\n    case SignalType.bool:\n      return { base: SignalTypeBase.bool, size: SignalTypeSize.i };\n    case SignalType.real:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.i };\n    case SignalType.lreal:\n      return { base: SignalTypeBase.real, size: SignalTypeSize.l };\n  }\n  let base: SignalTypeBase;\n  let index: number;\n  if (type.startsWith(\"u\")) {\n    base = SignalTypeBase.uint;\n    index = 1;\n  } else {\n    base = SignalTypeBase.int;\n    index = 0;\n  }\n\n  const size = type.charAt(index) as SignalTypeSize;\n\n  if (!Object.keys(SignalTypeSize).includes(size)) {\n    return undefined;\n  }\n\n  return { base, size };\n};\n\nconst signalSizeMap: { [key in SignalTypeBase]: SignalTypeSize[] } = {\n  [SignalType.bool]: [SignalTypeSize.i],\n  [SignalType.int]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.uint]: [...Object.keys(SignalTypeSize)] as SignalTypeSize[],\n  [SignalType.real]: [SignalTypeSize.i, SignalTypeSize.l],\n};\n\nexport const SignalRow = observer(\n  ({\n    signal: s,\n    showDelete,\n    removeSignal,\n  }: {\n    signal: Signal;\n    showDelete: boolean;\n    removeSignal: (s: Signal) => void;\n  }) => {\n    return (\n      <TableRow>\n        <TableCell>\n          <Tooltip\n            title={s.errors[\"Name\"] !== undefined ? s.errors[\"Name\"] : \"\"}\n          >\n            <TextField\n              type=\"text\"\n              value={s.name}\n              onChange={(e) => (s.name = e.target.value)}\n              style={{ width: \"145px\" }}\n              error={s.errors[\"Name\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={Object.keys(SignalTypeBase)}\n            setValue={(v) => s.setTypeBase(v as any)}\n            value={s.typeBase}\n          />\n        </TableCell>\n        <TableCell>\n          <ChoiceField\n            keys={signalSizeMap[s.typeBase]}\n            setValue={(v) => (s.typeSize = v as any)}\n            value={s.typeSize}\n            maxButton={0}\n          />\n        </TableCell>\n        <TableCell>\n          <Tooltip\n            title={\n              s.errors[\"Default Value\"] !== undefined\n                ? s.errors[\"Default Value\"]\n                : \"\"\n            }\n            open={true}\n          >\n            <TextField\n              type={s.typeBase === SignalTypeBase.bool ? \"text\" : \"number\"}\n              value={s.defaultValue}\n              onChange={(e) => {\n                s.defaultValue = e.target.value.replace(/\\s/g, \"\");\n              }}\n              style={{ width: \"70px\" }}\n              error={s.errors[\"Default Value\"] !== undefined}\n            />\n          </Tooltip>\n        </TableCell>\n        {showDelete && (\n          <TableCell align=\"center\">\n            <IconButton onClick={(_) => removeSignal(s)} size=\"small\">\n              <FontAwesomeIcon icon={\"trash-alt\"} color={\"#000\"} />\n            </IconButton>\n          </TableCell>\n        )}\n      </TableRow>\n    );\n  }\n);\n\nconst regexSignalDefaultValid = {\n  [SignalTypeBase.bool]: {\n    regex: /^(TRUE|FALSE)$/,\n    message: 'should be \"TRUE\" or \"FALSE\"',\n  },\n  [SignalTypeBase.int]: {\n    regex: /^(-?[1-9][0-9]*|0)$/,\n    message: \"should be an integer\",\n  },\n  [SignalTypeBase.uint]: {\n    regex: /^([1-9][0-9]*|0)$/,\n    message: \"should be a positive integer\",\n  },\n  [SignalTypeBase.real]: {\n    regex: /^-?[0-9]*\\.?[0-9]+$/,\n    message: \"should be a number\",\n  },\n};\n\nexport class Signal {\n  @observable\n  didBlur: boolean = false;\n\n  @observable\n  name: string;\n  @observable\n  defaultValue: string;\n  @observable\n  typeSize: SignalTypeSize;\n  @observable\n  typeBase: SignalTypeBase;\n  @computed\n  get type(): SignalType {\n    if (this.typeBase === SignalTypeBase.bool) {\n      return SignalType.bool;\n    }\n    const sizeStr = this.typeSize === SignalTypeSize.i ? \"\" : this.typeSize!;\n    if (this.typeBase.startsWith(\"u\")) {\n      return (\"u\" + sizeStr + this.typeBase.substring(1)) as SignalType;\n    } else {\n      return (sizeStr + this.typeBase) as SignalType;\n    }\n  }\n\n  @action.bound\n  setTypeBase = (base: SignalTypeBase) => {\n    this.typeBase = base;\n    if (!signalSizeMap[base].includes(this.typeSize)) {\n      this.typeSize = signalSizeMap[base][0];\n    }\n  };\n\n  @computed\n  get errors() {\n    const name =\n      this.automationSystem.signals.findIndex(\n        (s2) => s2.name === this.name && this !== s2\n      ) !== -1\n        ? \"Duplicate name\"\n        : undefined;\n\n    const validator = regexSignalDefaultValid[this.typeBase];\n    const hasError =\n      this.defaultValue.length !== 0 &&\n      !validator.regex.test(this.defaultValue);\n    const defaultValueError = hasError ? validator.message : undefined;\n\n    return { Name: name, \"Default Value\": defaultValueError };\n  }\n\n  description?: string;\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      name: this.name,\n      type: this.type,\n      defaultValue: this.defaultValue,\n    };\n  }\n\n  static fromJson(\n    automationSystem: GemmaGrafcet,\n    json: JsonType\n  ): Signal | undefined {\n    if (\n      typeof json[\"name\"] === \"string\" &&\n      Object.keys(SignalType).includes(json[\"type\"] as any)\n    ) {\n      return new Signal(automationSystem, json);\n    } else {\n      return undefined;\n    }\n  }\n\n  constructor(\n    private automationSystem: GemmaGrafcet,\n    d?: {\n      name?: string;\n      description?: string;\n      type?: SignalType;\n      defaultValue?: string;\n    }\n  ) {\n    this.name = d?.name ?? \"\";\n    this.description = d?.description;\n    const typePrim = signalTypeToPrimitives(d?.type);\n    this.typeBase = typePrim?.base ?? SignalTypeBase.bool;\n    this.typeSize = typePrim?.size ?? SignalTypeSize.i;\n    this.defaultValue = d?.defaultValue ?? \"\";\n  }\n}\n","import { CharStreams, CommonTokenStream } from \"antlr4ts\";\nimport { SimpleBooleanLexer } from \"../grammar/SimpleBooleanLexer\";\nimport {\n  ExpressionContext,\n  IdentifierExpressionContext,\n  IdentifierNumExpressionContext,\n  SimpleBooleanParser,\n} from \"../grammar/SimpleBooleanParser\";\nimport { SimpleBooleanVisitor } from \"../grammar/SimpleBooleanVisitor\";\nimport { AbstractParseTreeVisitor } from \"antlr4ts/tree/AbstractParseTreeVisitor\";\nimport { ErrorNode } from \"antlr4ts/tree/ErrorNode\";\nimport { ParseTree } from \"antlr4ts/tree/ParseTree\";\n\n// Extend the AbstractParseTreeVisitor to get default visitor behaviour\nclass ErrorVisitor\n  extends AbstractParseTreeVisitor<string[]>\n  implements SimpleBooleanVisitor<string[]> {\n  isInvalid: boolean = false;\n  boolSignals: Array<IdentifierExpressionContext> = [];\n\n  constructor(public signals: { numSignals: string[]; boolSignals: string[] }) {\n    super();\n  }\n\n  defaultResult() {\n    return [];\n  }\n\n  aggregateResult(aggregate: string[], nextResult: string[]) {\n    return aggregate.concat(nextResult);\n  }\n\n  visitErrorNode(node: ErrorNode): string[] {\n    if (this.isInvalid) {\n      return [];\n    }\n    this.isInvalid = true;\n    return [\"Invalid boolean expression\"];\n  }\n\n  visitIdentifierExpression(n: IdentifierExpressionContext): string[] {\n    const valid = this.signals.boolSignals.includes(n.text);\n    this.boolSignals.push(n);\n    return valid ? [] : [`'${n.text}' is not a defined boolean signal`];\n  }\n\n  visitIdentifierNumExpression(n: IdentifierNumExpressionContext): string[] {\n    const valid = this.signals.numSignals.includes(n.text);\n    return valid ? [] : [`'${n.text}' is not a defined numeric signal`];\n  }\n\n  visitExpression(n: ExpressionContext): string[] {\n    if (n.exception !== undefined && !this.isInvalid) {\n      this.isInvalid = true;\n      return [\"Invalid boolean expression\"];\n    }\n    return [];\n  }\n}\n\nexport type ParsedOutput = {\n  tree: ExpressionContext;\n  errors: string[];\n  boolSignals: Array<IdentifierExpressionContext>;\n};\n\nexport const parseBoolExpression = (\n  text: string,\n  signals: { numSignals: string[]; boolSignals: string[] }\n): ParsedOutput => {\n  // Create the lexer and parser\n  let inputStream = CharStreams.fromString(text);\n  let lexer = new SimpleBooleanLexer(inputStream);\n  let tokenStream = new CommonTokenStream(lexer);\n  let parser = new SimpleBooleanParser(tokenStream);\n\n  // Parse the input, where `compilationUnit` is whatever entry point you defined\n\n  let tree = parser.parse();\n\n  // Create the visitor\n  const countFunctionsVisitor = new ErrorVisitor(signals);\n  // Use the visitor entry point\n  const errors = countFunctionsVisitor.visit(tree);\n\n  if (tree.exception !== undefined) {\n    countFunctionsVisitor.isInvalid = true;\n    errors.push(\"Invalid boolean expression\");\n  }\n\n  let toProcess: ParseTree[] | undefined = [...tree.children];\n  if (toProcess !== undefined && !countFunctionsVisitor.isInvalid) {\n    while (toProcess.length !== 0) {\n      const curr: ParseTree | undefined = toProcess.pop()!;\n      if (curr instanceof ExpressionContext && curr.exception !== undefined) {\n        errors.push(\"Invalid boolean expression\");\n        break;\n      } else if (curr.childCount > 0) {\n        toProcess = toProcess.concat(\n          [...Array(curr.childCount).keys()].map((i) => curr.getChild(i))\n        );\n      }\n    }\n  }\n  return { tree, errors, boolSignals: countFunctionsVisitor.boolSignals };\n};\n","import { Checkbox } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {\n  action,\n  computed,\n  IKeyValueMap,\n  observable,\n  ObservableMap,\n} from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useRef } from \"react\";\nimport { JsonType } from \"../canvas/store\";\nimport { FieldSpec, StrFieldSpec } from \"../fields\";\nimport { ChoiceField } from \"../fields/choice-field\";\nimport { ConnModel } from \"../node/node-model\";\nimport { PropertiesTable } from \"../properties/properties-table\";\nimport { parseBoolExpression, ParsedOutput } from \"./antlr_parser\";\nimport { CustomToken, getCustomTokens, VarId } from \"./custom_parser\";\nimport { GemmaGrafcet } from \"./gemma\";\nimport { SignalType } from \"./signal\";\nimport { Step, StepType } from \"./step\";\n\ntype GemmaConn = ConnModel<Step, GemmaGrafcet, Transition>;\n\nexport class Transition {\n  @observable\n  conditionExpression: string;\n  @observable\n  priority: number;\n  @observable\n  isNegated: boolean;\n  @observable\n  savedSignalsWithMemory: ObservableMap<\n    string,\n    { behaviour: \"NC\" | \"NO\"; withMemory: boolean }\n  >;\n\n  @computed\n  get priorityChoices() {\n    return [...Array(this.connection.from.outputs.length)].map(\n      (_, i) => \"\" + (i + 1)\n    );\n  }\n\n  errors = observable.map<string, string>();\n\n  spec: { [key: string]: FieldSpec } = {\n    conditionExpression: new StrFieldSpec({ default: \"\" }),\n  };\n\n  constructor(\n    public connection: GemmaConn,\n    d?: {\n      conditionExpression?: string;\n      priority?: number;\n      isNegated?: boolean;\n      savedSignalsWithMemory?: IKeyValueMap<{\n        behaviour: \"NC\" | \"NO\";\n        withMemory: boolean;\n      }>;\n    }\n  ) {\n    this.conditionExpression = d?.conditionExpression ?? \"\";\n    this.priority = d?.priority ?? connection.from.outputs.length + 1;\n    this.isNegated = d?.isNegated ?? false;\n    this.savedSignalsWithMemory = new ObservableMap<\n      string,\n      { behaviour: \"NC\" | \"NO\"; withMemory: boolean }\n    >(d?.savedSignalsWithMemory);\n  }\n\n  @action.bound\n  setPriority = (v: string): void => {\n    const priority = parseInt(v);\n    if (this.priority === priority) {\n      return;\n    }\n    const transitions = this.connection.from.outputs;\n    if (this.priority > priority) {\n      transitions\n        .filter(\n          (t) => t.data.priority >= priority && t.data.priority < this.priority\n        )\n        .forEach((t) => t.data.priority++);\n    } else {\n      transitions\n        .filter(\n          (t) => t.data.priority <= priority && t.data.priority > this.priority\n        )\n        .forEach((t) => t.data.priority--);\n    }\n    this.priority = priority;\n  };\n\n  get from(): Step {\n    return this.connection.from.data;\n  }\n\n  get to(): Step {\n    return this.connection.to.data;\n  }\n\n  @computed\n  get connectionText(): { text: string; style?: React.CSSProperties }[] {\n    const cond = this.conditionExpression.substring(0, 20);\n    const hasNegation =\n      this.isNegated &&\n      (this.from.type === StepType.MACRO ||\n        this.from.type === StepType.ENCLOSING);\n    const showPriority =\n      hasNegation ||\n      (this.from.type !== StepType.CONTAINER &&\n        this.connection.from.outputs.length > 1);\n\n    return [\n      {\n        text: showPriority ? `${this.priority}: ` : \"\",\n        style: { textDecoration: hasNegation ? \"overline\" : undefined },\n      },\n      { text: ` ${cond}${this.conditionExpression.length > 20 ? \"...\" : \"\"}` },\n    ];\n  }\n\n  @computed\n  get toJson(): JsonType {\n    const json: JsonType = {\n      conditionExpression: this.conditionExpression,\n      priority: this.priority,\n      isNegated: this.isNegated,\n    };\n    if (this.savedSignalsWithMemory.size > 0) {\n      const _jsonSignals: {\n        [key: string]: {\n          behaviour: \"NC\" | \"NO\";\n          withMemory: boolean;\n        };\n      } = {};\n      for (const [k, v] of this.savedSignalsWithMemory.entries()) {\n        _jsonSignals[k] = { ...v };\n      }\n      json[\"savedSignalsWithMemory\"] = _jsonSignals;\n    }\n    return json;\n  }\n\n  @computed\n  get expressionTokens(): [CustomToken, number][] {\n    return getCustomTokens(this.conditionExpression);\n  }\n\n  @computed\n  get parsedExpression(): ParsedOutput | undefined {\n    const gemma = this.connection.graph.globalData;\n    try {\n      const output = parseBoolExpression(this.conditionExpression, {\n        boolSignals: gemma.boolSignals.map((s) => s.name),\n        numSignals: gemma.numSignals.map((s) => s.name),\n      });\n      return output;\n    } catch (e) {}\n    return undefined;\n  }\n\n  @computed\n  get signalsInCondition(): Array<string> {\n    let _signals: string[];\n    if (this.parsedExpression !== undefined) {\n      _signals = this.parsedExpression.boolSignals.map((s) => s.text);\n    } else {\n      _signals = this.expressionTokens\n        .map(([token, _]) => token)\n        .filter((token) => token instanceof VarId)\n        .map((s) => s.toString());\n    }\n    return [\n      ..._signals\n        .filter((token) =>\n          this.from.automationSystem.signals.some(\n            (s) => s.type === SignalType.bool && s.name === token\n          )\n        )\n        .reduce((set, token) => {\n          set.add(token.toString());\n          return set;\n        }, new Set<string>())\n        .values(),\n    ];\n  }\n\n  // @computed\n  // get signalsInConditionWithDefault(): Array<[string, boolean]> | undefined {\n  //   return this.parsedExpression?.boolSignals.map((s) => {\n  //     if (s.parent === undefined) {\n  //     }\n  //     return [s.text, false];\n  //   });\n  // }\n\n  // evaluateSignal = (s: IdentifierExpressionContext): boolean => {\n  //   let result = false;\n  //   let topOfNot = false;\n  //   let topOfAnd = false;\n\n  //   let parent = s.parent;\n  //   while (parent !== undefined) {\n  //     if (parent instanceof AndParentExpressionContext) {\n  //       topOfAnd = !topOfAnd;\n  //     } else if (parent instanceof NotExpressionContext) {\n  //       topOfNot = !topOfNot;\n  //     } else if (parent instanceof OrExpressionContext) {\n  //     } else if (parent instanceof SimpleExpressionContext) {\n  //     } else if (parent instanceof AndExpressionContext) {\n  //     }\n  //     parent = parent.parent;\n  //   }\n  //   return result;\n  // };\n\n  @computed\n  get signalsWithMemory() {\n    return this.signalsInCondition\n      .filter((s) => this.savedSignalsWithMemory.get(s)?.withMemory ?? false)\n      .map((value) => ({\n        value,\n        behaviour: this.savedSignalsWithMemory.get(value)!.behaviour,\n      }));\n  }\n\n  ConnectionView = observer(() => {\n    return (\n      <>\n        <PropertiesTable key=\"table\">\n          <tr key=\"priority\">\n            <td>Priority</td>\n            <td>\n              <ChoiceField\n                keys={this.priorityChoices}\n                value={\"\" + this.priority}\n                setValue={this.setPriority}\n              />\n            </td>\n          </tr>\n          <tr key=\"condition\">\n            <td>Condition</td>\n            <td>{<ConditionInput m={this} />}</td>\n          </tr>\n          {(this.from.type === StepType.MACRO ||\n            this.from.type === StepType.ENCLOSING) && (\n            <tr key=\"isNegated\">\n              <td>Negated</td>\n              <td>\n                {\n                  <Switch\n                    checked={this.isNegated}\n                    onChange={() => {\n                      this.isNegated = !this.isNegated;\n                    }}\n                    color=\"primary\"\n                  />\n                }\n              </td>\n            </tr>\n          )}\n        </PropertiesTable>\n        <div className=\"row\">\n          <div style={{ flex: 1 }}>\n            <h4 style={{ margin: \"0\" }}>Errors</h4>\n            {this.parsedExpression?.errors.length === 0 && \"No errors\"}\n            <ul\n              style={{\n                color: \"indianred\",\n                marginTop: \"0\",\n                paddingLeft: \"20px\",\n              }}\n              key=\"errors\"\n            >\n              {this.parsedExpression?.errors.map((err, index) => (\n                <li key={index}>{err}</li>\n              ))}\n            </ul>\n          </div>\n          {((this.from.type === StepType.MACRO && !this.isNegated) ||\n            (this.from.type === StepType.ENCLOSING && this.isNegated)) && (\n            <>\n              <div style={{ width: \"10px\" }} />\n              <div style={{ flex: 1 }}>\n                <h4 key=\"title\" style={{ margin: \"0\" }}>\n                  With Memory\n                </h4>\n                {this.signalsInCondition.length === 0 &&\n                  \"No signals in transition\"}\n                {this.signalsInCondition.map((token) => {\n                  return (\n                    <MemCheckbox\n                      key={token}\n                      token={token}\n                      map={this.savedSignalsWithMemory}\n                    />\n                  );\n                })}\n              </div>\n            </>\n          )}\n        </div>\n      </>\n    );\n  });\n}\n\nconst MemCheckbox = observer(\n  ({\n    map,\n    token,\n  }: {\n    map: ObservableMap<string, { behaviour: \"NC\" | \"NO\"; withMemory: boolean }>;\n    token: string;\n  }) => {\n    const _update = (value: {\n      behaviour: \"NC\" | \"NO\";\n      withMemory: boolean;\n    }) => {\n      if (!value.withMemory && value.behaviour === \"NO\") {\n        map.delete(token);\n      } else {\n        map.set(token, value);\n      }\n    };\n    const state = map.get(token);\n    const behaviour = state?.behaviour ?? \"NO\";\n    const withMemory = state?.withMemory ?? false;\n\n    return (\n      <div className=\"row\" style={{ alignItems: \"center\" }}>\n        <div>\n          <Checkbox\n            checked={withMemory}\n            size=\"small\"\n            color=\"primary\"\n            onChange={() => {\n              _update({ withMemory: !withMemory, behaviour });\n            }}\n          />\n        </div>\n        <div style={{ flex: 1 }}>{token}</div>\n        {withMemory && (\n          <div style={{ paddingLeft: 3, paddingRight: 3 }}>\n            <ChoiceField\n              value={behaviour}\n              keys={[\"NC\", \"NO\"]}\n              setValue={(v) => {\n                _update({ withMemory, behaviour: v });\n              }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nconst ConditionInput = observer(\n  ({\n    m,\n  }: {\n    m: {\n      conditionExpression: string;\n      expressionTokens: [CustomToken, number][];\n    };\n  }) => {\n    let prevIndex = 0;\n    let _spanStyleRef = useRef<HTMLSpanElement>(null);\n    const font = \"400 15px monospace\";\n\n    return (\n      <div style={{ width: \"206px\", position: \"relative\" }} className=\"center\">\n        <span\n          style={{\n            font,\n            position: \"absolute\",\n            top: 0,\n            padding: \"3px\",\n            textAlign: \"initial\",\n            whiteSpace: \"pre-line\",\n          }}\n          ref={_spanStyleRef}\n        >\n          {m.expressionTokens.map(([c, textIndex], index) => {\n            let color: string;\n            if (c instanceof VarId) {\n              color = \"black\";\n            } else if ([\"AND\", \"NOT\", \"OR\"].includes(c)) {\n              color = \"blue\";\n            } else {\n              color = \"brown\";\n            }\n            const whiteSpace = textIndex - prevIndex;\n            const text = \" \".repeat(whiteSpace) + c.toString();\n            prevIndex = textIndex + c.toString().length;\n            return (\n              <span key={index} style={{ color }}>\n                {text}\n              </span>\n            );\n          })}\n        </span>\n        <textarea\n          onScroll={(s) => {\n            _spanStyleRef.current!.scrollTo(0, s.currentTarget.scrollTop);\n          }}\n          className=\"multiline-input\"\n          style={{\n            font,\n            background: \"transparent\",\n            color: \"transparent\",\n            caretColor: \"black\",\n            position: \"relative\",\n          }}\n          spellCheck={false}\n          value={m.conditionExpression}\n          onChange={(e) => {\n            const value = e.currentTarget.value;\n            if (value.match(/^\\s$/) === null) {\n              m.conditionExpression = value.replace(/\\s[^\\S\\r\\n]/g, \" \");\n            }\n          }}\n        ></textarea>\n      </div>\n    );\n  }\n);\n","\nexport abstract class SourceItem {\n  constructor(public name: string) {}\n\n  when(f: {file: (f: SourceFile) => void, dir: (f: SourceDirectory) => void}) {\n    if (this instanceof SourceFile) {\n      f.file(this)\n    } else if (this instanceof SourceDirectory) {\n      f.dir(this)\n    }\n  }\n}\n\nexport class SourceFile extends SourceItem {\n  constructor(name: string, public content: string) {\n    super(name);\n  }\n}\n\nexport class SourceDirectory extends SourceItem {\n  constructor(name: string, public items: SourceItem[]) {\n    super(name);\n  }\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Draggable, { DraggableData, DraggableEvent } from \"react-draggable\";\nimport styled from \"styled-components\";\nimport { NodeModel } from \"./node-model\";\nimport { useStore } from \"../App\";\n\nexport type Shape = (number | undefined)[];\n\nconst StyledNode = styled.div`\n  z-index: 1;\n  cursor: pointer;\n  position: absolute;\n  box-shadow: 0 1px 4px 1px #eee;\n  background: #fff;\n  border-radius: 6;\n  border: 1.5px solid;\n`;\n\ntype NodeViewProps = { node: NodeModel<any, any, any> };\nexport const NodeView: React.FC<NodeViewProps> = observer((params) => {\n  const { node, children } = params;\n  const rootStore = useStore();\n  const onDrag = React.useCallback(\n    (_: DraggableEvent, data: DraggableData) => {\n      node.move(data.deltaX, data.deltaY);\n    },\n    [node]\n  );\n  const selectingInput = rootStore.selectingInputFor !== undefined;\n  const isValidInput =\n    selectingInput && rootStore.selectingInputFor!.data.isValidInput(node);\n  const isSelected = rootStore.selectedNode === node;\n\n  const onClick = React.useCallback(\n    (_: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      console.log(node);\n      if (selectingInput) {\n        if (isValidInput) {\n          rootStore.assignInput(node);\n        }\n      } else {\n        rootStore.selectNode(node);\n      }\n    },\n    [rootStore, node, selectingInput, isValidInput]\n  );\n\n  if (node.isHidden && !rootStore.showHidden) {\n    return <></>;\n  }\n  // const [_, setDivRef] = React.useState<HTMLDivElement | null>(null);\n  const { x, y } = node;\n\n  let style: React.CSSProperties = {};\n  if (isSelected) {\n    style[\"boxShadow\"] = \"rgb(110 110 110) 1px 1.5px 3px 1px\";\n  }\n  if (selectingInput) {\n    style[\"cursor\"] = isValidInput ? \"pointer\" : \"not-allowed\";\n  }\n  if (node.isHidden) {\n    style[\"opacity\"] = 0.1;\n  }\n\n  return (\n    <Draggable\n      onDrag={onDrag}\n      position={{\n        // TODO: improve x, y with support for nested children\n        x: x - (node.data.parent?.x ?? 0),\n        y: y - (node.data.parent?.y ?? 0),\n      }}\n      bounds=\"parent\"\n    >\n      <StyledNode\n        ref={(e) => {\n          if (e === null) return;\n          node.setElement(e);\n        }}\n        onClick={onClick}\n        style={style}\n      >\n        <node.data.View children={children} />\n      </StyledNode>\n    </Draggable>\n  );\n});\n","import { templateGemmaGrafcet, templateGlobals } from \"./gemma-templates\";\nimport {\n  GlobalData,\n  RootStoreModel,\n  DataBuilder,\n  JsonType,\n  GraphWarnings,\n} from \"../canvas/store\";\nimport { computed, IObservableArray, observable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Transition } from \"./transition\";\nimport { Step, StepType, ProcedureType, BaseStep } from \"./step\";\nimport { NodeModel } from \"../node/node-model\";\nimport { IndexedDB } from \"../canvas/persistence\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./gemma-styles.css\";\nimport { SourceDirectory, SourceFile } from \"../codegen/file-system\";\nimport { macroStepTemplate } from \"./macro-step\";\nimport { NodeView } from \"../node/node\";\nimport { Signal, SignalRow, SignalType } from \"./signal\";\n\nexport class GemmaGrafcet implements GlobalData<Step> {\n  constructor(\n    private graph: RootStoreModel<Step, GemmaGrafcet, Transition>,\n    json?: JsonType\n  ) {\n    let signals: Signal[] = [];\n    if (Array.isArray(json?.signals)) {\n      signals = json?.signals\n        .map((s) =>\n          typeof s === \"object\" ? Signal.fromJson(this, s) : undefined\n        )\n        .filter((s) => s !== undefined) as Signal[];\n    }\n    this.signals = observable.array<Signal>(signals);\n  }\n\n  canAddNode = (nodeType: string): boolean => {\n    return true;\n  };\n\n  initState(): void {\n    const nodes = [...this.graph.nodes.values()];\n    const _selected = nodes.find(\n      (n) => n.data.type !== StepType.CONTAINER && !n.isHidden\n    );\n    if (_selected !== undefined) {\n      this.graph.selectNode(_selected);\n    }\n    const _selectedTrans = nodes\n      .flatMap((n) => n.inputs)\n      .find((t) => !t.isHidden);\n    if (_selectedTrans !== undefined) {\n      this.graph.selectConnection(_selectedTrans);\n    }\n\n    this.fFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.F\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 600, y: 0 })!;\n    this.fFamily.setName(\"F family\");\n    this.fFamily.data.family = ProcedureType.F;\n\n    this.aFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.A\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 0 })!;\n    this.aFamily.setName(\"A family\");\n    this.aFamily.data.family = ProcedureType.A;\n\n    this.dFamily =\n      nodes.find(\n        (n) =>\n          n.data.type === StepType.CONTAINER &&\n          n.data.family === ProcedureType.D\n      ) ?? this.graph.addNode(StepType.CONTAINER, { x: 0, y: 500 })!;\n    this.dFamily.setName(\"D family\");\n    this.dFamily.data.family = ProcedureType.D;\n  }\n\n  fFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  aFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n  dFamily?: NodeModel<Step, GemmaGrafcet, Transition>;\n\n  @computed\n  get steps(): Step[] {\n    return [...this.graph.nodes.values()]\n      .filter((node) => !node.isHidden && node.data.type !== StepType.CONTAINER)\n      .sort((a, b) => a.data.id - b.data.id)\n      .map((node) => node.data);\n  }\n\n  readonly signals: IObservableArray<Signal>;\n\n  @computed\n  get numSignals(): Signal[] {\n    return this.signals.filter((s) => s.type !== SignalType.bool);\n  }\n\n  @computed\n  get boolSignals(): Signal[] {\n    return this.signals.filter((s) => s.type === SignalType.bool);\n  }\n\n  @computed\n  get initialStep(): Step | undefined {\n    return this.steps.find((s) => s.isInitial);\n  }\n\n  @computed\n  get generateMainFile(): string {\n    return templateGemmaGrafcet(this);\n  }\n\n  @computed\n  get generateSourceCode(): SourceDirectory {\n    const main = templateGemmaGrafcet(this);\n    const globals = templateGlobals(this.signals);\n    const files = [\n      new SourceFile(\"GEMMA.txt\", main),\n      new SourceFile(\"GVL.txt\", globals),\n    ];\n\n    for (const s of this.steps.values()) {\n      // if (s.type === StepType.ENCLOSING) {\n      //   files.push(\n      //     new SourceFile(s.name + \"_FB.txt\", enclosingStepTemplate(s))\n      //   );\n      // } else\n      if (s.type === StepType.ENCLOSING || s.type === StepType.MACRO) {\n        files.push(new SourceFile(s.name + \"_FB.txt\", macroStepTemplate(s)));\n      }\n    }\n\n    return new SourceDirectory(\"gemma_grafcet\", files);\n  }\n\n  @computed\n  get warnings(): GraphWarnings {\n    const signalsErrors = new Set<string>();\n    for (const s of this.signals) {\n      if (!!s.errors.Name) {\n        signalsErrors.add(`${s.name}. Name: ${s.errors[\"Name\"]}.`);\n      }\n      if (!!s.errors[\"Default Value\"]) {\n        signalsErrors.add(\n          `${s.name}. Default value: ${s.errors[\"Default Value\"]}.`\n        );\n      }\n    }\n\n    const hasInitialStep = this.steps.some((s) => s.isInitial);\n    const stepsWithNoInputTransitions = this.steps.filter(\n      (s) => !s.node.inputs.some((n) => !n.isHidden)\n    );\n    const stepsWithNoOutputTransitions = this.steps.filter(\n      (s) => !s.node.outputs.some((n) => !n.isHidden)\n    );\n    const stepsErrors = [];\n    if (!hasInitialStep) {\n      stepsErrors.push(\"No initial step.\");\n    }\n    if (stepsWithNoOutputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no output transitions: ${stepsWithNoOutputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n    if (stepsWithNoInputTransitions.length !== 0) {\n      stepsErrors.push(\n        `Steps with no input transitions: ${stepsWithNoInputTransitions\n          .map((s) => s.name)\n          .join(\", \")}`\n      );\n    }\n\n    const transitionErrors = this.steps\n      .flatMap((s) => s.transitions)\n      .filter(\n        (t) =>\n          t.parsedExpression?.errors !== undefined &&\n          t.parsedExpression?.errors.length > 0\n      )\n      .map((t) => [\n        `${t.from.name} -> ${t.to.name}`,\n        t.parsedExpression?.errors,\n      ]);\n\n    return {\n      Steps: stepsErrors,\n      Transitions: transitionErrors as any,\n      Signals: [...signalsErrors.values()],\n    };\n  }\n\n  @computed\n  get toJson(): JsonType {\n    return {\n      signals: this.signals.map((s) => s.toJson),\n    };\n  }\n\n  View = observer(() => {\n    const [showDelete, setShowDelete] = useState(false);\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h3 style={{ margin: \"5px 0 10px 5px\" }}>Signals</h3>\n          <Button onClick={(_) => setShowDelete(!showDelete)}>\n            {showDelete ? \"Hide Delete\" : \"Show Delete\"}\n            <FontAwesomeIcon\n              style={{ paddingLeft: \"7px\" }}\n              icon={\"trash-alt\"}\n              color={\"#000\"}\n            />\n          </Button>\n        </div>\n        <Table\n          id=\"signals-table\"\n          size=\"small\"\n          aria-label=\"a dense table\"\n          stickyHeader={true}\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Size</TableCell>\n              <TableCell>Default</TableCell>\n              {showDelete && <TableCell>Delete</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.signals.map((s, index) => (\n              <SignalRow\n                signal={s}\n                key={index}\n                showDelete={showDelete}\n                removeSignal={(s) => this.signals.remove(s)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n        <Button\n          style={{ alignSelf: \"flex-end\" }}\n          onClick={(_) => this.signals.push(new Signal(this))}\n        >\n          Add Signal\n        </Button>\n      </div>\n    );\n  });\n\n  CanvasView = observer(() => {\n    const nodes = [...this.graph.nodes.values()];\n    const _nodesFromFamily = (family: ProcedureType) => {\n      return nodes\n        .filter(\n          (n) => n.data.family === family && n.data.type !== StepType.CONTAINER\n        )\n        .map((n) => {\n          return <NodeView node={n} key={n.key} />;\n        });\n    };\n\n    const _color = {\n      [ProcedureType.A]: { color: \"#ecf5ff\", size: { w: 600, h: 500 } },\n      [ProcedureType.D]: { color: \"#ffd6d6\", size: { w: 600, h: 500 } },\n      [ProcedureType.F]: { color: \"#ebffec\", size: { w: 600, h: 1000 } },\n    };\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\" }}>\n        {nodes\n          .filter((n) => n.data.type === StepType.CONTAINER)\n          .map((n) => {\n            const _d = _color[n.data.family]!;\n            return (\n              <div\n                style={{\n                  background: _d.color,\n                  width: _d.size.w,\n                  height: _d.size.h,\n                  position: \"absolute\",\n                  top: n.y,\n                  left: n.x,\n                }}\n                key={n.key}\n                ref={(e) => {\n                  if (e === null) return;\n                  n.setSize(e.getBoundingClientRect());\n                }}\n              >\n                {_nodesFromFamily(n.data.family)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  });\n}\n\nexport const gemmaBuilders: DataBuilder<Step, GemmaGrafcet, Transition> = {\n  graphBuilder: (g, json) => new GemmaGrafcet(g, json),\n  nodeBuilder: (n, json) => {\n    console.log(json);\n    const type = json !== undefined ? json[\"type\"] : undefined;\n    if (typeof type === \"string\" && Object.keys(StepType).includes(type)) {\n      return new BaseStep(n, json);\n    }\n\n    return new BaseStep(n);\n  },\n  connectionBuilder: (c, json) => new Transition(c, json),\n};\n\nexport const make5NodesGraph = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n  });\n\n  const s1 = rootStore.addNode(StepType.SIMPLE, { x: 72, y: 60 });\n  if (s1 !== undefined) {\n    s1.data.isInitial = true;\n  }\n  const s2 = rootStore.addNode(StepType.MACRO, { x: 261, y: 170 });\n\n  [\n    s1,\n    s2,\n    rootStore.addNode(StepType.ENCLOSING, { x: 441, y: 316 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 211, y: 410 }),\n    rootStore.addNode(StepType.SIMPLE, { x: 441, y: 500 }),\n  ].forEach((s, index) => s?.setName(`S${index + 1}`));\n\n  s1!.data.family = ProcedureType.A;\n  s2!.data.family = ProcedureType.D;\n  rootStore.selectNode(s1!);\n\n  rootStore.selectingInput(s1!);\n  const conn = rootStore.assignInput(s2!);\n\n  rootStore.selectConnection(conn);\n  rootStore.globalData.signals.push(\n    new Signal(rootStore.globalData, { name: \"\" })\n  );\n  return rootStore;\n};\n\nexport const makeBaseGemmaTemplate = (\n  db: IndexedDB\n): RootStoreModel<Step, GemmaGrafcet, Transition> => {\n  const rootStore = new RootStoreModel<Step, GemmaGrafcet, Transition>({\n    db,\n    builders: gemmaBuilders,\n    hideOnDelete: true,\n  });\n\n  const nodesRaw: {\n    [key in ProcedureType]: {\n      [key: string]: { type: StepType; x: number; y: number };\n    };\n  } = {\n    [ProcedureType.A]: {\n      A1: { type: StepType.SIMPLE, x: 517, y: 142 },\n      A2: { type: StepType.SIMPLE, x: 240, y: 417 },\n      A3: { type: StepType.SIMPLE, x: 418, y: 406 },\n      A4: { type: StepType.SIMPLE, x: 479, y: 314 },\n      A5: { type: StepType.MACRO, x: 86, y: 325 },\n      A6: { type: StepType.SIMPLE, x: 156, y: 31 },\n      A7: { type: StepType.MACRO, x: 239, y: 176 },\n    },\n    [ProcedureType.F]: {\n      F1: { type: StepType.MACRO, x: 743, y: 709 },\n      F2: { type: StepType.MACRO, x: 966, y: 683 },\n      F3: { type: StepType.MACRO, x: 704, y: 171 },\n      F4: { type: StepType.ENCLOSING, x: 848, y: 29 },\n      F5: { type: StepType.ENCLOSING, x: 979, y: 478 },\n      F6: { type: StepType.ENCLOSING, x: 729, y: 876 },\n    },\n    [ProcedureType.D]: {\n      D1: { type: StepType.MACRO, x: 75, y: 895 },\n      D2: { type: StepType.SIMPLE, x: 221, y: 573 },\n      D3: { type: StepType.ENCLOSING, x: 309, y: 735 },\n    },\n  };\n\n  const nodes: {\n    [key: string]: NodeModel<Step, GemmaGrafcet, Transition>;\n  } = {};\n\n  for (const [family, nn] of Object.entries(nodesRaw)) {\n    for (const [k, v] of Object.entries(nn)) {\n      const n = rootStore.addNode(v.type, { x: v.x, y: v.y });\n      n?.setName(k);\n      n!.data.family = family as ProcedureType;\n      nodes[k] = n!;\n      if (k === \"A6\") {\n        n!.data.isInitial = true;\n      }\n    }\n  }\n\n  const connections = {\n    A1: [\"F2\", \"F1\", \"F5\", \"F4\"],\n    A2: [\"A1\"],\n    A3: [\"A4\"],\n    A4: [\"F1\"],\n    A5: [\"A6\", \"A7\"],\n    A6: [\"A1\"],\n    A7: [\"A4\"],\n    F1: [\"F3\", \"F4\", \"F5\", \"F6\", \"A2\", \"A3\", \"D1\", \"D2\", \"D3\"],\n    F2: [\"F1\"],\n    F3: [\"A1\"],\n    F4: [\"A6\"],\n    F5: [\"F1\", \"F4\"],\n    F6: [\"F1\", \"D1\"],\n    D1: [\"D2\", \"A5\"],\n    D2: [\"A5\"],\n    D3: [\"A2\", \"A3\"],\n  };\n\n  for (const [from, v] of Object.entries(connections)) {\n    for (const to of v) {\n      rootStore.addConnection(nodes[from], nodes[to]);\n    }\n  }\n\n  rootStore.addConnection(rootStore.globalData.fFamily!, nodes[\"D1\"]!, {\n    conditionExpression: \"I1 AND I2\",\n  });\n\n  const a1 = nodes[\"A1\"]!;\n  rootStore.selectNode(a1);\n  rootStore.selectConnection(a1.outputs[0]);\n\n  return rootStore;\n};\n","import { MacroStep, EnclosingStep } from \"./step\";\n\nexport const macroStepTemplate = (model: MacroStep | EnclosingStep) =>\n  `\\\nFUNCTION_BLOCK ${model.name}_FB\n\n// Variable declaration\nVAR_INPUT\n  Initialization:BOOL;\nEND_VAR\n\nVAR_OUTPUT\n  Complete:BOOL;\nEND_VAR\n\n// FB behavior\nIF Initialization THEN\n  Complete:=FALSE;\n  //Initialization actions\n\nEND_IF\n\n//Nested behavior\n\n//Termination of the nested behavior\nComplete:=TRUE;\n`;\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport React, { useCallback, useState } from \"react\";\nimport { MainCanvas } from \"./canvas/canvas\";\nimport { ConfigView } from \"./canvas/config-view\";\nimport { createIndexedDB, IndexedDB } from \"./canvas/persistence\";\nimport { RootStoreModel, GlobalData, GraphWarnings } from \"./canvas/store\";\nimport { NodeData, ConnectionData } from \"./node/node-model\";\nimport { PropertiesView } from \"./properties/properties-view\";\nimport { gemmaBuilders, makeBaseGemmaTemplate } from \"./step/gemma\";\nimport { importJson } from \"./utils\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const storeContext = React.createContext<RootStoreModel<\n  any,\n  any,\n  any\n> | null>(null);\n\nexport function useStore<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>() {\n  const store = React.useContext<RootStoreModel<D, G, C> | null>(storeContext);\n  if (!store) {\n    throw Error(\"useStore should be used inside a Store provider.\");\n  }\n  return store;\n}\n\ntype RootStore = RootStoreModel<any, any, any>;\n\nexport function App() {\n  const [globalDB, setDB] = React.useState<IndexedDB | null>(null);\n  const [store, setStore] = React.useState<RootStore | null>(null);\n  (window as any).store = store;\n  const _isReset = store && store.resetStore;\n  React.useEffect(() => {\n    if (!store) {\n      createIndexedDB().then(async (db) => {\n        setDB(db);\n        const graphs = await db.fetchGraphs();\n\n        let _store: RootStore;\n        const graph = graphs[0];\n        if (graph !== undefined) {\n          const graphExt = await db.loadGraph(graph.key);\n          _store = new RootStoreModel({\n            db,\n            json: { graph, ...graphExt },\n            hideOnDelete: true,\n            builders: gemmaBuilders,\n          });\n        } else {\n          _store = makeBaseGemmaTemplate(db);\n        }\n        setStore(_store);\n      });\n    } else if (store.resetStore) {\n      setStore(null);\n    }\n  }, [store, _isReset]);\n\n  if (!store) {\n    return <div className=\"center\">Loading...</div>;\n  }\n\n  return (\n    <storeContext.Provider value={store}>\n      <div\n        className=\"row\"\n        style={{ background: \"rgba(250,250,250,0.7)\", height: \"100%\" }}\n      >\n        {/* <div className=\"col\">\n          <MainMenu items={Object.keys(rootStore.builders.nodeBuilder)} />\n        </div> */}\n        <div\n          className=\"col\"\n          style={{\n            width: \"0px\",\n            background: \"rgba(250,250,250,0.7)\",\n            flex: \"1 0 auto\",\n          }}\n        >\n          <div className=\"row\" style={{ minHeight: 0, flex: 1 }}>\n            <div className=\"col\" style={{ flex: 1 }}>\n              <TopMenu store={store} globalDB={globalDB!} setStore={setStore} />\n              <MainCanvas />\n            </div>\n            <ConfigView />\n          </div>\n          <PropertiesView />\n        </div>\n      </div>\n    </storeContext.Provider>\n  );\n}\n\nconst ToggleShowHidden = observer(({ store }: { store: RootStore }) => (\n  <Button\n    onClick={(_) => {\n      store.showHidden = !store.showHidden;\n    }}\n  >\n    {store.showHidden ? \"Hide Deleted\" : \"Show Deleted\"}\n  </Button>\n));\n\nfunction TopMenu<\n  D extends NodeData<D, G, C>,\n  G extends GlobalData<D>,\n  C extends ConnectionData<D>\n>({\n  store,\n  setStore,\n  globalDB,\n}: {\n  store: RootStoreModel<D, G, C>;\n  globalDB: IndexedDB;\n  setStore: (store: RootStore) => void;\n}) {\n  const [isResetDialogOpen, setIsResetDialogOpen] = useState(false);\n  const [isWarningsDialogOpen, setIsWarningsDialogOpen] = useState(false);\n  const toggleDialog = useCallback(() => {\n    setIsResetDialogOpen(!isResetDialogOpen);\n  }, [isResetDialogOpen]);\n\n  return (\n    <div\n      className=\"row\"\n      style={{\n        justifyContent: \"space-between\",\n        borderBottom: \"rgb(221 220 220) solid 1.5px\",\n      }}\n    >\n      <ToggleShowHidden store={store} />\n      <div\n        className=\"row\"\n        style={{\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          onClick={(_) => {\n            store.saveModel();\n          }}\n        >\n          Save\n        </Button>\n        <Button onClick={toggleDialog}>Reset</Button>\n        <Dialog\n          open={isResetDialogOpen}\n          onClose={toggleDialog}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            Reset Diagram State\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Are you sure you want to reset the diagram state? All changes will\n              be lost.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={toggleDialog} color=\"primary\">\n              Close\n            </Button>\n            <Button\n              onClick={async (_) => {\n                const _store = makeBaseGemmaTemplate(globalDB);\n                setStore(_store);\n                toggleDialog();\n              }}\n              color=\"primary\"\n            >\n              Reset Diagram\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button\n          onClick={(_) => {\n            const hasWarnings = Object.values(store.globalData.warnings).some(\n              (v) => v.length > 0\n            );\n            if (hasWarnings) {\n              setIsWarningsDialogOpen(true);\n            } else {\n              store.downloadModel();\n            }\n          }}\n        >\n          Export\n        </Button>\n        <WarningsDialog\n          open={isWarningsDialogOpen}\n          toggleDialog={() => setIsWarningsDialogOpen(!isWarningsDialogOpen)}\n          warnings={store.globalData.warnings}\n          accept={store.downloadModel}\n        />\n        <Button>\n          <label\n            htmlFor=\"import-file-input\"\n            style={{ margin: 0, width: \"100%\", cursor: \"pointer\" }}\n          >\n            Import\n          </label>\n          <input\n            type=\"file\"\n            id=\"import-file-input\"\n            accept=\"application/json\"\n            style={{ display: \"none\" }}\n            onChange={async (e) => {\n              const json = await importJson(e);\n              if (typeof json === \"string\") {\n                try {\n                  const val = JSON.parse(json);\n                  const _store = new RootStoreModel({\n                    db: globalDB,\n                    json: val,\n                    builders: gemmaBuilders,\n                    hideOnDelete: true,\n                  });\n                  setStore(_store);\n                } catch (e) {\n                  console.log(e);\n                }\n              }\n            }}\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport const WarningsDialog = ({\n  open,\n  toggleDialog,\n  warnings,\n  accept,\n}: {\n  open: boolean;\n  toggleDialog: () => void;\n  warnings: GraphWarnings;\n  accept: () => void;\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">Download Diagram</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          There are some warnings in the diagram configuration. Do you want to\n          continue with the download?\n        </DialogContentText>\n        {Object.entries(warnings).map(([title, warnings]) => {\n          if (warnings.length === 0) {\n            return <div key={title}></div>;\n          }\n          return (\n            <div key={title} className=\"warning-list\">\n              <h3>{title}</h3>\n              <ul>\n                {warnings[0].length === 2 && Array.isArray(warnings[0][1])\n                  ? (warnings as [string, string[]][]).map(\n                      ([sectionTitle, warnings], index) => (\n                        <div key={sectionTitle}>\n                          <h5>{sectionTitle}</h5>\n                          {warnings.map((w, index) => (\n                            <li key={`${sectionTitle}${index}`}>{w}</li>\n                          ))}\n                        </div>\n                      )\n                    )\n                  : (warnings as string[]).map((w, index) => (\n                      <li key={`${title}${index}`}>{w}</li>\n                    ))}\n              </ul>\n            </div>\n          );\n        })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={toggleDialog} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={accept} color=\"primary\">\n          Continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlibrary.add(faChevronDown, faChevronUp, faTrashAlt, faEye, faEyeSlash);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}